/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdnapi

import (
	"encoding/json"
)

// checks if the StatusCodeReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusCodeReport{}

// StatusCodeReport struct for StatusCodeReport
type StatusCodeReport struct {
	Statistics *StatusCodeReportStatistics `json:"statistics,omitempty"`
	Charts *StatusCodeReportCharts `json:"charts,omitempty"`
}

// NewStatusCodeReport instantiates a new StatusCodeReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusCodeReport() *StatusCodeReport {
	this := StatusCodeReport{}
	return &this
}

// NewStatusCodeReportWithDefaults instantiates a new StatusCodeReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusCodeReportWithDefaults() *StatusCodeReport {
	this := StatusCodeReport{}
	return &this
}

// GetStatistics returns the Statistics field value if set, zero value otherwise.
func (o *StatusCodeReport) GetStatistics() StatusCodeReportStatistics {
	if o == nil || IsNil(o.Statistics) {
		var ret StatusCodeReportStatistics
		return ret
	}
	return *o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusCodeReport) GetStatisticsOk() (*StatusCodeReportStatistics, bool) {
	if o == nil || IsNil(o.Statistics) {
		return nil, false
	}
	return o.Statistics, true
}

// HasStatistics returns a boolean if a field has been set.
func (o *StatusCodeReport) HasStatistics() bool {
	if o != nil && !IsNil(o.Statistics) {
		return true
	}

	return false
}

// SetStatistics gets a reference to the given StatusCodeReportStatistics and assigns it to the Statistics field.
func (o *StatusCodeReport) SetStatistics(v StatusCodeReportStatistics) {
	o.Statistics = &v
}

// GetCharts returns the Charts field value if set, zero value otherwise.
func (o *StatusCodeReport) GetCharts() StatusCodeReportCharts {
	if o == nil || IsNil(o.Charts) {
		var ret StatusCodeReportCharts
		return ret
	}
	return *o.Charts
}

// GetChartsOk returns a tuple with the Charts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusCodeReport) GetChartsOk() (*StatusCodeReportCharts, bool) {
	if o == nil || IsNil(o.Charts) {
		return nil, false
	}
	return o.Charts, true
}

// HasCharts returns a boolean if a field has been set.
func (o *StatusCodeReport) HasCharts() bool {
	if o != nil && !IsNil(o.Charts) {
		return true
	}

	return false
}

// SetCharts gets a reference to the given StatusCodeReportCharts and assigns it to the Charts field.
func (o *StatusCodeReport) SetCharts(v StatusCodeReportCharts) {
	o.Charts = &v
}

func (o StatusCodeReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusCodeReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Statistics) {
		toSerialize["statistics"] = o.Statistics
	}
	if !IsNil(o.Charts) {
		toSerialize["charts"] = o.Charts
	}
	return toSerialize, nil
}

type NullableStatusCodeReport struct {
	value *StatusCodeReport
	isSet bool
}

func (v NullableStatusCodeReport) Get() *StatusCodeReport {
	return v.value
}

func (v *NullableStatusCodeReport) Set(val *StatusCodeReport) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusCodeReport) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusCodeReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusCodeReport(val *StatusCodeReport) *NullableStatusCodeReport {
	return &NullableStatusCodeReport{value: val, isSet: true}
}

func (v NullableStatusCodeReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusCodeReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


