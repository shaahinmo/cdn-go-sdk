/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdnapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the TrafficStatisticsTraffics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrafficStatisticsTraffics{}

// TrafficStatisticsTraffics struct for TrafficStatisticsTraffics
type TrafficStatisticsTraffics struct {
	Saved int64 `json:"saved"`
	Bypass *int64 `json:"bypass,omitempty"`
	Top time.Time `json:"top"`
	Total int64 `json:"total"`
}

type _TrafficStatisticsTraffics TrafficStatisticsTraffics

// NewTrafficStatisticsTraffics instantiates a new TrafficStatisticsTraffics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrafficStatisticsTraffics(saved int64, top time.Time, total int64) *TrafficStatisticsTraffics {
	this := TrafficStatisticsTraffics{}
	this.Saved = saved
	this.Top = top
	this.Total = total
	return &this
}

// NewTrafficStatisticsTrafficsWithDefaults instantiates a new TrafficStatisticsTraffics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrafficStatisticsTrafficsWithDefaults() *TrafficStatisticsTraffics {
	this := TrafficStatisticsTraffics{}
	return &this
}

// GetSaved returns the Saved field value
func (o *TrafficStatisticsTraffics) GetSaved() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Saved
}

// GetSavedOk returns a tuple with the Saved field value
// and a boolean to check if the value has been set.
func (o *TrafficStatisticsTraffics) GetSavedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Saved, true
}

// SetSaved sets field value
func (o *TrafficStatisticsTraffics) SetSaved(v int64) {
	o.Saved = v
}

// GetBypass returns the Bypass field value if set, zero value otherwise.
func (o *TrafficStatisticsTraffics) GetBypass() int64 {
	if o == nil || IsNil(o.Bypass) {
		var ret int64
		return ret
	}
	return *o.Bypass
}

// GetBypassOk returns a tuple with the Bypass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficStatisticsTraffics) GetBypassOk() (*int64, bool) {
	if o == nil || IsNil(o.Bypass) {
		return nil, false
	}
	return o.Bypass, true
}

// HasBypass returns a boolean if a field has been set.
func (o *TrafficStatisticsTraffics) HasBypass() bool {
	if o != nil && !IsNil(o.Bypass) {
		return true
	}

	return false
}

// SetBypass gets a reference to the given int64 and assigns it to the Bypass field.
func (o *TrafficStatisticsTraffics) SetBypass(v int64) {
	o.Bypass = &v
}

// GetTop returns the Top field value
func (o *TrafficStatisticsTraffics) GetTop() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Top
}

// GetTopOk returns a tuple with the Top field value
// and a boolean to check if the value has been set.
func (o *TrafficStatisticsTraffics) GetTopOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Top, true
}

// SetTop sets field value
func (o *TrafficStatisticsTraffics) SetTop(v time.Time) {
	o.Top = v
}

// GetTotal returns the Total field value
func (o *TrafficStatisticsTraffics) GetTotal() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *TrafficStatisticsTraffics) GetTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *TrafficStatisticsTraffics) SetTotal(v int64) {
	o.Total = v
}

func (o TrafficStatisticsTraffics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrafficStatisticsTraffics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["saved"] = o.Saved
	if !IsNil(o.Bypass) {
		toSerialize["bypass"] = o.Bypass
	}
	toSerialize["top"] = o.Top
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *TrafficStatisticsTraffics) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"saved",
		"top",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTrafficStatisticsTraffics := _TrafficStatisticsTraffics{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTrafficStatisticsTraffics)

	if err != nil {
		return err
	}

	*o = TrafficStatisticsTraffics(varTrafficStatisticsTraffics)

	return err
}

type NullableTrafficStatisticsTraffics struct {
	value *TrafficStatisticsTraffics
	isSet bool
}

func (v NullableTrafficStatisticsTraffics) Get() *TrafficStatisticsTraffics {
	return v.value
}

func (v *NullableTrafficStatisticsTraffics) Set(val *TrafficStatisticsTraffics) {
	v.value = val
	v.isSet = true
}

func (v NullableTrafficStatisticsTraffics) IsSet() bool {
	return v.isSet
}

func (v *NullableTrafficStatisticsTraffics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrafficStatisticsTraffics(val *TrafficStatisticsTraffics) *NullableTrafficStatisticsTraffics {
	return &NullableTrafficStatisticsTraffics{value: val, isSet: true}
}

func (v NullableTrafficStatisticsTraffics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrafficStatisticsTraffics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


