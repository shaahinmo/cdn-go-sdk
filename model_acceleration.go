/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdnapi

import (
	"encoding/json"
)

// checks if the Acceleration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Acceleration{}

// Acceleration struct for Acceleration
type Acceleration struct {
	Status *string `json:"status,omitempty"`
	Extensions []string `json:"extensions,omitempty"`
}

// NewAcceleration instantiates a new Acceleration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcceleration() *Acceleration {
	this := Acceleration{}
	return &this
}

// NewAccelerationWithDefaults instantiates a new Acceleration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccelerationWithDefaults() *Acceleration {
	this := Acceleration{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Acceleration) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Acceleration) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Acceleration) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Acceleration) SetStatus(v string) {
	o.Status = &v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *Acceleration) GetExtensions() []string {
	if o == nil || IsNil(o.Extensions) {
		var ret []string
		return ret
	}
	return o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Acceleration) GetExtensionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Extensions) {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *Acceleration) HasExtensions() bool {
	if o != nil && !IsNil(o.Extensions) {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given []string and assigns it to the Extensions field.
func (o *Acceleration) SetExtensions(v []string) {
	o.Extensions = v
}

func (o Acceleration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Acceleration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Extensions) {
		toSerialize["extensions"] = o.Extensions
	}
	return toSerialize, nil
}

type NullableAcceleration struct {
	value *Acceleration
	isSet bool
}

func (v NullableAcceleration) Get() *Acceleration {
	return v.value
}

func (v *NullableAcceleration) Set(val *Acceleration) {
	v.value = val
	v.isSet = true
}

func (v NullableAcceleration) IsSet() bool {
	return v.isSet
}

func (v *NullableAcceleration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcceleration(val *Acceleration) *NullableAcceleration {
	return &NullableAcceleration{value: val, isSet: true}
}

func (v NullableAcceleration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcceleration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


