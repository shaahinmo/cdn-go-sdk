openapi: 3.0.0
info:
  title: ArvanCloud CDN Services
  version: 4.153.0
  x-logo:
    url: /images/other/arvan-api-docs-logo.svg
    backgroundColor: white
    altText: ArvanCloud
servers:
- description: Production server (uses live data)
  url: https://napi.arvancloud.ir/cdn/4.0
security:
- UserToken: []
- ApiKey: []
paths:
  /domains:
    get:
      description: "Leaving the 'search' empty, will return all domains. Otherwise,\
        \ it will filter domains containing the search keyword."
      operationId: domains.index
      parameters:
      - description: Search term
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Filter domains by plans
        explode: true
        in: query
        name: plans
        required: false
        schema:
          items:
            $ref: "#/components/schemas/Plan"
          type: array
        style: form
      - description: Filter domains by statuses
        explode: true
        in: query
        name: statuses
        required: false
        schema:
          items:
            enum:
            - active
            - inactive
            type: string
          type: array
        style: form
      - description: Sort domains by a specific field
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          enum:
          - plan
          - updated_at
          - status
          - name
          type: string
        style: form
      - description: Order domains in ascending or descending order
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Fetch only domains which have aggregated reports enabled
        explode: true
        in: query
        name: aggr_report
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_index_200_response"
          description: Lists all domains belongs to the account
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
      summary: Get the list of domains
      tags:
      - Domain
  /domains/dns-service:
    post:
      operationId: domains.store
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainStore"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainResponse"
          description: Successfully created the new domain
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Create new domain
      tags:
      - Domain
  /domains/{domain}:
    delete:
      operationId: domains.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Remove the domain
      tags:
      - Domain
    get:
      operationId: domains.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainResponse"
          description: Detailed information of the domain
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get information of the domain
      tags:
      - Domain
  /domains/{domain}/ns-keys:
    delete:
      operationId: domains.nameservers.reset
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NsKeysResponse"
          description: Successfully reset to deafult NS values
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Failed
      summary: Reset custom Nameserver keys to the default values for the domain
      tags:
      - Domain
    put:
      operationId: domains.nameservers.set
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NsKeys"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NsKeysResponse"
          description: Successfully set custom NS values
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Failed
      summary: Set custom NS records for the domain
      tags:
      - Domain
  /domains/{domain}/ns-keys/check:
    get:
      operationId: domains.nameservers.check
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_nameservers_check_200_response"
          description: Successfully retrieve list of NS values
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Check NS to find whether domain is activated
      tags:
      - Domain
  /domains/{domain}/dns-service/check-ns:
    put:
      deprecated: true
      operationId: domains.nameservers.deprecated-check
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_nameservers_deprecated_check_200_response"
          description: Successfully queued checking domain's NS
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Deprecated in favor /ns-keys/check
      tags:
      - Domain
  /domains/{domain}/ns-keys/use-optional-keys:
    post:
      operationId: domains.nameservers.optional
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NsKeysResponse"
          description: Optional keys are set
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Use optional NS keys
      tags:
      - Domain
  /domains/{domain}/cname-setup/custom:
    delete:
      operationId: domains.cname-setup.reset
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainResponse"
          description: Successfully updated the custom cname record of the domain
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Reset the custom record of CNAME Setup to the default value
      tags:
      - Domain
    put:
      operationId: domains.cname-setup.set
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomCname"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainResponse"
          description: Successfully updated the custom cname record of the domain
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Set a custom record for using CNAME Setup
      tags:
      - Domain
  /domains/{domain}/cname-setup/convert:
    post:
      operationId: domains.cname-setup.convert
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainResponse"
          description: Successfully converted the domain to use CNAME Setup
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Convert domain setup to cname
      tags:
      - Domain
  /domains/{domain}/cname-setup/check:
    get:
      operationId: domains.cname-setup.check
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainResponse"
          description: Successfully converted the domain to use CNAME Setup
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Check Cname Setup to find whether domain is activated
      tags:
      - Domain
  /domains/{domain}/clone:
    post:
      operationId: domains.clone
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneDomain"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Failed
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Clone a domain config from another one
      tags:
      - Domain
  /domains/{domain}/regenerate:
    post:
      operationId: domains.regenerate
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Regenerate domain settings for edge servers
      tags:
      - Domain
  /domains/{domain}/hold:
    post:
      operationId: domain.hold
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Failed
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
      summary: hold domain CDN service
      tags:
      - Domain
  /domains/{domain}/unhold:
    post:
      operationId: domain.unhold
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Failed
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
      summary: unhold domain CDN service
      tags:
      - Domain
  /domains/transfer:
    get:
      operationId: domains.transfer.index
      parameters:
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - all
          - incoming
          - outgoing
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_transfer_index_200_response"
          description: Lists all pending transfers
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
      summary: Get the list of pending transfers
      tags:
      - Domain Transfer
  /domains/{domain}/transfer:
    post:
      operationId: domains.transfer.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferDomain"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainTransferData"
          description: the transfer request sent
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Transfer domain to another account
      tags:
      - Domain Transfer
  /domains/transfer/change-status:
    post:
      operationId: domains.transfer.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferDomainChangeStatus"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Accept or cancel transferring a domain
      tags:
      - Domain Transfer
  /domains/claims:
    get:
      description: Retrieve a paginated list of domain claims.
      operationId: domains.claims.list
      parameters:
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DomainClaim"
                type: array
          description: A paginated list of domain claims.
      summary: Get list of domain claims
      tags:
      - Domain Claim
    post:
      description: Create a new domain claim.
      operationId: domains.claims.store
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainClaimRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainClaim"
          description: Domain claim created successfully.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_claims_store_422_response"
          description: Unprocessable Entity. Request validation errors.
        "403":
          description: Forbidden. Account quota for claiming domains has been reached.
      summary: Create a new domain claim
      tags:
      - Domain Claim
  /domains/claims/{claimId}:
    get:
      description: Retrieve the details of a specific domain claim by its ID.
      operationId: domains.claims.show
      parameters:
      - description: The ID of the domain claim to verify.
        explode: false
        in: path
        name: claim_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainClaim"
          description: Domain claim details retrieved successfully.
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get details of a specific domain claim
      tags:
      - Domain Claim
  /domains/claims/{claim_id}/check:
    post:
      description: Check the status of the pending domain claim to ensure desired
        nameservers are set.
      operationId: domains.claims.check
      parameters:
      - description: The ID of the domain claim to verify.
        explode: false
        in: path
        name: claim_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_claims_check_200_response"
          description: Verification status of the domain claim.
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_claims_check_400_response"
          description: Bad request.
      summary: Verify pending domain claim
      tags:
      - Domain Claim
  /plans:
    get:
      operationId: plans.index
      parameters:
      - description: Domain name or id
        explode: true
        in: query
        name: domain
        required: false
        schema:
          $ref: "#/components/schemas/plans_index_domain_parameter"
        style: form
      - description: Comma separaterd plan levels to ignore
        example: "0,1"
        explode: true
        in: query
        name: ignored_plans
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanResponse"
          description: List of feature defintions for plans based on different sets
      summary: Get the list of feature defintions for plans based on different sets
      tags:
      - Plan
  /domains/{domain}/plans:
    get:
      operationId: domains.plans
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Comma separaterd plan levels to ignore
        example: "0,1"
        explode: true
        in: query
        name: ignored_plans
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlanResponse"
          description: List of feature defintions for plans based on different sets
      summary: Get the list of feature defintions for plans based on different sets
      tags:
      - Plan
  /domains/{domain}/plan:
    put:
      operationId: domains.plans.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlanUpdate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update the domain's plan
      tags:
      - Plan
  /domains/{domain}/plan/violations:
    get:
      operationId: domains.plans.violations
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_plans_violations_200_response"
          description: List of feature definitions and violations
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get violations based on plans
      tags:
      - Plan
  /domains/{domain}/plan/usages:
    get:
      operationId: domains.plans.usages
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: true
        in: query
        name: target_plan
        required: false
        schema:
          $ref: "#/components/schemas/Plan"
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_plans_usages_200_response"
          description: List of features with usages and total estimated cost
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get usages based on features and an estimated cost
      tags:
      - Plan
  /domains/{domain}/dns-records:
    get:
      operationId: dns-records.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Search term
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Type of a dns record. To filter multiple types separate them
          using a comma
        example: "a,cname,txt"
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dns_records_index_200_response"
          description: Successfully retrieved list of DNS records
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of DNS records
      tags:
      - DNS Management
    post:
      operationId: dns-records.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DnsRecord"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DnsRecordResponse"
          description: Successfully created new DNS record
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Create new DNS record
      tags:
      - DNS Management
  /domains/{domain}/dns-records/{id}:
    delete:
      operationId: dns-records.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the DNS record
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Remove a DNS record
      tags:
      - DNS Management
    get:
      operationId: dns-records.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the DNS record
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DnsRecordData"
          description: Successfully retrieved the record's information
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get information of a record
      tags:
      - DNS Management
    put:
      operationId: dns-records.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the DNS record
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DnsRecord"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DnsRecordResponse"
          description: Successfully updated the record
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update a DNS record
      tags:
      - DNS Management
  /domains/{domain}/dns-records/{id}/cloud:
    put:
      operationId: dns-records.cloud
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the DNS record
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DnsRecordCloud"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DnsRecordResponse"
          description: Successfully updated cloud status
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: "Toggle cloud status (To proxy or not proxy, that's the question!)"
      tags:
      - DNS Management
  /domains/{domain}/dns-records/import:
    post:
      operationId: dns-records.import
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DnsRecordImport"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
      summary: Import DNS records using BIND file
      tags:
      - DNS Management
  /domains/{domain}/dns-records/export:
    get:
      operationId: dns-records.export
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                format: binary
                type: string
          description: Successful
      summary: Export DNS records using BIND file
      tags:
      - DNS Management
  /domains/{domain}/dns-records/dnssec:
    get:
      operationId: dns-records.dns-sec.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DnsSecData"
          description: Status and configuration of DNSSEC
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get status of DNSSEC
      tags:
      - DNS Management
  /domains/{domain}/dns-records/dnssec/actions:
    put:
      operationId: dns-records.dns-sec.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DnsSecStatus"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DnsSecData"
          description: Successfully updated DNSSEC status
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update DNSSEC status
      tags:
      - DNS Management
  /domains/{domain}/caching:
    delete:
      deprecated: true
      description: |
        Purge CDN cache, either by URLs, tags, or the whole site.
        Purge by tag is only available for domains with Professional plan or higher.
      operationId: caching.deprecated_purge
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: true
        in: query
        name: purge
        required: true
        schema:
          description: tags is deprecated
          enum:
          - all
          - individual
          - tags
          type: string
        style: form
      - description: URLs to be purged from cache. Required if purge value is set
          to individual.
        explode: true
        in: query
        name: purge_urls
        required: false
        schema:
          items:
            format: url
            type: string
          maxItems: 50
          minItems: 1
          type: array
        style: form
      - deprecated: true
        description: |
          Tags to be purged from cache. Required if purge value is set to tags.
          Each tag must be 32 characters or less. Only ASCII characters are acceptable.
        explode: true
        in: query
        name: purge_tags
        required: false
        schema:
          items:
            type: string
          maxItems: 100
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Purge CDN Cache
      tags:
      - Caching
    get:
      operationId: caching.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CacheSettingsData"
          description: Successfully retrieved caching settings
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get caching settings
      tags:
      - Caching
    patch:
      operationId: caching.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CacheSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update caching settings
      tags:
      - Caching
  /domains/{domain}/caching/purge:
    post:
      description: |
        Purge CDN cache, either by URLs, tags, or the whole site.
        Purge by tag is only available for domains with Professional plan or higher.
      operationId: caching.purge
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CachingPurge"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Purge CDN Cache
      tags:
      - Caching
  /domains/{domain}/purge-tags:
    delete:
      deprecated: true
      operationId: purge_tags.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: true
        in: query
        name: tag
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Delete a Domain's Purge tag
      tags:
      - Caching
    get:
      deprecated: true
      description: Returns last 100 purged tags sorted by recency.
      operationId: purge_tags.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/purge_tags_index_200_response"
          description: Successfully retrieved Domain's Purge Tags
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get domain's Purge tags
      tags:
      - Caching
  /load-balancers/regions:
    get:
      deprecated: true
      operationId: load-balancers.regions.index
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/load_balancers_regions_index_200_response"
          description: Successfully retrieved list of regions for load balancers
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of regions for load balancers
      tags:
      - Load Balancing
  /domains/{domain}/load-balancers/settings:
    get:
      operationId: load-balancers.settings.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerSettingsData"
          description: Successfully retrieved list of settings
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of domain load balancer global settings
      tags:
      - Load Balancing
    patch:
      operationId: load-balancers.settings.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadBalancerSetting"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/load_balancers_settings_update_200_response"
          description: Successfully updated settings
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update domain's global load balancer settings
      tags:
      - Load Balancing
  /domains/{domain}/load-balancers/regions:
    get:
      operationId: load-balancers.regions
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/load_balancers_regions_index_200_response"
          description: Successfully retrieved list of regions for load balancers
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of regions for load balancers
      tags:
      - Load Balancing
  /domains/{domain}/load-balancers:
    get:
      operationId: load-balancers.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/load_balancers_index_200_response"
          description: Successfully retrieved list of load balancers
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of load balancers
      tags:
      - Load Balancing
    post:
      operationId: load-balancers.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadBalancerStore"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerResponse"
          description: Successfully created load balancer
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Create a new load balancer
      tags:
      - Load Balancing
  /domains/{domain}/load-balancers/{loadBalancerId}:
    delete:
      operationId: load-balancers.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Remove a load balancer
      tags:
      - Load Balancing
    get:
      operationId: load-balancers.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerData"
          description: Successfully retrieved load balancer data
      summary: Get load balancer information
      tags:
      - Load Balancing
    patch:
      operationId: load-balancers.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadBalancer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerResponse"
          description: Successfully updated a load balancer
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update a load balancer
      tags:
      - Load Balancing
  /domains/{domain}/load-balancers/{loadBalancerId}/pools:
    get:
      operationId: load-balancers.pools.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/load_balancers_pools_index_200_response"
          description: Successfully retrieved list of pools of the load balancers
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get the list of pools of a load balancers
      tags:
      - Load Balancing
    post:
      operationId: load-balancers.pools.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadBalancerPoolStoreWithOrigin"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerPoolResponse"
          description: Successfully created pool of the load balancer
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Create a new pool for the load balancer
      tags:
      - Load Balancing
  /domains/{domain}/load-balancers/{loadBalancerId}/prioritize:
    post:
      operationId: load-balancers.prioritize_pool
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrioritizePool"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerResponse"
          description: Successfully prioritized pools in the load balancer
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Reorder the priority of load balancer pools
      tags:
      - Load Balancing
  /domains/{domain}/load-balancers/{loadBalancerId}/pools/{loadBalancerPoolId}:
    delete:
      operationId: load-balancers.pools.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of a pool of the load balancer
        explode: false
        in: path
        name: loadBalancerPoolId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Remove a load balancer pool
      tags:
      - Load Balancing
    get:
      operationId: load-balancers.pools.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of a pool of the load balancer
        explode: false
        in: path
        name: loadBalancerPoolId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerPoolData"
          description: Successfully retrieved load balancer pool data
      summary: Get load balancer pool information
      tags:
      - Load Balancing
    patch:
      operationId: load-balancers.pools.updatePool
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of a pool of the load balancer
        explode: false
        in: path
        name: loadBalancerPoolId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadBalancerPoolStoreWithoutOrigin"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerPoolResponse"
          description: Successfully updated a load balancer
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update an existing load balancer pool without origins
      tags:
      - Load Balancing
    put:
      operationId: load-balancers.pools.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of a pool of the load balancer
        explode: false
        in: path
        name: loadBalancerPoolId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadBalancerPoolStoreWithOrigin"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerPoolResponse"
          description: Successfully updated a load balancer
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update an existing load balancer pool with origins
      tags:
      - Load Balancing
  /domains/{domain}/load-balancers/{loadBalancerId}/pools/{loadBalancerPoolId}/origins:
    get:
      operationId: load-balancers.pools.origins.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of a pool of the load balancer
        explode: false
        in: path
        name: loadBalancerPoolId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/load_balancers_pools_origins_index_200_response"
          description: Successfully retrieved list of origins of a pool
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of origins of a pool
      tags:
      - Load Balancing
    post:
      operationId: load-balancers.pools.origins.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of a pool of the load balancer
        explode: false
        in: path
        name: loadBalancerPoolId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadBalancerOriginStore"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerOriginResponse"
          description: Successfully created load balancer
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Create a new origin in the pool of the load balancer
      tags:
      - Load Balancing
  /domains/{domain}/load-balancers/{loadBalancerId}/pools/{loadBalancerPoolId}/origins/{loadBalancerPoolOriginId}:
    delete:
      operationId: load-balancers.pools.origins.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of a pool of the load balancer
        explode: false
        in: path
        name: loadBalancerPoolId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of an origin of the pool in the load balancer
        explode: false
        in: path
        name: loadBalancerPoolOriginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Remove an origin from the pool of the load balancer
      tags:
      - Load Balancing
    get:
      operationId: load-balancers.pools.origins.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of a pool of the load balancer
        explode: false
        in: path
        name: loadBalancerPoolId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of an origin of the pool in the load balancer
        explode: false
        in: path
        name: loadBalancerPoolOriginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerOriginData"
          description: Successfully retrieved the origin data
      summary: Get load balancer origin information
      tags:
      - Load Balancing
    patch:
      operationId: load-balancers.pools.origins.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of the load balancer
        explode: false
        in: path
        name: loadBalancerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of a pool of the load balancer
        explode: false
        in: path
        name: loadBalancerPoolId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ID of an origin of the pool in the load balancer
        explode: false
        in: path
        name: loadBalancerPoolOriginId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadBalancerOriginStore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBalancerOriginResponse"
          description: Successfully updated the origin of the pool
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update an existing origin of the pool
      tags:
      - Load Balancing
  /domains/{domain}/page-rules:
    get:
      operationId: page-rules.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Search term
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Sort page rules in ascending or descending order base on seq
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: desc
          enum:
          - desc
          - asc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/page_rules_index_200_response"
          description: Successfully retrieved list of page-rules
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of page-rules
      tags:
      - Page Rule
    post:
      operationId: page-rules.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageRule"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageRuleResponse"
          description: Successfully created new page-rule
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Create new page-rule
      tags:
      - Page Rule
  /domains/{domain}/page-rules/{id}:
    delete:
      operationId: page-rules.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Delete the page-rule
      tags:
      - Page Rule
    get:
      operationId: page-rules.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageRuleData"
          description: Successfully retrieved page-rule information
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get the page-rule's information
      tags:
      - Page Rule
    patch:
      operationId: page-rules.status.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBooleanStatus"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Toggle status of the page-rule
      tags:
      - Page Rule
    put:
      operationId: page-rules.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageRule"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageRuleResponse"
          description: Successfully updated page-rule information
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update the page-rule
      tags:
      - Page Rule
  /domains/{domain}/page-rules/{id}/purge:
    delete:
      operationId: page-rules.purge
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Purge the page-rule
      tags:
      - Page Rule
  /domains/{domain}/page-rules/{id}/diff:
    get:
      operationId: page-rules.diff.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageRuleDiffData"
          description: Successfully retrieved page-rule information
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get the page-rule's exceptions
      tags:
      - Page Rule
    patch:
      operationId: page-rules.diff.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PageRule"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/page_rules_diff_update_200_response"
          description: Successfully updated page-rule
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update the page-rule's exceptions
      tags:
      - Page Rule
  /domains/{domain}/image-resize:
    get:
      operationId: image-resize.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResizeResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get the content of image resize settings
      tags:
      - Acceleration
    patch:
      operationId: image-resize.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageResize"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageResizeResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update the content of image resize settings
      tags:
      - Acceleration
  /domains/{domain}/acceleration:
    get:
      operationId: acceleration.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccelerationResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get the content of acceleration settings
      tags:
      - Acceleration
    patch:
      operationId: acceleration.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccelerationUpdate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccelerationResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update the content of acceleration settings
      tags:
      - Acceleration
  /domains/{domain}/custom-pages:
    get:
      operationId: custom-pages.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomPagesData"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of custom pages
      tags:
      - Custom Pages
    post:
      operationId: custom-pages.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CustomPageUpdate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update custom page
      tags:
      - Custom Pages
  /domains/{domain}/settings/www-redirect:
    get:
      operationId: redirect.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedirectData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get redirect settings
      tags:
      - Redirect
    put:
      operationId: redirect.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Redirect"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update redirect settings
      tags:
      - Redirect
  /domains/{domain}/log-forwarders:
    get:
      operationId: log-forwarders.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Filter log forwarders by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter log forwarders by type
        explode: true
        in: query
        name: types
        required: false
        schema:
          items:
            enum:
            - access
            - event
            - dns
            - error
            - waf
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/log_forwarders_index_200_response"
          description: List of log forwarders
      summary: Show list of log forwarders for given domain
      tags:
      - Log Forwarders
    post:
      operationId: log-forwarders.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogForwarder"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogForwarderResponse"
          description: Successfully created a new log forwarder
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Create new log forwarder
      tags:
      - Log Forwarders
  /domains/{domain}/log-forwarders/{logForwarderId}:
    delete:
      operationId: log-forwarders.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Log Forwarder Id
        explode: false
        in: path
        name: logForwarderId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
      summary: Delete a log forwarder
      tags:
      - Log Forwarders
    get:
      operationId: log-forwarders.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Log Forwarder Id
        explode: false
        in: path
        name: logForwarderId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogForwarderResponse"
          description: Details of a log forwarder
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Show a log forwarder's details based on given id
      tags:
      - Log Forwarders
    put:
      operationId: log-forwarders.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Log Forwarder Id
        explode: false
        in: path
        name: logForwarderId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogForwarder"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogForwarderResponse"
          description: Update log forwarder successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update a log forwarder
      tags:
      - Log Forwarders
  /domains/{domain}/log-forwarders/{logForwarderId}/status:
    patch:
      operationId: log-forwarders.update.status
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Log Forwarder Id
        explode: false
        in: path
        name: logForwarderId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBooleanStatus"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogForwarderResponse"
          description: Update log forwarder successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update a log forwarder's status
      tags:
      - Log Forwarders
  /metric-exporters:
    get:
      operationId: metric-exporters.index
      parameters:
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metric_exporters_index_200_response"
          description: List of metric exporters
      summary: Show list of account's metric exporters
      tags:
      - Metric Exporters
  /domains/{domain}/metric-exporters:
    post:
      operationId: metric-exporters.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricExporter"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricExporterResponse"
          description: Successfully created a new metric exporter
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Create new metric exporter
      tags:
      - Metric Exporters
  /domains/{domain}/metric-exporters/{metricExporterId}:
    delete:
      operationId: metric-exporters.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Metric Exporter Id
        explode: false
        in: path
        name: metricExporterId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
      summary: Delete a metric exporter
      tags:
      - Metric Exporters
    get:
      operationId: metric-exporters.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Metric Exporter Id
        explode: false
        in: path
        name: metricExporterId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricExporterResponse"
          description: Details of a metric exporter
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Show a metric exporter's details based on given id
      tags:
      - Metric Exporters
    put:
      operationId: metric-exporters.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Metric Exporter Id
        explode: false
        in: path
        name: metricExporterId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricExporter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricExporterResponse"
          description: Update metric exporter successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update a metric exporter
      tags:
      - Metric Exporters
  /domains/{domain}/metric-exporters/{metricExporterId}/status:
    patch:
      operationId: metric-exporters.update.status
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Metric Exporter Id
        explode: false
        in: path
        name: metricExporterId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBooleanStatus"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricExporterResponse"
          description: Update metric exporter successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update a metric exporter's status
      tags:
      - Metric Exporters
  /domains/{domain}/transport-layer-proxies:
    get:
      operationId: transport-layer-proxies.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transport_layer_proxies_index_200_response"
          description: List of transport layer proxies
      summary: Show list of transport layer proxies for given domain
      tags:
      - Transport Layer Proxy
    post:
      operationId: transport-layer-proxies.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransportLayerProxyStore"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransportLayerProxyResponse"
          description: Successfully created a new transport layer proxy
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Create new transport layer proxy
      tags:
      - Transport Layer Proxy
  /domains/{domain}/transport-layer-proxies/{transportLayerProxyId}:
    delete:
      operationId: transport-layer-proxies.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Transport layer proxy id
        explode: false
        in: path
        name: transportLayerProxyId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: delete a transport layer proxy
      tags:
      - Transport Layer Proxy
    get:
      operationId: transport-layer-proxies.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Transport layer proxy id
        explode: false
        in: path
        name: transportLayerProxyId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransportLayerProxyResponse"
          description: Show details of a transport layer proxy
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Show a transport layer proxy's details based on given id
      tags:
      - Transport Layer Proxy
    put:
      operationId: transport-layer-proxies.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Transport layer proxy id
        explode: false
        in: path
        name: transportLayerProxyId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransportLayerProxyUpdate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransportLayerProxyResponse"
          description: Update transport layer proxy successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access denied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update a transport layer proxy
      tags:
      - Transport Layer Proxy
  /domains/{domain}/troubleshoots:
    get:
      operationId: troubleshoots.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/troubleshoots_index_200_response"
          description: List of troubleshoots
      summary: Show list of troubleshoots for given domain
      tags:
      - Troubleshoot
    post:
      operationId: troubleshoots.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/troubleshoots_store_201_response"
          description: Successfully created a new troubleshoot
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Too many requests
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Create new troubleshoot
      tags:
      - Troubleshoot
  /domains/{domain}/troubleshoots/latest:
    get:
      operationId: troubleshoots.latest
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/troubleshoots_store_201_response"
          description: Details of a troubleshoot
      summary: Show the latest troubleshoot for given domain
      tags:
      - Troubleshoot
  /domains/{domain}/reports/traffics:
    get:
      operationId: reports.traffics.total
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: "filter[subdomain]"
        required: false
        schema:
          description: Select subdomain for report. @ means the root domain.
          nullable: true
          pattern: "^[\\w@-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrafficsData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get traffic report for domain
      tags:
      - Reports
  /domains/{domain}/reports/traffics/saved:
    get:
      operationId: reports.traffics.saved
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: "filter[subdomain]"
        required: false
        schema:
          description: Select subdomain for report. @ means the root domain.
          nullable: true
          pattern: "^[\\w@-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedTrafficsData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get traffic saved to total pie chart
      tags:
      - Reports
  /domains/{domain}/reports/traffics/map:
    get:
      operationId: reports.traffics.map
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: "filter[subdomain]"
        required: false
        schema:
          description: Select subdomain for report. @ means the root domain.
          nullable: true
          pattern: "^[\\w@-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MapTrafficsData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get traffic as geo-map
      tags:
      - Reports
  /domains/{domain}/reports/visitors:
    get:
      operationId: reports.visitors.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: "filter[subdomain]"
        required: false
        schema:
          description: Select subdomain for report. @ means the root domain.
          nullable: true
          pattern: "^[\\w@-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitorsData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get report of visitors for domain
      tags:
      - Reports
  /domains/{domain}/reports/high-request-ips:
    get:
      operationId: reports.visitors.high-request-ips
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reports_visitors_high_request_ips_200_response"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get report of IPs with highest number of requests
      tags:
      - Reports
  /domains/{domain}/reports/response-time:
    get:
      operationId: reports.response-time.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: "filter[subdomain]"
        required: false
        schema:
          description: Select subdomain for report. @ means the root domain.
          nullable: true
          pattern: "^[\\w@-]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseTimeData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get response time report
      tags:
      - Reports
  /domains/{domain}/reports/status:
    get:
      operationId: reports.status.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusCodeReportData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get status codes pie chart
      tags:
      - Reports
  /domains/{domain}/reports/status/summary:
    get:
      operationId: reports.status.summary
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusCodeSummaryData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get an overview of status codes pie chart
      tags:
      - Reports
  /domains/{domain}/reports/error-logs:
    get:
      operationId: reports.error-logs
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorLogsData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of errors
      tags:
      - Reports
  /domains/{domain}/reports/error-logs/chart:
    get:
      operationId: reports.error-logs.chart
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorLogChartData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get chart view of errors
      tags:
      - Reports
  /domains/{domain}/reports/error-log-details:
    get:
      deprecated: true
      operationId: reports.error-log-details
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Error message to search for
        explode: true
        in: query
        name: error
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reports_error_log_details_200_response"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get detail of an error
      tags:
      - Reports
  /domains/{domain}/reports/dns-requests:
    get:
      operationId: reports.dns.requests
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DnsRequestReportData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get response time report
      tags:
      - Reports
  /domains/{domain}/reports/dns-geo:
    get:
      operationId: reports.dns.geo
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DnsGeoReportData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get DNS requests as geo-map
      tags:
      - Reports
  /domains/{domain}/reports/attacks:
    get:
      operationId: reports.attacks.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reports_attacks_show_200_response"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get report of attacks
      tags:
      - Reports
  /domains/{domain}/reports/attacks/list:
    get:
      operationId: reports.attacks.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reports_attacks_index_200_response"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of attacks details
      tags:
      - Reports
  /domains/{domain}/reports/attacks/attackers:
    get:
      operationId: reports.attacks.attackers
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reports_attacks_attackers_200_response"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of attackers information
      tags:
      - Reports
  /domains/{domain}/reports/attacks/map:
    get:
      operationId: reports.attacks.map
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttackReportMapData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get geo-map of attacks
      tags:
      - Reports
  /domains/{domain}/reports/attacks/uri:
    get:
      operationId: reports.attacks.uri
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttackReportUriData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get list of URLs under attack
      tags:
      - Reports
  /domains/{domain}/reports/transport-layer-proxies/{transportLayerProxyId}/traffics:
    get:
      operationId: reports.transport_layer_proxies.traffics
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Transport layer proxy id
        explode: false
        in: path
        name: transportLayerProxyId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransportLayerProxyTrafficsData"
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get traffic report for transport layer proxy
      tags:
      - Reports
  /domains/reports/download:
    get:
      description: Generate a downloadable CSV file containing a report of domains
        existing across multiple accounts
      operationId: domains.reports.download
      responses:
        "200":
          content:
            text/csv:
              schema:
                format: binary
                type: string
          description: CSV file containing the domains report
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
      summary: Get CSV file containing the domains report
      tags:
      - Reports
  /domains/{domain}/firewall/settings:
    get:
      operationId: firewall.settings.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/firewall_settings_index_200_response"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get domain's firewall configuration
      tags:
      - Firewall
    patch:
      operationId: firewall.settings.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/firewall_settings_index_200_response"
          description: Updated Successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Update domain's firewall configuration
      tags:
      - Firewall
  /domains/{domain}/firewall/rules:
    get:
      operationId: firewall.rules.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Search term
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - priority
          - created_at
          type: string
        style: form
      - explode: true
        in: query
        name: order_type
        required: false
        schema:
          enum:
          - desc
          - asc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/firewall_rules_index_200_response"
          description: ""
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get domain's firewall rules
      tags:
      - Firewall
    post:
      operationId: firewall.rules.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallRule"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallRuleResponse"
          description: Successfully created firewall rule
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Create new firewall rule
      tags:
      - Firewall
  /domains/{domain}/firewall/rules/{id}:
    delete:
      operationId: firewall.rules.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Delete firewall rule
      tags:
      - Firewall
    get:
      operationId: firewall.rules.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallRuleResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get firewall rule information
      tags:
      - Firewall
    patch:
      operationId: firewall.rules.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirewallRuleUpdate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirewallRuleResponse"
          description: Successfully updated the rule.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Update the firewall rule
      tags:
      - Firewall
  /domains/{domain}/firewall/actions/reprioritize:
    post:
      description: |
        You can choose a firewall rule and request to put it after or before another rule.
        You should only provide either after_rule_id or before_rule_id (and not both of them).
      operationId: firewall.reprioritize
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReprioritizeRuleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Change priority of firewall rules
      tags:
      - Firewall
  /waf:
    get:
      operationId: global.waf.index
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WafPresetsData"
          description: Found list of presets
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get WAF presets
      tags:
      - WAF
  /waf/packages/{packageId}:
    get:
      operationId: global.waf.show_package
      parameters:
      - explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WafPackageDetailsData"
          description: Retrieved detail of package
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get WAF package details
      tags:
      - WAF
  /domains/{domain}/waf/settings:
    get:
      operationId: waf.settings.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WafSettingsData"
          description: Successfully retrieved list of WAF settings
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get WAF configuration
      tags:
      - WAF
    patch:
      operationId: waf.settings.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WafSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WafSettingsData"
          description: Successfully retrieved list of WAF settings
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Configure WAF module of the domain
      tags:
      - WAF
  /domains/{domain}/waf/actions/reconfigure:
    post:
      description: |
        It remove all existing WAF packages and configures packages as defined in the preset
      operationId: waf.reconfigure
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WafReconfigure"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Reconfigure WAF module using a preset
      tags:
      - WAF
  /domains/{domain}/waf/actions/reprioritize:
    post:
      description: |
        You can choose a WAF rule and request to put it after or before another rule.
        You should only provide either after_rule_id or before_rule_id (and not both of them).
      operationId: waf.reprioritize
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReprioritizeRuleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Change priority of WAF rules
      tags:
      - WAF
  /domains/{domain}/waf/actions/reprioritize-package:
    post:
      description: |
        You can choose a WAF package and request to put it after or before another one.
        You should only provide either after_package_id or before_package_id (and not both of them).
      operationId: waf.package.reprioritize
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WafReprioritize"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Change priority of WAF packages
      tags:
      - WAF
  /domains/{domain}/waf/rules:
    get:
      operationId: waf.rules.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Search term
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - priority
          - created_at
          type: string
        style: form
      - explode: true
        in: query
        name: order_type
        required: false
        schema:
          enum:
          - desc
          - asc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/waf_rules_index_200_response"
          description: Successfully created WAF rule
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get WAF Rules
      tags:
      - WAF
    post:
      operationId: waf.rules.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WafRule"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WafRuleResponse"
          description: Successfully created WAF rule
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Create new WAF rule
      tags:
      - WAF
  /domains/{domain}/waf/rules/{id}:
    delete:
      operationId: waf.rules.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Delete WAF rule
      tags:
      - WAF
    get:
      operationId: waf.rules.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WafRuleResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get WAF rule information
      tags:
      - WAF
    patch:
      operationId: waf.rules.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WafRule"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WafRuleResponse"
          description: Successfully updated the rule.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Update the WAF rule
      tags:
      - WAF
  /domains/{domain}/waf/packages:
    get:
      description: |
        By passing `available` parameter in query string, it will return available packages for this domain.
        Otherwise it lists currently added packages.
      operationId: waf.packages.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: true
        in: query
        name: available
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainWafPackagesData"
          description: Retrieved list of WAF packages
      summary: Get WAF packages
      tags:
      - WAF
    post:
      operationId: waf.packages.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainWafPackageStore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/waf_packages_store_200_response"
          description: Successfully added WAF package
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Add new WAF package to domain
      tags:
      - WAF
  /domains/{domain}/waf/packages/{id}:
    delete:
      operationId: waf.packages.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Delete WAF package from domain
      tags:
      - WAF
    get:
      operationId: waf.packages.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainWafPackageDetailsData"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get WAF package information
      tags:
      - WAF
    patch:
      operationId: waf.packages.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainWafPackage"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/waf_packages_update_200_response"
          description: Successfully updated the package.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Update the WAF package
      tags:
      - WAF
  /domains/{domain}/ddos/settings:
    get:
      operationId: ddos.settings.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DdosSettingsData"
          description: Successfully retrieved DDoS settings
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get DDoS protection settings
      tags:
      - DDoS
    patch:
      operationId: ddos.settings.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DdosSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ddos_settings_update_200_response"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Update domain's DDoS protection configuration
      tags:
      - DDoS
  /domains/{domain}/ddos/rules:
    get:
      operationId: ddos.rules.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Search term
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - priority
          - created_at
          type: string
        style: form
      - explode: true
        in: query
        name: order_type
        required: false
        schema:
          enum:
          - desc
          - asc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ddos_rules_index_200_response"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get DDoS Protection Rules
      tags:
      - DDoS
    post:
      operationId: ddos.rules.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DdosRule"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DdosRuleResponse"
          description: Successfully created DDoS rule
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Create new DDoS protection rule
      tags:
      - DDoS
  /domains/{domain}/ddos/rules/{id}:
    delete:
      operationId: ddos.rules.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Delete DDoS protection rule
      tags:
      - DDoS
    get:
      operationId: ddos.rules.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DdosRuleData"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get DDoS protection's rule information
      tags:
      - DDoS
    patch:
      operationId: ddos.rules.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DdosRule"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DdosRuleResponse"
          description: Successfully updated the rule.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Update the DDoS protection rule
      tags:
      - DDoS
  /domains/{domain}/ddos/actions/reprioritize:
    post:
      description: |
        You can choose a DDoS rule and request to put it after or before another rule.
        You should only provide either after_rule_id or before_rule_id (and not both of them).
      operationId: ddos.reprioritize
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReprioritizeRuleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Change priority of ddos rules
      tags:
      - DDoS
  /domains/{domain}/rate-limit/settings:
    get:
      operationId: rate-limiting.settings.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitSettingsData"
          description: Successfully retrieved Rate-Limit settings
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get Rate limiting settings
      tags:
      - Rate Limiting
    patch:
      operationId: rate-limiting.settings.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateLimitSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rate_limiting_settings_update_200_response"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Update domain's Rate limiting configuration
      tags:
      - Rate Limiting
  /domains/{domain}/rate-limit/rules:
    get:
      operationId: rate-limiting.rules.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Search term
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - priority
          - created_at
          type: string
        style: form
      - explode: true
        in: query
        name: order_type
        required: false
        schema:
          enum:
          - desc
          - asc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rate_limiting_rules_index_200_response"
          description: Successful
      summary: Get Rate limiting rules
      tags:
      - Rate Limiting
    post:
      operationId: rate-limiting.rules.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateLimitRule"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitRuleData"
          description: Successfully created Rate-Limit rule
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Store new Rate limiting rule
      tags:
      - Rate Limiting
  /domains/{domain}/rate-limit/rules/{id}:
    delete:
      operationId: rate-limiting.rules.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Delete Rate limiting's rule
      tags:
      - Rate Limiting
    get:
      operationId: rate-limiting.rules.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RateLimitRuleData"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get Rate limiting's rule information
      tags:
      - Rate Limiting
    patch:
      operationId: rate-limiting.rules.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateLimitRule"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rate_limiting_rules_update_200_response"
          description: Successfully updated the rule.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Update the Rate limiting's rule
      tags:
      - Rate Limiting
  /domains/{domain}/rate-limit/actions/reprioritize:
    post:
      description: |
        You can choose a rule and request to put it after or before another rule.
        You should only provide either after_rule_id or before_rule_id (and not both of them).
      operationId: rate-limiting.actions.reprioritize
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReprioritizeRuleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Change priority of Rate limiting's rules
      tags:
      - Rate Limiting
  /apps:
    get:
      operationId: apps.index
      parameters:
      - description: Filter apps by category
        explode: true
        in: query
        name: category_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Search term
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_by
        required: false
        schema:
          enum:
          - rank
          - likes
          type: string
        style: form
      - description: Set the direction of sorting
        explode: true
        in: query
        name: direction
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apps_index_200_response"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
      summary: Get list of all available cdn-apps
      tags:
      - CDN Apps
  /apps/{id}:
    get:
      operationId: apps.show
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CdnAppData"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get a single cdn-app
      tags:
      - CDN Apps
    post:
      operationId: apps.like
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CdnAppLike"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CdnAppLikeStatsData"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Expressing like and dislike about a single cdn-app
      tags:
      - CDN Apps
  /domains/{domain}/apps:
    get:
      operationId: domains.apps.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apps_index_200_response"
          description: Successful
      summary: Get list of all applications installed on a domain
      tags:
      - CDN Apps
  /domains/{domain}/apps/{id}:
    delete:
      operationId: domains.apps.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Uninstall the application from domain
      tags:
      - CDN Apps
    get:
      operationId: domains.apps.installed
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CdnAppInstall"
          description: Successfully retrieved.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Check the application is installed on the domain
      tags:
      - CDN Apps
    post:
      operationId: domains.apps.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppOptions"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_apps_store_200_response"
          description: Successfully installed the application.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Install the application on the domain
      tags:
      - CDN Apps
  /domains/{domain}/apps/{id}/actions/trigger_webhook:
    post:
      operationId: domains.apps.trigger-webhook
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CdnAppTriggerWebhook"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: trigger webhook event
      tags:
      - CDN Apps
  /apps/category:
    get:
      operationId: apps.category.index
      parameters:
      - explode: true
        in: query
        name: categories
        required: false
        schema:
          items:
            type: string
          nullable: true
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apps_category_index_200_response"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get the list of application categories
      tags:
      - CDN Apps
  /apps/category/{application-category}:
    get:
      operationId: apps.category.show
      parameters:
      - description: The id of the category
        explode: false
        in: path
        name: application-category
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apps_category_show_200_response"
          description: Successful
      summary: Get an existing application category
      tags:
      - CDN Apps
  /domains/{domain}/ssl:
    get:
      operationId: ssl.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SslResponse"
          description: Successfully retrieved SSL settings
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get SSL settings
      tags:
      - SSL/TLS
    patch:
      operationId: ssl.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SslUpdate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SslResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Update domain's SSL settings
      tags:
      - SSL/TLS
  /domains/{domain}/ssl/certificates:
    get:
      operationId: ssl.cert.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Filter certificates by types
        explode: true
        in: query
        name: types
        required: false
        schema:
          items:
            $ref: "#/components/schemas/CertificateType"
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssl_cert_index_200_response"
          description: Successfully retrieved Certificates list
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get All certificates
      tags:
      - SSL/TLS
    post:
      operationId: ssl.cert.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CertificateStore"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Upload Certificate
      tags:
      - SSL/TLS
  /domains/{domain}/ssl/certificates/{certificateId}:
    delete:
      operationId: ssl.cert.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of an ssl certificate
        explode: false
        in: path
        name: certificateId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Delete an unused customer certificate
      tags:
      - SSL/TLS
    get:
      operationId: ssl.cert.get
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of an ssl certificate
        explode: false
        in: path
        name: certificateId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Indicates whether the private key should be included in the\
          \ response. If set to true, the private key will be permanently removed,\
          \ and it will no longer be accessible or viewable. Ensure you store the\
          \ key securely for future use"
        explode: true
        in: query
        name: show_private_key
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssl_cert_get_200_response"
          description: Successful response with certificate details
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Get details of an issued certificate
      tags:
      - SSL/TLS
  /domains/{domain}/ssl/certificates/{certificateId}/revoke:
    post:
      description: Revoke a server certificate for security reason.
      operationId: ssl.cert.revoke
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: ID of an ssl certificate
        explode: false
        in: path
        name: certificateId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Revoke a server certificate
      tags:
      - SSL/TLS
  /domains/{domain}/ssl/orders:
    get:
      operationId: ssl.cert.order.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: true
        in: query
        name: type
        required: false
        schema:
          default: edge
          enum:
          - edge
          - origin
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssl_cert_order_index_200_response"
          description: Successfully retrieved Managed SSL orders info
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get All Managed certificate orders history
      tags:
      - SSL/TLS
  /domains/{domain}/ssl/issue:
    post:
      operationId: ssl.cert.issue
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssl_cert_issue_200_response"
          description: Successfully placed an order
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Request for SSL Certificate Issuance
      tags:
      - SSL/TLS
  /domains/{domain}/ssl/orders/action/retry:
    post:
      operationId: ssl.cert.order.retry
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Retry a previously `killed` order
      tags:
      - SSL/TLS
  /certificate-products:
    get:
      operationId: account_certificate.product.index
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_certificate_product_index_200_response"
          description: List of certificate products
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get the list of certum certificate products
      tags:
      - SSL/TLS
  /certificates/issue:
    post:
      operationId: account_certificate.issue
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateOrderIssueRequest"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCertificateOrder"
          description: Certificate issued successfully
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Failed
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Issue a new certum certificate
      tags:
      - SSL/TLS
  /certificates/orders:
    get:
      operationId: account_certificate.order.index
      parameters:
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_certificate_order_index_200_response"
          description: List of certum certificate orders
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get the list of certum certificate orders
      tags:
      - SSL/TLS
  /certificates/orders/{certificateOrder}:
    get:
      operationId: account_certificate.show
      parameters:
      - description: The ID of the certificate order
        explode: false
        in: path
        name: certificateOrder
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "whether the private key should be retained on ArvanCloud servers.\
          \ If set to false, the private key will be permanently removed, and it will\
          \ no longer be accessible or viewable. Ensure you store the key securely\
          \ for future use"
        explode: true
        in: query
        name: keep_private_key
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCertificateOrder"
          description: Certificate order details
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get details of a certum certificate order
      tags:
      - SSL/TLS
  /certificates/orders/{certificateOrder}/revoke:
    post:
      operationId: account_certificate.revoke
      parameters:
      - description: The ID of the certificate order
        explode: false
        in: path
        name: certificateOrder
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCertificateOrder"
          description: Certificate revoked successfully
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Failed
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Revoke a certum certificate
      tags:
      - SSL/TLS
  /certificates/orders/{certificateOrder}/reissue:
    post:
      operationId: account_certificate.reissue
      parameters:
      - description: The ID of the certificate order
        explode: false
        in: path
        name: certificateOrder
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCertificateOrder"
          description: Certificate reissue order placed
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Failed
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Reissue a certum certificate
      tags:
      - SSL/TLS
  /certificates/orders/{certificateOrder}/install:
    post:
      operationId: account_certificate.install
      parameters:
      - description: The ID of the certificate order
        explode: false
        in: path
        name: certificateOrder
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_certificate_install_200_response"
          description: Certificate was successfully installed
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Failed
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Install a certum certificate on edge servers
      tags:
      - SSL/TLS
  /domains/{domain}/health-checks:
    get:
      operationId: active-health-check.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/active_health_check_index_200_response"
          description: Successfully retrieved HealthCheck settings
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get Defined HealthCheck
      tags:
      - Active Health Check
    post:
      operationId: active-health-check.store
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HealthCheck"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckResponse"
          description: Successfully
      summary: Store a new HealthCheck
      tags:
      - Active Health Check
  /domains/{domain}/health-checks/{healthcheck}:
    delete:
      operationId: active-health-check.destroy
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: healthcheck
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Delete healthcheck
      tags:
      - Active Health Check
    get:
      operationId: active-health-check.show
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: healthcheck
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckResponse"
          description: Successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get a single healthcheck
      tags:
      - Active Health Check
    patch:
      operationId: active-health-check.update
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - explode: false
        in: path
        name: healthcheck
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HealthCheck"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckResponse"
          description: Successfully updated.
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update Health check
      tags:
      - Active Health Check
  /domains/{domain}/health-checks/zones:
    get:
      operationId: health-checks.regions.index
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/health_checks_regions_index_200_response"
          description: Successful
      summary: Get list of all health-check regions
      tags:
      - Active Health Check
  /domains/{domain}/health-checks/reports/summary:
    get:
      operationId: active-health-check.reports.summary
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Name of the health-check
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: Upstream of the health-check monitoring
        explode: true
        in: query
        name: upstream
        required: true
        schema:
          type: string
        style: form
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Set the direction of sorting
        explode: true
        in: query
        name: direction
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/active_health_check_reports_summary_200_response"
          description: Successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get summary reports of a single healthcheck monitoring
      tags:
      - Active Health Check
  /domains/{domain}/health-checks/reports/details:
    get:
      operationId: active-health-check.reports.details
      parameters:
      - description: Domain name
        example: example.com
        explode: false
        in: path
        name: domain
        required: true
        schema:
          format: hostname
          type: string
        style: simple
      - description: Name of the health-check
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: Upstream of the health-check monitoring
        explode: true
        in: query
        name: upstream
        required: true
        schema:
          type: string
        style: form
      - description: Type of reports for the health check
        explode: true
        in: query
        name: type
        required: false
        schema:
          default: all
          enum:
          - all
          - success
          - error
          type: string
        style: form
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - explode: true
        in: query
        name: since
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: until
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Set the direction of sorting
        explode: true
        in: query
        name: direction
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/active_health_check_reports_details_200_response"
          description: Successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get reports of a single healthcheck monitoring
      tags:
      - Active Health Check
  /health-checks/zones:
    get:
      deprecated: true
      operationId: health-checks.zones.index
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/health_checks_regions_index_200_response"
          description: Successful
      summary: Get list of all health-check zones
      tags:
      - Active Health Check
  /dynamic-fields:
    get:
      operationId: lists.index
      parameters:
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          enum:
          - private
          - public
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - ip
          - bytes
          - number
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lists_index_200_response"
          description: Successfully
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Get the list of Lists
      tags:
      - List
    post:
      operationId: lists.store
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DynamicField"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DynamicFieldResponse"
          description: Successfully created List
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Store new List
      tags:
      - List
  /dynamic-fields/{id}:
    delete:
      operationId: lists.destroy
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Delete List
      tags:
      - List
    get:
      operationId: lists.show
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DynamicFieldData"
          description: Successful
      summary: Get an existing List
      tags:
      - List
    patch:
      operationId: lists.update
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DynamicField"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DynamicFieldResponse"
          description: Successful
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_store_422_response"
          description: The given data was invalid
      summary: Update an existing List
      tags:
      - List
  /reports/aggregated/details:
    get:
      description: Get the list of aggregated reports for domains
      operationId: reports.aggregated.details
      parameters:
      - description: Name of domains. To filter multiple domains separate them using
          a comma
        example: "example1.com,example2.com"
        explode: true
        in: query
        name: domains
        required: false
        schema:
          type: string
        style: form
      - description: Category of report
        explode: true
        in: query
        name: category_type
        required: false
        schema:
          enum:
          - pop
          - asn
          type: string
        style: form
      - description: "Names of a pop sites. To filter multiple pops, separate them\
          \ using a comma"
        example: "thr-r1c,thr-mci"
        explode: true
        in: query
        name: pops
        required: false
        schema:
          type: string
        style: form
      - description: "Numbers of ASNs. To filter multiple ASNs, separate them using\
          \ a comma"
        example: "1435,7846"
        explode: true
        in: query
        name: asns
        required: false
        schema:
          type: string
        style: form
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      - description: Set the desired page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Set how many items returned per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reports_aggregated_details_200_response"
          description: List of aggregated reports for domains
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: List of aggregated reports for domains
      tags:
      - Aggregated Reports
  /reports/aggregated/charts:
    get:
      description: Show charts of aggregated reports for domains
      operationId: reports.aggregated.charts
      parameters:
      - description: Name of domains. To filter multiple domains separate them using
          a comma
        example: "example1.com,example2.com"
        explode: true
        in: query
        name: domains
        required: false
        schema:
          type: string
        style: form
      - description: Type of report
        explode: true
        in: query
        name: report_type
        required: false
        schema:
          enum:
          - traffic
          - requests
          type: string
        style: form
      - description: Category of report
        explode: true
        in: query
        name: category_type
        required: false
        schema:
          enum:
          - pop
          - asn
          type: string
        style: form
      - description: "Names of a pop sites. To filter multiple pops, separate them\
          \ using a comma"
        example: "thr-r1c,thr-mci"
        explode: true
        in: query
        name: pops
        required: false
        schema:
          type: string
        style: form
      - description: "Numbers of ASNs. To filter multiple ASNs, separate them using\
          \ a comma"
        example: "1435,7846"
        explode: true
        in: query
        name: asns
        required: false
        schema:
          type: string
        style: form
      - description: Select period -ending now- for report
        explode: true
        in: query
        name: period
        required: false
        schema:
          enum:
          - 1h
          - 3h
          - 6h
          - 12h
          - 24h
          - 7d
          - 30d
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reports_aggregated_charts_200_response"
          description: Show charts of aggregated reports for domains
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Charts of aggregated reports for domains
      tags:
      - Aggregated Reports
  /reports/aggregated/filters:
    get:
      description: Get the list of combined filtering data for each domain
      operationId: reports.aggregated.filters
      parameters:
      - description: Name of domains. To filter multiple domains separate them using
          a comma
        example: "example1.com,example2.com"
        explode: true
        in: query
        name: domains
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reports_aggregated_filters_200_response"
          description: Get the list of combined filtering data for each domain
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/domains_show_404_response"
          description: Resource not found
      summary: Combined filtering data for aggregated reports
      tags:
      - Aggregated Reports
components:
  parameters:
    Domain:
      description: Domain name
      example: example.com
      explode: false
      in: path
      name: domain
      required: true
      schema:
        format: hostname
        type: string
      style: simple
    DomainQuery:
      description: Domain name or id
      explode: true
      in: query
      name: domain
      required: false
      schema:
        $ref: "#/components/schemas/plans_index_domain_parameter"
      style: form
    MetricExporterId:
      description: Metric Exporter Id
      explode: false
      in: path
      name: metricExporterId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    IgnoredPlans:
      description: Comma separaterd plan levels to ignore
      example: "0,1"
      explode: true
      in: query
      name: ignored_plans
      required: false
      schema:
        type: string
      style: form
    domainClaimId:
      description: The ID of the domain claim to verify.
      explode: false
      in: path
      name: claim_id
      required: true
      schema:
        type: string
      style: simple
    TransportLayerProxyId:
      description: Transport layer proxy id
      explode: false
      in: path
      name: transportLayerProxyId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    WafPackageId:
      description: Id of a WAF package
      example: comodo
      explode: false
      in: path
      name: wafPackageId
      required: true
      schema:
        type: string
      style: simple
    Id:
      explode: false
      in: path
      name: id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    LoadBalancerId:
      description: ID of the load balancer
      explode: false
      in: path
      name: loadBalancerId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    LoadBalancerPoolId:
      description: ID of a pool of the load balancer
      explode: false
      in: path
      name: loadBalancerPoolId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    LoadBalancerPoolOriginId:
      description: ID of an origin of the pool in the load balancer
      explode: false
      in: path
      name: loadBalancerPoolOriginId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    CertificateId:
      description: ID of an ssl certificate
      explode: false
      in: path
      name: certificateId
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    CertificateOrder:
      description: The ID of the certificate order
      explode: false
      in: path
      name: certificateOrder
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    KeepPrivateKey:
      description: "whether the private key should be retained on ArvanCloud servers.\
        \ If set to false, the private key will be permanently removed, and it will\
        \ no longer be accessible or viewable. Ensure you store the key securely for\
        \ future use"
      explode: true
      in: query
      name: keep_private_key
      required: false
      schema:
        default: true
        type: boolean
      style: form
    PackageId:
      explode: false
      in: path
      name: packageId
      required: true
      schema:
        type: string
      style: simple
    DnsRecordId:
      description: ID of the DNS record
      explode: false
      in: path
      name: id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    HealthCheckName:
      description: Name of the health-check
      explode: true
      in: query
      name: name
      required: true
      schema:
        type: string
      style: form
    HealthCheckUpstream:
      description: Upstream of the health-check monitoring
      explode: true
      in: query
      name: upstream
      required: true
      schema:
        type: string
      style: form
    HealthCheckReportType:
      description: Type of reports for the health check
      explode: true
      in: query
      name: type
      required: false
      schema:
        default: all
        enum:
        - all
        - success
        - error
        type: string
      style: form
    Search:
      description: Search term
      explode: true
      in: query
      name: search
      required: false
      schema:
        type: string
      style: form
    OrderBy:
      explode: true
      in: query
      name: order_by
      required: false
      schema:
        enum:
        - priority
        - created_at
        type: string
      style: form
    OrderType:
      explode: true
      in: query
      name: order_type
      required: false
      schema:
        enum:
        - desc
        - asc
        type: string
      style: form
    Direction:
      description: Set the direction of sorting
      explode: true
      in: query
      name: direction
      required: false
      schema:
        enum:
        - asc
        - desc
        type: string
      style: form
    CdnAppSortBy:
      explode: true
      in: query
      name: sort_by
      required: false
      schema:
        enum:
        - rank
        - likes
        type: string
      style: form
    PerPage:
      description: Set how many items returned per page
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        type: integer
      style: form
    Page:
      description: Set the desired page number
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        type: integer
      style: form
    Plans:
      description: Filter domains by plans
      explode: true
      in: query
      name: plans
      required: false
      schema:
        items:
          $ref: "#/components/schemas/Plan"
        type: array
      style: form
    CertificateTypes:
      description: Filter certificates by types
      explode: true
      in: query
      name: types
      required: false
      schema:
        items:
          $ref: "#/components/schemas/CertificateType"
        type: array
      style: form
    Statuses:
      description: Filter domains by statuses
      explode: true
      in: query
      name: statuses
      required: false
      schema:
        items:
          enum:
          - active
          - inactive
          type: string
        type: array
      style: form
    LogForwarderName:
      description: Filter log forwarders by name
      explode: true
      in: query
      name: name
      required: false
      schema:
        type: string
      style: form
    LogForwarderTypes:
      description: Filter log forwarders by type
      explode: true
      in: query
      name: types
      required: false
      schema:
        items:
          enum:
          - access
          - event
          - dns
          - error
          - waf
          type: string
        type: array
      style: form
    Sort_by:
      description: Sort domains by a specific field
      explode: true
      in: query
      name: sort_by
      required: false
      schema:
        enum:
        - plan
        - updated_at
        - status
        - name
        type: string
      style: form
    Order:
      description: Order domains in ascending or descending order
      explode: true
      in: query
      name: order
      required: false
      schema:
        enum:
        - asc
        - desc
        type: string
      style: form
    AggregatedReport:
      description: Fetch only domains which have aggregated reports enabled
      explode: true
      in: query
      name: aggr_report
      required: false
      schema:
        type: boolean
      style: form
    DynamicFieldScope:
      explode: true
      in: query
      name: scope
      required: false
      schema:
        enum:
        - private
        - public
        type: string
      style: form
    DynamicFieldType:
      explode: true
      in: query
      name: type
      required: false
      schema:
        enum:
        - ip
        - bytes
        - number
        type: string
      style: form
    DynamicFieldName:
      explode: true
      in: query
      name: name
      required: false
      schema:
        type: string
      style: form
    ReportPeriod:
      description: Select period -ending now- for report
      explode: true
      in: query
      name: period
      required: false
      schema:
        enum:
        - 1h
        - 3h
        - 6h
        - 12h
        - 24h
        - 7d
        - 30d
        type: string
      style: form
    ReportSince:
      explode: true
      in: query
      name: since
      required: false
      schema:
        format: date-time
        type: string
      style: form
    ReportUntil:
      explode: true
      in: query
      name: until
      required: false
      schema:
        format: date-time
        type: string
      style: form
    FilterSubdomain:
      explode: true
      in: query
      name: "filter[subdomain]"
      required: false
      schema:
        description: Select subdomain for report. @ means the root domain.
        nullable: true
        pattern: "^[\\w@-]+$"
        type: string
      style: form
    type:
      description: Set the desired log
      explode: true
      in: query
      name: type
      required: false
      schema:
        enum:
        - cdn
        - waf
        type: string
      style: form
    CategoryId:
      description: Filter apps by category
      explode: true
      in: query
      name: category_id
      required: false
      schema:
        format: uuid
        type: string
      style: form
    ApplicationCategory:
      description: The id of the category
      explode: false
      in: path
      name: application-category
      required: true
      schema:
        type: string
      style: simple
    ApplicationCategories:
      explode: true
      in: query
      name: categories
      required: false
      schema:
        items:
          type: string
        nullable: true
        type: array
      style: form
    HealthCheck:
      explode: false
      in: path
      name: healthcheck
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    DnsRecordType:
      description: Type of a dns record. To filter multiple types separate them using
        a comma
      example: "a,cname,txt"
      explode: true
      in: query
      name: type
      required: false
      schema:
        type: string
      style: form
    AggregatedReportsReprotType:
      description: Type of report
      explode: true
      in: query
      name: report_type
      required: false
      schema:
        enum:
        - traffic
        - requests
        type: string
      style: form
    AggregatedReportsCategoryType:
      description: Category of report
      explode: true
      in: query
      name: category_type
      required: false
      schema:
        enum:
        - pop
        - asn
        type: string
      style: form
    AggregatedReportsValidPops:
      description: "Names of a pop sites. To filter multiple pops, separate them using\
        \ a comma"
      example: "thr-r1c,thr-mci"
      explode: true
      in: query
      name: pops
      required: false
      schema:
        type: string
      style: form
    AggregatedReportsValidAsns:
      description: "Numbers of ASNs. To filter multiple ASNs, separate them using\
        \ a comma"
      example: "1435,7846"
      explode: true
      in: query
      name: asns
      required: false
      schema:
        type: string
      style: form
    CommaSeparatedDomainNames:
      description: Name of domains. To filter multiple domains separate them using
        a comma
      example: "example1.com,example2.com"
      explode: true
      in: query
      name: domains
      required: false
      schema:
        type: string
      style: form
  responses:
    UnprocessableEntityError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/domains_store_422_response"
      description: The given data was invalid
    OK:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageResponse"
      description: Successful
    Conflict:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageResponse"
      description: Coflict
    Error:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageResponse"
      description: Failed
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageResponse"
      description: Access token is missing or invalid
    AccessDenied:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageResponse"
      description: Access denied
    TrottleRequests:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MessageResponse"
      description: Too many requests
    NotFoundError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/domains_show_404_response"
      description: Resource not found
  schemas:
    CertificateProduct:
      example:
        has_wildcard: true
        price: 6.0274563
        name: name
        limit: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        is_multi: true
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        is_multi:
          type: boolean
        has_wildcard:
          type: boolean
        limit:
          type: integer
        price:
          format: float
          type: number
      type: object
    CertificateOrderIssueRequest:
      example:
        product_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        domains:
        - domain: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain_names:
          - domain_names
          - domain_names
        - domain: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain_names:
          - domain_names
          - domain_names
      properties:
        domains:
          items:
            $ref: "#/components/schemas/CertificateOrderIssueRequest_domains_inner"
          type: array
        product_id:
          format: uuid
          type: string
      required:
      - domains
      - product_id
      type: object
    AccountCertificateOrder:
      example:
        product: product
        updated_at: 2000-01-23T04:56:07.000+00:00
        is_revoked: true
        expiry_date: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order_id: order_id
        errors: "{}"
        status: status
        domain_names:
        - domain_names
        - domain_names
      properties:
        id:
          format: uuid
          type: string
        order_id:
          type: string
        status:
          type: string
        domain_names:
          items:
            type: string
          type: array
        product:
          type: string
        errors:
          nullable: true
          type: object
        expiry_date:
          format: date-time
          type: string
        is_revoked:
          type: boolean
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    SavedTrafficsCharts:
      properties:
        request:
          items:
            $ref: "#/components/schemas/SavedTrafficsCharts_request_inner"
          type: array
        traffic:
          items:
            $ref: "#/components/schemas/SavedTrafficsCharts_traffic_inner"
          type: array
      type: object
    SavedTrafficsStatistics:
      properties:
        traffic:
          $ref: "#/components/schemas/SavedTrafficsStatistics_traffic"
        request:
          $ref: "#/components/schemas/SavedTrafficsStatistics_traffic"
      type: object
    SavedTrafficsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data: "{}"
      properties:
        data:
          properties:
            statistics:
              $ref: "#/components/schemas/SavedTrafficsStatistics"
            charts:
              $ref: "#/components/schemas/SavedTrafficsCharts"
          type: object
    TransportLayerProxyTrafficCharts:
      properties:
        traffics:
          $ref: "#/components/schemas/TransportLayerProxyTrafficCharts_traffics"
      type: object
    TrafficCharts:
      example:
        traffics:
          series:
          - data:
            - 5
            - 5
            name: reports.traffics.total
          - data:
            - 5
            - 5
            name: reports.traffics.total
          categories:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          title: reports.traffics
        requests:
          series:
          - data:
            - 5
            - 5
            name: reports.requests.total
          - data:
            - 5
            - 5
            name: reports.requests.total
          categories:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          title: reports.requests
      properties:
        requests:
          $ref: "#/components/schemas/TrafficCharts_requests"
        traffics:
          $ref: "#/components/schemas/TrafficCharts_traffics"
      type: object
    TrafficStatistics:
      example:
        traffics:
          bypass: 6
          total: 1
          top: 2000-01-23T04:56:07.000+00:00
          saved: 0
        requests:
          bypass: 6
          total: 1
          top: 2000-01-23T04:56:07.000+00:00
          saved: 0
      properties:
        traffics:
          $ref: "#/components/schemas/TrafficStatistics_traffics"
        requests:
          $ref: "#/components/schemas/TrafficStatistics_traffics"
      type: object
    TransportLayerProxyTrafficsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data: "{}"
      properties:
        data:
          properties:
            charts:
              $ref: "#/components/schemas/TransportLayerProxyTrafficCharts"
          type: object
    TrafficsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            traffics:
              series:
              - data:
                - 5
                - 5
                name: reports.traffics.total
              - data:
                - 5
                - 5
                name: reports.traffics.total
              categories:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              title: reports.traffics
            requests:
              series:
              - data:
                - 5
                - 5
                name: reports.requests.total
              - data:
                - 5
                - 5
                name: reports.requests.total
              categories:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              title: reports.requests
          statistics:
            traffics:
              bypass: 6
              total: 1
              top: 2000-01-23T04:56:07.000+00:00
              saved: 0
            requests:
              bypass: 6
              total: 1
              top: 2000-01-23T04:56:07.000+00:00
              saved: 0
      properties:
        data:
          $ref: "#/components/schemas/Traffics"
    CountryStatistics:
      example:
        country: country
        traffics: 6
        requests: 0
      properties:
        country:
          description: The name of the country
          type: string
        requests:
          description: The number of requests from the country
          format: int64
          type: integer
        traffics:
          description: The amount of traffic from the country
          format: int64
          type: integer
      type: object
    CountryRequestChart:
      example:
        IRN:
          fillKey: 4
          name: Iran (Islamic Republic of)
          value: 12456789
        description: A dictionay which maps country codes to fill and value
      properties:
        fillKey:
          description: The fill key for the country
          format: int64
          type: integer
        name:
          description: The name of the country
          type: string
        value:
          description: The number of requests from the country
          format: int64
          type: integer
      type: object
    CountryTrafficChart:
      example:
        fillKey: 1
        name: name
        value: 5
      properties:
        fillKey:
          description: The fill key for the country
          format: int64
          type: integer
        name:
          description: The name of the country
          type: string
        value:
          description: The amount of traffic from the country
          format: int64
          type: integer
      type: object
    CountryList:
      example:
        country: country
        code: code
        traffics: 2
        requests: 5
      properties:
        country:
          description: The name of the country
          type: string
        code:
          description: The 2-letter country code
          type: string
        requests:
          description: The number of requests from the country
          format: int64
          type: integer
        traffics:
          description: The amount of traffic from the country
          format: int64
          type: integer
      type: object
    MapTrafficsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            traffics:
              key:
                fillKey: 1
                name: name
                value: 5
            requests:
              key:
                IRN:
                  fillKey: 4
                  name: Iran (Islamic Republic of)
                  value: 12456789
                description: A dictionay which maps country codes to fill and value
          lists:
          - country: country
            code: code
            traffics: 2
            requests: 5
          - country: country
            code: code
            traffics: 2
            requests: 5
          statistics:
          - country: country
            traffics: 6
            requests: 0
          - country: country
            traffics: 6
            requests: 0
      properties:
        data:
          $ref: "#/components/schemas/TrafficsMap"
    VisitorsStatistics:
      example:
        visitors:
          total_visitors: 0
          top_visitors: 2000-01-23T04:56:07.000+00:00
      properties:
        visitors:
          $ref: "#/components/schemas/VisitorsStatistics_visitors"
      type: object
    VisitorsCharts:
      example:
        visitors:
          series:
          - data:
            - 6
            - 6
            name: reports.visitor.visitors
          - data:
            - 6
            - 6
            name: reports.visitor.visitors
          categories:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          title: reports.visitor
      properties:
        visitors:
          $ref: "#/components/schemas/VisitorsCharts_visitors"
      type: object
    Traffics:
      example:
        charts:
          traffics:
            series:
            - data:
              - 5
              - 5
              name: reports.traffics.total
            - data:
              - 5
              - 5
              name: reports.traffics.total
            categories:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            title: reports.traffics
          requests:
            series:
            - data:
              - 5
              - 5
              name: reports.requests.total
            - data:
              - 5
              - 5
              name: reports.requests.total
            categories:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            title: reports.requests
        statistics:
          traffics:
            bypass: 6
            total: 1
            top: 2000-01-23T04:56:07.000+00:00
            saved: 0
          requests:
            bypass: 6
            total: 1
            top: 2000-01-23T04:56:07.000+00:00
            saved: 0
      properties:
        statistics:
          $ref: "#/components/schemas/TrafficStatistics"
        charts:
          $ref: "#/components/schemas/TrafficCharts"
      type: object
    TrafficsMap:
      example:
        charts:
          traffics:
            key:
              fillKey: 1
              name: name
              value: 5
          requests:
            key:
              IRN:
                fillKey: 4
                name: Iran (Islamic Republic of)
                value: 12456789
              description: A dictionay which maps country codes to fill and value
        lists:
        - country: country
          code: code
          traffics: 2
          requests: 5
        - country: country
          code: code
          traffics: 2
          requests: 5
        statistics:
        - country: country
          traffics: 6
          requests: 0
        - country: country
          traffics: 6
          requests: 0
      properties:
        statistics:
          deprecated: true
          items:
            $ref: "#/components/schemas/CountryStatistics"
          type: array
        charts:
          $ref: "#/components/schemas/TrafficsMap_charts"
        lists:
          items:
            $ref: "#/components/schemas/CountryList"
          type: array
      type: object
    Visitors:
      example:
        charts:
          visitors:
            series:
            - data:
              - 6
              - 6
              name: reports.visitor.visitors
            - data:
              - 6
              - 6
              name: reports.visitor.visitors
            categories:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            title: reports.visitor
        statistics:
          visitors:
            total_visitors: 0
            top_visitors: 2000-01-23T04:56:07.000+00:00
      properties:
        statistics:
          $ref: "#/components/schemas/VisitorsStatistics"
        charts:
          $ref: "#/components/schemas/VisitorsCharts"
      type: object
    VisitorsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            visitors:
              series:
              - data:
                - 6
                - 6
                name: reports.visitor.visitors
              - data:
                - 6
                - 6
                name: reports.visitor.visitors
              categories:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              title: reports.visitor
          statistics:
            visitors:
              total_visitors: 0
              top_visitors: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/Visitors"
    HighRequestedIp:
      example:
        ip: HighRequestedIp_ip
        request_count: 0
      properties:
        ip:
          $ref: "#/components/schemas/HighRequestedIp_ip"
        request_count:
          format: int64
          type: integer
      type: object
    ResponseTime:
      example:
        charts:
          ir:
            series:
            - data:
              - 0.8008281904610115
              - 0.8008281904610115
              name: reports.response_time.Server
            - data:
              - 0.8008281904610115
              - 0.8008281904610115
              name: reports.response_time.Server
            categories:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            title: reports.response_time
      properties:
        charts:
          $ref: "#/components/schemas/ResponseTime_charts"
      type: object
    ResponseTimeData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            ir:
              series:
              - data:
                - 0.8008281904610115
                - 0.8008281904610115
                name: reports.response_time.Server
              - data:
                - 0.8008281904610115
                - 0.8008281904610115
                name: reports.response_time.Server
              categories:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              title: reports.response_time
      properties:
        data:
          $ref: "#/components/schemas/ResponseTime"
    StatusCodeReport:
      example:
        charts:
          status_code:
            series:
            - data:
              - 5.637376656633329
              - 5.637376656633329
              name: report.status_code.2xx
            - data:
              - 5.637376656633329
              - 5.637376656633329
              name: report.status_code.2xx
            name: status_code
            categories:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
        statistics:
          status_codes:
            "4xx_sum": 1
            "3xx_sum": 6
            "5xx_sum": 5
            "2xx_sum": 0
      properties:
        statistics:
          $ref: "#/components/schemas/StatusCodeReport_statistics"
        charts:
          $ref: "#/components/schemas/StatusCodeReport_charts"
      type: object
    StatusCodeReportData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            status_code:
              series:
              - data:
                - 5.637376656633329
                - 5.637376656633329
                name: report.status_code.2xx
              - data:
                - 5.637376656633329
                - 5.637376656633329
                name: report.status_code.2xx
              name: status_code
              categories:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
          statistics:
            status_codes:
              "4xx_sum": 1
              "3xx_sum": 6
              "5xx_sum": 5
              "2xx_sum": 0
      properties:
        data:
          $ref: "#/components/schemas/StatusCodeReport"
    StatusCodeSummary:
      example:
        charts:
          status_code:
          - name: name
            "y": 0
          - name: name
            "y": 0
        statistics: "{}"
      properties:
        statistics:
          deprecated: true
          type: object
        charts:
          $ref: "#/components/schemas/StatusCodeSummary_charts"
      type: object
    StatusCodeSummaryData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            status_code:
            - name: name
              "y": 0
            - name: name
              "y": 0
          statistics: "{}"
      properties:
        data:
          $ref: "#/components/schemas/StatusCodeSummary"
    ErrorLog:
      example:
        upstreams:
        - address: address
          count: 6
        - address: address
          count: 6
        name: name
        count: 0
      properties:
        name:
          description: The error message
          type: string
        count:
          description: The error's count
          format: int64
          type: integer
        upstreams:
          items:
            $ref: "#/components/schemas/ErrorLog_upstreams_inner"
          type: array
      type: object
    ErrorLogsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
        - upstreams:
          - address: address
            count: 6
          - address: address
            count: 6
          name: name
          count: 0
        - upstreams:
          - address: address
            count: 6
          - address: address
            count: 6
          name: name
          count: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/ErrorLog"
          type: array
    ErrorLogChart:
      example:
        charts:
          status_code:
            series:
            - data:
              - 0
              - 0
              name: name
            - data:
              - 0
              - 0
              name: name
            categories:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            title: reports.status_code
        statistics:
          status_codes:
            key: ""
      properties:
        statistics:
          $ref: "#/components/schemas/ErrorLogChart_statistics"
        charts:
          $ref: "#/components/schemas/ErrorLogChart_charts"
      type: object
    ErrorLogChartData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            status_code:
              series:
              - data:
                - 0
                - 0
                name: name
              - data:
                - 0
                - 0
                name: name
              categories:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              title: reports.status_code
          statistics:
            status_codes:
              key: ""
      properties:
        data:
          $ref: "#/components/schemas/ErrorLogChart"
    DnsRequestReport:
      example:
        charts:
          requests:
            series:
            - data:
              - 6
              - 6
              name: reports.requests.request
            - data:
              - 6
              - 6
              name: reports.requests.request
            categories:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            title: reports.requests
        statistics:
          total: 0
          top: 2000-01-23T04:56:07.000+00:00
      properties:
        statistics:
          $ref: "#/components/schemas/DnsRequestReport_statistics"
        charts:
          $ref: "#/components/schemas/DnsRequestReport_charts"
      type: object
    DnsRequestReportData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            requests:
              series:
              - data:
                - 6
                - 6
                name: reports.requests.request
              - data:
                - 6
                - 6
                name: reports.requests.request
              categories:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              title: reports.requests
          statistics:
            total: 0
            top: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/DnsRequestReport"
    DnsGeoReport:
      example:
        charts:
          requests:
            IRN:
              fillKey: 4
              name: Iran (Islamic Republic of)
              value: 12456789
        lists:
        - country: country
          code: code
          name: name
          requests: 0
        - country: country
          code: code
          name: name
          requests: 0
        statistics:
        - ""
        - ""
      properties:
        statistics:
          deprecated: true
          items: {}
          type: array
        charts:
          $ref: "#/components/schemas/DnsGeoReport_charts"
        lists:
          items:
            $ref: "#/components/schemas/DnsGeoReport_lists_inner"
          type: array
      type: object
    DnsGeoReportData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            requests:
              IRN:
                fillKey: 4
                name: Iran (Islamic Republic of)
                value: 12456789
          lists:
          - country: country
            code: code
            name: name
            requests: 0
          - country: country
            code: code
            name: name
            requests: 0
          statistics:
          - ""
          - ""
      properties:
        data:
          $ref: "#/components/schemas/DnsGeoReport"
    AttackReport:
      example:
        charts:
          attacks:
            series:
            - data:
              - 6
              - 6
              name: reports.attack.attacks
            - data:
              - 6
              - 6
              name: reports.attack.attacks
            categories:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            title: reports.attack
        statistics:
          Attacks:
            total_attacks: 0
            top_attacks: 2000-01-23T04:56:07.000+00:00
      properties:
        statistics:
          $ref: "#/components/schemas/AttackReport_statistics"
        charts:
          $ref: "#/components/schemas/AttackReport_charts"
      type: object
    AttackReportItem:
      example:
        alerts:
        - alerts
        - alerts
        method: GET
        cookie:
        - cookie
        - cookie
        attacker_country: attacker_country
        uri_args: uri_args
        attacker_ip: attacker_ip
        host:
        - host
        - host
        uri: https://openapi-generator.tech
        user_agent:
        - user_agent
        - user_agent
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        attacker_ip:
          format: ipv4
          type: string
        attacker_country:
          type: string
        method:
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          - HEAD
          - OPTION
          type: string
        uri:
          format: uri
          type: string
        host:
          items:
            format: hostname
            type: string
          type: array
        timestamp:
          format: date-time
          type: string
        uri_args:
          type: string
        cookie:
          items:
            type: string
          type: array
        alerts:
          items:
            type: string
          type: array
        user_agent:
          items:
            type: string
          type: array
      type: object
    AttackReportMap:
      example:
        charts:
          attacks:
            key:
              fillKey: 6
              name: name
              value: 1
        lists:
        - country: country
          code: code
          attack: 0
          name: name
        - country: country
          code: code
          attack: 0
          name: name
        statistics:
        - country: country
          code: code
          attack: 0
          name: name
        - country: country
          code: code
          attack: 0
          name: name
      properties:
        statistics:
          deprecated: true
          items:
            $ref: "#/components/schemas/AttackReportMap_statistics_inner"
          type: array
        charts:
          $ref: "#/components/schemas/AttackReportMap_charts"
        lists:
          items:
            $ref: "#/components/schemas/AttackReportMap_statistics_inner"
          type: array
      type: object
    AttackReportMapData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            attacks:
              key:
                fillKey: 6
                name: name
                value: 1
          lists:
          - country: country
            code: code
            attack: 0
            name: name
          - country: country
            code: code
            attack: 0
            name: name
          statistics:
          - country: country
            code: code
            attack: 0
            name: name
          - country: country
            code: code
            attack: 0
            name: name
      properties:
        data:
          $ref: "#/components/schemas/AttackReportMap"
    AttackReportUri:
      example:
        count: 0
        uri: https://openapi-generator.tech
      properties:
        uri:
          format: uri
          type: string
        count:
          format: int64
          type: integer
      type: object
    AttackReportUriData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
        - count: 0
          uri: https://openapi-generator.tech
        - count: 0
          uri: https://openapi-generator.tech
      properties:
        data:
          items:
            $ref: "#/components/schemas/AttackReportUri"
          type: array
    DataWithMessageResponse:
      properties:
        message:
          nullable: true
          type: string
        data:
          nullable: true
          type: object
      type: object
    DataResponse:
      properties:
        data:
          nullable: true
          type: object
      type: object
    PaginatedResponse:
      properties:
        data:
          items:
            type: object
          type: array
        links:
          $ref: "#/components/schemas/PaginatedResponseLinks"
        meta:
          $ref: "#/components/schemas/PaginatedResponseMeta"
      type: object
    PaginatedResponseMeta:
      properties:
        current_page:
          type: integer
        from:
          type: integer
        last_page:
          type: integer
        path:
          format: url
          type: string
        per_page:
          type: integer
        to:
          type: integer
        total:
          type: integer
      type: object
    PaginatedResponseLinks:
      properties:
        first:
          format: url
          type: string
        last:
          format: url
          nullable: true
          type: string
        prev:
          format: url
          nullable: true
          type: string
        next:
          format: url
          nullable: true
          type: string
      required:
      - first
      - next
      - prev
      type: object
    CustomCname:
      example:
        address: address
      properties:
        address:
          format: hostname
          type: string
      required:
      - address
      type: object
    DomainTransferData:
      example:
        incoming: true
        account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        owner_name: owner_name
        owner_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        domain: domain
        account_name: account_name
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        domain:
          format: hostname
          type: string
        account_id:
          format: uuid
          type: string
        account_name:
          type: string
        owner_name:
          type: string
        owner_id:
          format: uuid
          type: string
        time:
          format: date-time
          type: string
        incoming:
          type: boolean
      readOnly: true
      type: object
    DomainClaim:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        domain: domain
        ns_keys:
        - h.ns.example.com
        - s.ns.example.com
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: PENDING
      properties:
        id:
          format: uuid
          type: string
        domain:
          description: name of claimed domain
          format: hostname
          type: string
        ns_keys:
          description: Desired NS values for the domain
          example:
          - h.ns.example.com
          - s.ns.example.com
          items:
            format: hostname
            type: string
          maxItems: 2
          minItems: 2
          type: array
        status:
          description: |
            - PENDING: The domain claim is pending verification and waiting to set nameservers in the registrar.
            - EXPIRED: The pending status has a time limit and if not verified within that limit, it becomes expired.
            - VERIFIED: The system has successfully checked that the nameservers are set to ns_keys.
            - SUSPENDED: The current domain owner has contacted support and suspended the automatic claim. The claimer should contact support in this situation.
            - TRANSFERRED: The domain has been verified, the ownership transfer period is complete, and the domain has been successfully transferred to the claimer.
          enum:
          - PENDING
          - EXPIRED
          - VERIFIED
          - TRANSFERRED
          - SUSPENDED
          type: string
        updated_at:
          format: date-time
          type: string
      readOnly: true
      type: object
    DomainClaimRequest:
      example:
        domain: domain
      properties:
        domain:
          description: name of claiming domain
          format: hostname
          type: string
      type: object
    Domain:
      example:
        custom_cname: custom_cname
        created_at: 2000-01-23T04:56:07.000+00:00
        type: full
        account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        plan_level: 0
        transfer:
          incoming: true
          account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          owner_name: owner_name
          owner_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain: domain
          account_name: account_name
          time: 2000-01-23T04:56:07.000+00:00
        plan_duraition: 6
        dns_cloud: false
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cname_target: cname_target
        domain: domain
        name: name
        restriction:
        - paused
        - paused
        ns_keys:
        - ns_keys
        - ns_keys
        fingerprint_status: false
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        current_ns:
        - current_ns
        - current_ns
        status: initializing
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        account_id:
          format: uuid
          type: string
        user_id:
          deprecated: true
          description: "Deprecated: Please use 'account_id' instead."
          format: uuid
          type: string
        domain:
          deprecated: true
          description: Deprecated in favor of name attribute
          format: hostname
          type: string
        name:
          format: hostname
          type: string
        plan_level:
          description: |
            - `0` - Traffic
            - `1` - Basic
            - `2` - Growth
            - `3` - Professional
            - `4` - Enterprise
            - Subdomains require to have Growth plan or higher
          maximum: 4
          minimum: 0
          type: integer
        plan_duraition:
          description: |
            - `0` - Normal
            - `6` - Six month prepaid
            - `12` - Twelve month prepaid
            - Prepaid subscription is available for Growth and Professional plan.
          type: integer
        ns_keys:
          description: Desired NS values for the domain
          items:
            format: hostname
            type: string
          maxItems: 2
          minItems: 2
          type: array
        current_ns:
          description: Current NS values for the domain
          items:
            format: hostname
            type: string
          maxItems: 2
          minItems: 2
          type: array
        cname_target:
          description: Current record for CNAME Setup of the domain
          format: hostname
          nullable: true
          type: string
        custom_cname:
          description: Domain's custom record for CNAME Setup
          format: hostname
          nullable: true
          type: string
        type:
          description: Partial domain is using CNAME Setup and full domain is using
            NS Setup
          enum:
          - full
          - partial
          type: string
        status:
          enum:
          - initializing
          - pending
          - active
          - moved
          type: string
        dns_cloud:
          default: false
          type: boolean
        restriction:
          items:
            enum:
            - paused
            - suspended
            - unfair
            - charged
            type: string
          type: array
        transfer:
          $ref: "#/components/schemas/DomainTransferData"
        fingerprint_status:
          default: false
          readOnly: true
          type: boolean
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    AggregatedReportsResponse:
      example:
        pop: Tehran - MCI
        total_downstream: 120
        domain: domain
        total_upstream: 120
        total_requests: 1000
        asn: 67352
      properties:
        domain:
          format: hostname
          type: string
        total_downstream:
          example: 120
          type: integer
        total_upstream:
          example: 120
          type: integer
        total_requests:
          example: 1000
          type: integer
        asn:
          example: 67352
          nullable: true
          type: integer
        pop:
          example: Tehran - MCI
          nullable: true
          type: string
      type: object
    AggregatedReportsChartsResponse:
      example:
        series:
        - data:
          - 1200
          - 1200
          name: Tehran - MCI
        - data:
          - 1200
          - 1200
          name: Tehran - MCI
        categories:
        - 2023-12-13T10:00:00Z
        - 2023-12-13T10:00:00Z
        title: title
      properties:
        title:
          format: reports.aggregated.charts
          type: string
        categories:
          items:
            example: 2023-12-13T10:00:00Z
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/AggregatedReportsChartsResponse_series_inner"
          type: array
      type: object
    AggregatedReportsFilterResponse:
      example:
        pops:
        - pop: thr-mci
          label: Tehran - MCI
        - pop: thr-mci
          label: Tehran - MCI
        asns:
        - 6439
        - 6439
      properties:
        pops:
          items:
            $ref: "#/components/schemas/AggregatedReportsFilterResponse_pops_inner"
          type: array
        asns:
          items:
            example: 6439
            type: integer
          type: array
      type: object
    DomainStore:
      example:
        domain_type: full
        plan_level: 0
        domain: domain
      properties:
        domain:
          description: Name of the domain
          format: hostname
          type: string
        domain_type:
          default: full
          description: "If you want to register a subdomain, you can use cname setup\
            \ by sending partial type"
          enum:
          - full
          - partial
          type: string
        plan_level:
          description: |
            - `0` - Traffic
            - `1` - Basic
            - `2` - Growth
            - `3` - Professional
            - `4` - Enterprise
            - Subdomains require to have Growth plan or higher
          maximum: 4
          minimum: 0
          type: integer
      required:
      - domain
      type: object
    DomainResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          custom_cname: custom_cname
          created_at: 2000-01-23T04:56:07.000+00:00
          type: full
          account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plan_level: 0
          transfer:
            incoming: true
            account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            owner_name: owner_name
            owner_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            domain: domain
            account_name: account_name
            time: 2000-01-23T04:56:07.000+00:00
          plan_duraition: 6
          dns_cloud: false
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cname_target: cname_target
          domain: domain
          name: name
          restriction:
          - paused
          - paused
          ns_keys:
          - ns_keys
          - ns_keys
          fingerprint_status: false
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          current_ns:
          - current_ns
          - current_ns
          status: initializing
      properties:
        data:
          $ref: "#/components/schemas/Domain"
    TransferDomain:
      example:
        account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        account_id:
          format: uuid
          type: string
      required:
      - account_id
      type: object
    TransferDomainChangeStatus:
      example:
        preserve_state: false
        domain: example.com
        status: accept
      properties:
        domain:
          example: example.com
          format: hostname
          type: string
        status:
          enum:
          - accept
          - cancel
          type: string
        preserve_state:
          default: false
          type: boolean
      required:
      - domain
      - status
      type: object
    NsKeys:
      example:
        ns_keys:
        - ns_keys
        - ns_keys
      properties:
        ns_keys:
          description: Desired NS values for the domain
          items:
            format: hostname
            type: string
          type: array
      type: object
    NsKeysResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data: "{}"
      properties:
        data:
          properties:
            ns_keys:
              description: Desired NS values for the domain
              items:
                format: hostname
                type: string
              type: array
          type: object
    NsDomain:
      example:
        ns_keys:
        - ns_keys
        - ns_keys
        ns_domain:
        - ns_domain
        - ns_domain
      properties:
        ns_domain:
          description: Current NS records of the domain
          items:
            format: hostname
            type: string
          type: array
        ns_keys:
          description: Desired NS values for the domain
          items:
            format: hostname
            type: string
          type: array
      type: object
    DeprecatedNs:
      example:
        ns_status: true
        ns_keys:
        - ns_keys
        - ns_keys
        ns_domain:
        - ns_domain
        - ns_domain
      properties:
        ns_domain:
          description: Current NS records of the domain
          items:
            format: hostname
            type: string
          type: array
        ns_keys:
          description: Desired NS values for the domain
          items:
            format: hostname
            type: string
          type: array
        ns_status:
          type: boolean
      type: object
    Plan:
      description: |
        - `0` - Traffic
        - `1` - Basic
        - `2` - Growth
        - `3` - Professional
        - `4` - Enterprise
        - Subdomains require to have Growth plan or higher
      maximum: 4
      minimum: 0
      type: integer
    PlanDuration:
      description: |
        - `0` - Normal
        - `6` - Six month prepaid
        - `12` - Twelve month prepaid
        - Prepaid subscription is available for Growth and Professional plan.
      type: integer
    CertificateType:
      enum:
      - user
      - arvan
      - origin
      type: string
    PlanUpdate:
      example:
        plan_level: 0
        plan_duration: 6
      properties:
        plan_level:
          description: |
            - `0` - Traffic
            - `1` - Basic
            - `2` - Growth
            - `3` - Professional
            - `4` - Enterprise
            - Subdomains require to have Growth plan or higher
          maximum: 4
          minimum: 0
          type: integer
        plan_duration:
          description: |
            - `0` - Normal
            - `6` - Six month prepaid
            - `12` - Twelve month prepaid
            - Prepaid subscription is available for Growth and Professional plan.
          type: integer
      required:
      - plan_level
      type: object
    A-RecordValue:
      example:
        country: US
        port: 5249
        ip: ip
        weight: 602
        original_weight: 100
      properties:
        ip:
          format: ipv4
          type: string
        port:
          maximum: 65535
          minimum: 1
          nullable: true
          type: integer
        weight:
          maximum: 1000
          minimum: 0
          nullable: true
          type: integer
        original_weight:
          description: This key shows itself here if the weight have been changed
            by Health Check.
          example: 100
          readOnly: true
          type: integer
        country:
          description: ISO 3166 alpha-2 country code
          example: US
          nullable: true
          type: string
      required:
      - ip
      type: object
    A-RecordValues:
      items:
        $ref: "#/components/schemas/A-RecordValue"
      type: array
    AAAA-RecordValues:
      items:
        $ref: "#/components/schemas/AAAA-RecordValue"
      type: array
    AAAA-RecordValue:
      properties:
        ip:
          format: ipv6
          type: string
        port:
          maximum: 65535
          minimum: 1
          nullable: true
          type: integer
        weight:
          maximum: 1000
          minimum: 0
          nullable: true
          type: integer
        original_weight:
          description: This key shows itself here if the weights have been changed
            by Health Check.
          example: 100
          readOnly: true
          type: integer
        country:
          description: ISO 3166 alpha-2 country code
          example: US
          nullable: true
          type: string
      required:
      - ip
      type: object
    MX-RecordValue:
      properties:
        host:
          example: cdn.example.com
          format: hostname
          maxLength: 500
          pattern: "^([a-zA-Z0-9._-])+$"
          type: string
        priority:
          maximum: 9999
          minimum: 0
          nullable: true
          type: integer
      required:
      - host
      - priority
      type: object
    NS-RecordValue:
      properties:
        host:
          example: cdn.example.com
          format: hostname
          maxLength: 500
          pattern: "^([a-zA-Z0-9._-])+$"
          type: string
      required:
      - host
      type: object
    SRV-RecordValue:
      properties:
        target:
          example: cdn.example.com
          format: hostname
          maxLength: 500
          pattern: "^([a-zA-Z0-9._-])+$"
          type: string
        port:
          maximum: 65535
          minimum: 1
          nullable: true
          type: integer
        weight:
          maximum: 1000
          minimum: 0
          nullable: true
          type: integer
        priority:
          maximum: 9999
          minimum: 0
          nullable: true
          type: integer
      required:
      - port
      - target
      type: object
    TXT-RecordValue:
      properties:
        text:
          maxLength: 500
          type: string
      required:
      - text
      type: object
    SPF-RecordValue:
      $ref: "#/components/schemas/TXT-RecordValue"
    DKIM-RecordValue:
      $ref: "#/components/schemas/TXT-RecordValue"
    ANAME-RecordValue:
      properties:
        location:
          description: A fully-qualified domain name (FQDN)
          example: cdn.example.com
          format: hostname
          type: string
        host_header:
          enum:
          - source
          - dest
          nullable: true
          type: string
        port:
          maximum: 65535
          minimum: 1
          nullable: true
          type: integer
      required:
      - host_header
      - location
      type: object
    CNAME-RecordValue:
      properties:
        host:
          description: A fully-qualified domain name (FQDN)
          example: cdn.example.com
          format: hostname
          type: string
        host_header:
          enum:
          - source
          - dest
          nullable: true
          type: string
        port:
          maximum: 65535
          minimum: 1
          nullable: true
          type: integer
      required:
      - host
      - host_header
      type: object
    PTR-RecordValue:
      properties:
        domain:
          example: cdn.example.com
          format: hostname
          maxLength: 500
          pattern: "^([a-zA-Z0-9._-])+$"
          type: string
      type: object
    TLSA-RecordValue:
      properties:
        usage:
          maxLength: 255
          minLength: 0
          type: string
        selector:
          maxLength: 255
          minLength: 0
          type: string
        matching_type:
          maxLength: 255
          minLength: 0
          type: string
        certificate:
          example: 1SKJND4KSID7OS9KJ21LSJ
          type: string
      required:
      - certificate
      - matching_type
      - selector
      - usage
      type: object
    CAA-RecordValue:
      properties:
        value:
          description: Should be a valid domain
          example: example.com
          type: string
        tag:
          enum:
          - issuewild
          - issue
          - iodef
          type: string
      required:
      - tag
      - value
      type: object
    Fqdn:
      description: A fully-qualified domain name (FQDN)
      example: cdn.example.com
      format: hostname
      type: string
    HostName:
      example: cdn.example.com
      format: hostname
      maxLength: 500
      pattern: "^([a-zA-Z0-9._-])+$"
      type: string
    DnsRecord:
      oneOf:
      - $ref: "#/components/schemas/A-Record"
      - $ref: "#/components/schemas/AAAA-Record"
      - $ref: "#/components/schemas/NS-Record"
      - $ref: "#/components/schemas/TXT-Record"
      - $ref: "#/components/schemas/CNAME-Record"
      - $ref: "#/components/schemas/ANAME-Record"
      - $ref: "#/components/schemas/MX-Record"
      - $ref: "#/components/schemas/SRV-Record"
      - $ref: "#/components/schemas/SPF-Record"
      - $ref: "#/components/schemas/DKIM-Record"
      - $ref: "#/components/schemas/PTR-Record"
      - $ref: "#/components/schemas/TLSA-Record"
      - $ref: "#/components/schemas/CAA-Record"
    DnsRecordGeneric:
      anyOf:
      - $ref: "#/components/schemas/DnsRecordGenericArrayValue"
      - $ref: "#/components/schemas/DnsRecordGenericObjectValue"
    DnsRecordGenericObjectValue:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          example:
            text: example
          type: object
        type:
          example: cname
          type: string
    DnsRecordGenericArrayValue:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      example:
        type: a
        value:
        - ip: 198.51.100.42
          port: 65535
          weight: 1000
          country: US
      properties:
        value:
          example:
          - ip: 198.51.100.42
            port: 65535
            weight: 1000
            country: US
          items: {}
          type: array
        type:
          example: a
          type: string
    CAA-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/CAA-RecordValue"
        type:
          default: caa
          enum:
          - caa
          type: string
    TLSA-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/TLSA-RecordValue"
        type:
          default: tlsa
          enum:
          - tlsa
          type: string
    PTR-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/PTR-RecordValue"
        type:
          default: ptr
          enum:
          - ptr
          type: string
    DKIM-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/TXT-RecordValue"
        type:
          default: dkim
          enum:
          - dkim
          type: string
    SPF-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/TXT-RecordValue"
        type:
          default: spf
          enum:
          - spf
          type: string
    SRV-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/SRV-RecordValue"
        type:
          default: srv
          enum:
          - srv
          type: string
    TXT-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/TXT-RecordValue"
        type:
          default: txt
          enum:
          - txt
          type: string
    MX-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/MX-RecordValue"
        type:
          default: mx
          enum:
          - mx
          type: string
    ANAME-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/ANAME-RecordValue"
        type:
          default: aname
          enum:
          - aname
          type: string
    CNAME-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/CNAME-RecordValue"
        type:
          default: cname
          enum:
          - cname
          type: string
    NS-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          $ref: "#/components/schemas/NS-RecordValue"
        type:
          default: ns
          enum:
          - ns
          type: string
    A-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      example:
        type: a
        value:
        - country: US
          port: 5249
          ip: ip
          weight: 602
          original_weight: 100
        - country: US
          port: 5249
          ip: ip
          weight: 602
          original_weight: 100
      properties:
        value:
          items:
            $ref: "#/components/schemas/A-RecordValue"
          type: array
        type:
          default: a
          enum:
          - a
          type: string
    AAAA-Record:
      allOf:
      - $ref: "#/components/schemas/BaseDnsRecord"
      properties:
        value:
          items:
            $ref: "#/components/schemas/AAAA-RecordValue"
          type: array
        type:
          default: aaaa
          enum:
          - aaaa
          type: string
    BaseDnsRecord:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          maxLength: 250
          type: string
        ttl:
          enum:
          - 120
          - 180
          - 300
          - 600
          - 900
          - 1800
          - 3600
          - 7200
          - 18000
          - 43200
          - 86400
          - 172800
          - 432000
          type: integer
        cloud:
          default: false
          type: boolean
        upstream_https:
          enum:
          - default
          - auto
          - http
          - https
          type: string
        ip_filter_mode:
          $ref: "#/components/schemas/DnsRecordIpFilterMode"
        is_protected:
          default: false
          description: Protected records cannot be modified or deleted by user.
          readOnly: true
          type: boolean
        usage:
          default: []
          items:
            enum:
            - transport-layer-proxy
            - certificate-issuance
            type: string
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    DnsRecordIpFilterMode:
      properties:
        count:
          enum:
          - single
          - multi
          type: string
        order:
          enum:
          - none
          - weighted
          - rr
          type: string
        geo_filter:
          enum:
          - none
          - location
          - country
          type: string
      type: object
    DnsRecordResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          type: a
          value:
          - ip: 198.51.100.42
            port: 65535
            weight: 1000
            country: US
      properties:
        data:
          $ref: "#/components/schemas/DnsRecordGeneric"
    DnsRecordData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          type: a
          value:
          - ip: 198.51.100.42
            port: 65535
            weight: 1000
            country: US
      properties:
        data:
          $ref: "#/components/schemas/DnsRecordGeneric"
    DnsRecordCloud:
      example:
        cloud: true
      properties:
        cloud:
          type: boolean
      required:
      - cloud
      type: object
    DnsRecordImport:
      properties:
        f_zone_file:
          format: binary
          type: string
      type: object
    DnsSec:
      example:
        enabled: false
        ds: ds
      properties:
        enabled:
          default: false
          type: boolean
        ds:
          nullable: true
          type: string
      type: object
    DnsSecData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          enabled: false
          ds: ds
      properties:
        data:
          $ref: "#/components/schemas/DnsSec"
    DnsSecStatus:
      example:
        enable: true
      properties:
        enable:
          type: boolean
      required:
      - enable
      type: object
    PageRuleSummary:
      example:
        url_type: default
        created_at: 2000-01-23T04:56:07.000+00:00
        is_protected: false
        fw_status: true
        url: url
        cache_level: query_string
        slink_status: false
        domain_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        acceleration:
          extensions:
          - css
          - js
          status: inherit
        waf_status: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        seq: 0
        status: true
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        domain_id:
          format: uuid
          type: string
        seq:
          description: Order of the page-rule
          minimum: 0
          type: integer
        url_type:
          default: default
          deprecated: true
          description: This flag is deprecated in favor of is_protected flag
          enum:
          - default
          - index
          - directory
          - extension
          - page
          - regex
          type: string
        is_protected:
          default: false
          description: Protected records cannot be modified or deleted by user.
          readOnly: true
          type: boolean
        url:
          description: URL pattern of target pages
          type: string
        cache_level:
          default: query_string
          enum:
          - "false"
          - uri
          - query_string
          type: string
        waf_status:
          default: true
          type: boolean
        fw_status:
          default: true
          deprecated: true
          description: Shows whether firewall is enabled or not
          type: boolean
        acceleration:
          $ref: "#/components/schemas/Acceleration"
        slink_status:
          default: false
          description: Secure link is enabled or not
          type: boolean
        status:
          default: true
          description: Is the page-rule enabled?
          type: boolean
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    PageRule:
      allOf:
      - $ref: "#/components/schemas/PageRuleSummary"
      example:
        load_balancer: load_balancer
        res_custom_headers:
        - "{}"
        - "{}"
        upstream_timeout:
          connect_timeout: 0
          send_timeout: 1
          read_timeout: 6
        cache_args: true
        cache_ignore_sc: false
        cors_header: "-"
        cluster_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cache_cookie: ""
        cluster_status: false
        cache_device_type: false
        slink_secret: ""
        cache_arg: filter&sort
        slink_md5:
        - remote_addr
        - remote_addr
        cache_ignore_cc: true
        edge_compute_id: edge_compute_id
        req_hide_headers:
        - req_hide_headers
        - req_hide_headers
        redirect:
          status_code: 5
          enable: false
          url: http://example.com/aeiou
        cache_any: 0s
        req_custom_headers:
        - "{}"
        - "{}"
        res_hide_headers:
        - res_hide_headers
        - res_hide_headers
        cache_200: 30m
        cache_scheme: true
        image_resize:
          status: "on"
        custom_host_header: ""
        cache_browser: default
        cache_ignore_vary: true
        rewrite_url: /path
      properties:
        cache_200:
          default: 30m
          enum:
          - 0s
          - 1s
          - 2s
          - 3s
          - 4s
          - 5s
          - 6s
          - 7s
          - 8s
          - 9s
          - 10s
          - 30s
          - 1m
          - 3m
          - 5m
          - 10m
          - 30m
          - 45m
          - 1h
          - 3h
          - 5h
          - 10h
          - 12h
          - 24h
          - 3d
          - 7d
          - 10d
          - 15d
          - 30d
          type: string
        cache_any:
          default: 0s
          enum:
          - 0s
          - 1s
          - 2s
          - 3s
          - 4s
          - 5s
          - 6s
          - 7s
          - 8s
          - 9s
          - 10s
          - 30s
          - 1m
          - 3m
          - 5m
          - 10m
          - 30m
          - 45m
          - 1h
          - 3h
          - 5h
          - 10h
          - 12h
          - 24h
          - 3d
          - 7d
          - 10d
          - 15d
          - 30d
          type: string
        cache_cookie:
          default: ""
          description: Cookie variables to consider in cache (comma separaterd values)
          type: string
        cache_device_type:
          default: false
          type: boolean
        cache_args:
          default: true
          type: boolean
        cache_arg:
          default: ""
          description: Query string arguments to consider in cache (& seperated values)
          example: filter&sort
          type: string
        cache_scheme:
          default: true
          deprecated: true
          type: boolean
        cache_browser:
          default: default
          enum:
          - default
          - 0s
          - 1s
          - 2s
          - 3s
          - 4s
          - 5s
          - 6s
          - 7s
          - 8s
          - 9s
          - 10s
          - 30s
          - 1m
          - 3m
          - 5m
          - 10m
          - 30m
          - 45m
          - 1h
          - 3h
          - 5h
          - 10h
          - 12h
          - 24h
          - 3d
          - 7d
          - 10d
          - 15d
          - 30d
          type: string
        cache_ignore_sc:
          default: false
          description: Ignore default behavior in caching set-cookie header
          type: boolean
        cache_ignore_vary:
          default: true
          description: Ignore default behavior in caching vary header
          type: boolean
        cache_ignore_cc:
          default: true
          type: boolean
        cors_header:
          default: "-"
          type: string
        rewrite_url:
          default: /path
          description: You cannot combine rewrite with redirect and secure link
          type: string
        slink_secret:
          default: ""
          type: string
        slink_md5:
          default:
          - remote_addr
          - file
          - expires
          items:
            enum:
            - remote_addr
            - file
            - expires
            - url
            - uri
            type: string
          nullable: true
          type: array
        load_balancer:
          description: Name or ID of the load balancer
          nullable: true
          type: string
        edge_compute_id:
          description: UUID of an edge compute. This field is in `alpha` version.
          type: string
        cluster_status:
          default: false
          deprecated: true
          type: boolean
        image_resize:
          $ref: "#/components/schemas/PageRuleImageResize"
        cluster_id:
          deprecated: true
          format: uuid
          nullable: true
          type: string
        upstream_timeout:
          $ref: "#/components/schemas/UpstreamTimeout"
        req_custom_headers:
          default: []
          items:
            properties:
              name:
                type: string
              value:
                type: string
            type: object
          type: array
        res_custom_headers:
          default: []
          items:
            properties:
              name:
                type: string
              value:
                type: string
            type: object
          type: array
        req_hide_headers:
          default: []
          items:
            pattern: "[\\w-]+"
            type: string
          type: array
        res_hide_headers:
          default: []
          items:
            type: string
          type: array
        custom_host_header:
          default: ""
          format: hostname
          type: string
        redirect:
          $ref: "#/components/schemas/PageRuleRedirect"
    UpstreamTimeout:
      example:
        connect_timeout: 0
        send_timeout: 1
        read_timeout: 6
      properties:
        connect_timeout:
          default: 30
          description: Seconds to timeout
          type: integer
        read_timeout:
          default: 100
          description: Seconds to timeout
          type: integer
        send_timeout:
          default: 300
          description: Seconds to timeout
          type: integer
      type: object
    PageRuleRedirect:
      example:
        status_code: 5
        enable: false
        url: http://example.com/aeiou
      properties:
        enable:
          default: false
          type: boolean
        status_code:
          default: 301
          enum:
          - 301
          - 302
          - 307
          type: integer
        url:
          format: url
          type: string
      type: object
    PageRuleResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          load_balancer: load_balancer
          res_custom_headers:
          - "{}"
          - "{}"
          upstream_timeout:
            connect_timeout: 0
            send_timeout: 1
            read_timeout: 6
          cache_args: true
          cache_ignore_sc: false
          cors_header: "-"
          cluster_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cache_cookie: ""
          cluster_status: false
          cache_device_type: false
          slink_secret: ""
          cache_arg: filter&sort
          slink_md5:
          - remote_addr
          - remote_addr
          cache_ignore_cc: true
          edge_compute_id: edge_compute_id
          req_hide_headers:
          - req_hide_headers
          - req_hide_headers
          redirect:
            status_code: 5
            enable: false
            url: http://example.com/aeiou
          cache_any: 0s
          req_custom_headers:
          - "{}"
          - "{}"
          res_hide_headers:
          - res_hide_headers
          - res_hide_headers
          cache_200: 30m
          cache_scheme: true
          image_resize:
            status: "on"
          custom_host_header: ""
          cache_browser: default
          cache_ignore_vary: true
          rewrite_url: /path
      properties:
        data:
          $ref: "#/components/schemas/PageRule"
    PageRuleData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          load_balancer: load_balancer
          res_custom_headers:
          - "{}"
          - "{}"
          upstream_timeout:
            connect_timeout: 0
            send_timeout: 1
            read_timeout: 6
          cache_args: true
          cache_ignore_sc: false
          cors_header: "-"
          cluster_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cache_cookie: ""
          cluster_status: false
          cache_device_type: false
          slink_secret: ""
          cache_arg: filter&sort
          slink_md5:
          - remote_addr
          - remote_addr
          cache_ignore_cc: true
          edge_compute_id: edge_compute_id
          req_hide_headers:
          - req_hide_headers
          - req_hide_headers
          redirect:
            status_code: 5
            enable: false
            url: http://example.com/aeiou
          cache_any: 0s
          req_custom_headers:
          - "{}"
          - "{}"
          res_hide_headers:
          - res_hide_headers
          - res_hide_headers
          cache_200: 30m
          cache_scheme: true
          image_resize:
            status: "on"
          custom_host_header: ""
          cache_browser: default
          cache_ignore_vary: true
          rewrite_url: /path
      properties:
        data:
          $ref: "#/components/schemas/PageRule"
    PageRuleDiff:
      example:
        load_balancer: load_balancer
        res_custom_headers:
        - name: name
          is_var: true
          value: value
        - name: name
          is_var: true
          value: value
        upstream_timeout:
          connect_timeout: 0
          send_timeout: 1
          read_timeout: 6
        cache_args: true
        fw_status: true
        cache_ignore_sc: true
        cache_level: "off"
        acceleration:
          extensions:
          - css
          - js
          status: inherit
        cors_header: cors_header
        cluster_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cache_cookie: cache_cookie
        cluster_status: true
        cache_device_type: true
        slink_secret: slink_secret
        cache_arg: filter&sort
        slink_md5:
        - remote_addr
        - remote_addr
        cache_ignore_cc: true
        edge_compute_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        req_hide_headers:
        - req_hide_headers
        - req_hide_headers
        redirect:
          status_code: 0
          enable: true
          url: http://example.com/aeiou
        cache_any: 0s
        req_custom_headers:
        - name: name
          is_var: true
          value: value
        - name: name
          is_var: true
          value: value
        url: url
        res_hide_headers:
        - res_hide_headers
        - res_hide_headers
        slink_status: true
        cache_200: 0s
        waf_status: true
        cache_scheme: true
        image_resize:
          mode: freely
          width_by: width
          height_by: height
          status: "true"
        custom_host_header: custom_host_header
        cache_browser: default
        status: true
        cache_ignore_vary: true
        rewrite_url: rewrite_url
      properties:
        url:
          description: URL pattern of target pages
          type: string
        cache_level:
          enum:
          - "off"
          - uri
          - query_string
          type: string
        waf_status:
          type: boolean
        fw_status:
          deprecated: true
          description: Shows whether firewall is enabled or not
          type: boolean
        acceleration:
          $ref: "#/components/schemas/Acceleration"
        slink_status:
          description: Secure link is enabled or not
          type: boolean
        status:
          description: Is the page-rule enabled?
          type: boolean
        cache_200:
          enum:
          - 0s
          - 1s
          - 2s
          - 3s
          - 4s
          - 5s
          - 6s
          - 7s
          - 8s
          - 9s
          - 10s
          - 30s
          - 1m
          - 3m
          - 5m
          - 10m
          - 30m
          - 45m
          - 1h
          - 3h
          - 5h
          - 10h
          - 12h
          - 24h
          - 3d
          - 7d
          - 10d
          - 15d
          - 30d
          type: string
        cache_any:
          enum:
          - 0s
          - 1s
          - 2s
          - 3s
          - 4s
          - 5s
          - 6s
          - 7s
          - 8s
          - 9s
          - 10s
          - 30s
          - 1m
          - 3m
          - 5m
          - 10m
          - 30m
          - 45m
          - 1h
          - 3h
          - 5h
          - 10h
          - 12h
          - 24h
          - 3d
          - 7d
          - 10d
          - 15d
          - 30d
          type: string
        cache_cookie:
          description: Cookie variables to consider in cache (comma separaterd values)
          type: string
        cache_args:
          type: boolean
        cache_arg:
          default: ""
          description: Query string arguments to consider in cache (& seperated values)
          example: filter&sort
          type: string
        cache_scheme:
          deprecated: true
          type: boolean
        cache_browser:
          enum:
          - default
          - 0s
          - 1s
          - 2s
          - 3s
          - 4s
          - 5s
          - 6s
          - 7s
          - 8s
          - 9s
          - 10s
          - 30s
          - 1m
          - 3m
          - 5m
          - 10m
          - 30m
          - 45m
          - 1h
          - 3h
          - 5h
          - 10h
          - 12h
          - 24h
          - 3d
          - 7d
          - 10d
          - 15d
          - 30d
          type: string
        cache_ignore_sc:
          description: Ignore default behavior in caching set-cookie header
          type: boolean
        cache_ignore_vary:
          description: Ignore default behavior in caching vary header
          type: boolean
        cache_ignore_cc:
          type: boolean
        cors_header:
          type: string
        rewrite_url:
          type: string
        slink_secret:
          type: string
        slink_md5:
          items:
            enum:
            - remote_addr
            - file
            - expires
            - url
            - uri
            type: string
          nullable: true
          type: array
        cluster_status:
          type: boolean
        cluster_id:
          format: uuid
          nullable: true
          type: string
        edge_compute_id:
          format: uuid
          nullable: true
          type: string
        upstream_timeout:
          $ref: "#/components/schemas/UpstreamTimeout"
        req_custom_headers:
          default: []
          items:
            $ref: "#/components/schemas/PageRuleDiff_req_custom_headers_inner"
          type: array
        cache_device_type:
          type: boolean
        image_resize:
          $ref: "#/components/schemas/PageRuleDiff_image_resize"
        load_balancer:
          type: string
        res_custom_headers:
          default: []
          items:
            $ref: "#/components/schemas/PageRuleDiff_req_custom_headers_inner"
          type: array
        req_hide_headers:
          default: []
          items:
            pattern: "[\\w-]+"
            type: string
          type: array
        res_hide_headers:
          items:
            type: string
          type: array
        custom_host_header:
          format: hostname
          type: string
        redirect:
          $ref: "#/components/schemas/PageRuleDiff_redirect"
      type: object
    PageRuleDiffData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          load_balancer: load_balancer
          res_custom_headers:
          - name: name
            is_var: true
            value: value
          - name: name
            is_var: true
            value: value
          upstream_timeout:
            connect_timeout: 0
            send_timeout: 1
            read_timeout: 6
          cache_args: true
          fw_status: true
          cache_ignore_sc: true
          cache_level: "off"
          acceleration:
            extensions:
            - css
            - js
            status: inherit
          cors_header: cors_header
          cluster_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cache_cookie: cache_cookie
          cluster_status: true
          cache_device_type: true
          slink_secret: slink_secret
          cache_arg: filter&sort
          slink_md5:
          - remote_addr
          - remote_addr
          cache_ignore_cc: true
          edge_compute_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          req_hide_headers:
          - req_hide_headers
          - req_hide_headers
          redirect:
            status_code: 0
            enable: true
            url: http://example.com/aeiou
          cache_any: 0s
          req_custom_headers:
          - name: name
            is_var: true
            value: value
          - name: name
            is_var: true
            value: value
          url: url
          res_hide_headers:
          - res_hide_headers
          - res_hide_headers
          slink_status: true
          cache_200: 0s
          waf_status: true
          cache_scheme: true
          image_resize:
            mode: freely
            width_by: width
            height_by: height
            status: "true"
          custom_host_header: custom_host_header
          cache_browser: default
          status: true
          cache_ignore_vary: true
          rewrite_url: rewrite_url
      properties:
        data:
          $ref: "#/components/schemas/PageRuleDiff"
    LoadBalancerRegion:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        region: LAH
      properties:
        id:
          format: uuid
          type: string
        region:
          example: LAH
          type: string
        name:
          readOnly: true
          type: string
      type: object
    LoadBalancerSetting:
      example:
        protocol: auto
        max_fails: 9301.444243932576
        method: cluster_rr
        next_upstream_tcp: "off"
        keepalive: "off"
        fail_timeout: 45s
        next_upstream_tcp_codes:
          head:
          - 0.8008281904610115
          - 0.8008281904610115
          patch:
          - 7.061401241503109
          - 7.061401241503109
          post:
          - 1.4658129805029452
          - 1.4658129805029452
          get:
          - 6.027456183070403
          - 6.027456183070403
          options:
          - 2.3021358869347655
          - 2.3021358869347655
          delete:
          - 5.637376656633329
          - 5.637376656633329
          put:
          - 5.962133916683182
          - 5.962133916683182
      properties:
        method:
          enum:
          - cluster_rr
          - cluster_chash
          type: string
        next_upstream_tcp:
          default: "off"
          description: Try another server when the first one failed if on
          enum:
          - "on"
          - "off"
          type: string
        next_upstream_tcp_codes:
          $ref: "#/components/schemas/NextUpstreamTcpCodes"
        protocol:
          enum:
          - auto
          - http
          - https
          type: string
        keepalive:
          default: "off"
          enum:
          - "on"
          - "off"
          type: string
        max_fails:
          default: 0
          description: Zero will disable failing strategy.
          maximum: 10000
          minimum: 0
          type: number
        fail_timeout:
          default: 10s
          description: Human friendly time duration.
          example: 45s
          type: string
      type: object
    NextUpstreamTcpCodes:
      description: Status codes from the upstream that trigger a switch to the next
        upstream
      example:
        head:
        - 0.8008281904610115
        - 0.8008281904610115
        patch:
        - 7.061401241503109
        - 7.061401241503109
        post:
        - 1.4658129805029452
        - 1.4658129805029452
        get:
        - 6.027456183070403
        - 6.027456183070403
        options:
        - 2.3021358869347655
        - 2.3021358869347655
        delete:
        - 5.637376656633329
        - 5.637376656633329
        put:
        - 5.962133916683182
        - 5.962133916683182
      properties:
        head:
          items:
            enum:
            - 500
            - 502
            - 503
            - 504
            - 403
            - 404
            - 429
            type: number
          type: array
        get:
          items:
            enum:
            - 500
            - 502
            - 503
            - 504
            - 403
            - 404
            - 429
            type: number
          type: array
        post:
          items:
            enum:
            - 500
            - 502
            - 503
            - 504
            - 403
            - 404
            - 429
            type: number
          type: array
        put:
          items:
            enum:
            - 500
            - 502
            - 503
            - 504
            - 403
            - 404
            - 429
            type: number
          type: array
        delete:
          items:
            enum:
            - 500
            - 502
            - 503
            - 504
            - 403
            - 404
            - 429
            type: number
          type: array
        options:
          items:
            enum:
            - 500
            - 502
            - 503
            - 504
            - 403
            - 404
            - 429
            type: number
          type: array
        patch:
          items:
            enum:
            - 500
            - 502
            - 503
            - 504
            - 403
            - 404
            - 429
            type: number
          type: array
      type: object
    NextUpstreamCodes:
      items:
        enum:
        - 500
        - 502
        - 503
        - 504
        - 403
        - 404
        - 429
        type: number
      type: array
    LoadBalancerSettingsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          protocol: auto
          max_fails: 9301.444243932576
          method: cluster_rr
          next_upstream_tcp: "off"
          keepalive: "off"
          fail_timeout: 45s
          next_upstream_tcp_codes:
            head:
            - 0.8008281904610115
            - 0.8008281904610115
            patch:
            - 7.061401241503109
            - 7.061401241503109
            post:
            - 1.4658129805029452
            - 1.4658129805029452
            get:
            - 6.027456183070403
            - 6.027456183070403
            options:
            - 2.3021358869347655
            - 2.3021358869347655
            delete:
            - 5.637376656633329
            - 5.637376656633329
            put:
            - 5.962133916683182
            - 5.962133916683182
      properties:
        data:
          $ref: "#/components/schemas/LoadBalancerSetting"
    LoadBalancer:
      example:
        time_slice: 0s
        method: failover
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: lb1
        description: description
        pools:
        - regions:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          method: cluster_rr
          monitoring_status: "off"
          keepalive: "off"
          next_upstream_tcp: "off"
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          health_check:
            request_config:
              sent_headers:
              - value: value
                key: key
              - value: value
                key: key
              path: path
              headers:
                key: headers
              method: HEAD
              port: 39073
              allow_insecure: true
              follow_redirects: true
              expected_response:
                codes:
                - 5
                - 5
                headers:
                  key:
                  - headers
                  - headers
                body: body
                expected_headers:
                - value:
                  - value
                  - value
                  key: key
                - value:
                  - value
                  - value
                  key: key
              timeout: 6907
          next_upstream_tcp_codes:
            head:
            - 0.8008281904610115
            - 0.8008281904610115
            patch:
            - 7.061401241503109
            - 7.061401241503109
            post:
            - 1.4658129805029452
            - 1.4658129805029452
            get:
            - 6.027456183070403
            - 6.027456183070403
            options:
            - 2.3021358869347655
            - 2.3021358869347655
            delete:
            - 5.637376656633329
            - 5.637376656633329
            put:
            - 5.962133916683182
            - 5.962133916683182
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          origins:
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
        - regions:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          method: cluster_rr
          monitoring_status: "off"
          keepalive: "off"
          next_upstream_tcp: "off"
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          health_check:
            request_config:
              sent_headers:
              - value: value
                key: key
              - value: value
                key: key
              path: path
              headers:
                key: headers
              method: HEAD
              port: 39073
              allow_insecure: true
              follow_redirects: true
              expected_response:
                codes:
                - 5
                - 5
                headers:
                  key:
                  - headers
                  - headers
                body: body
                expected_headers:
                - value:
                  - value
                  - value
                  key: key
                - value:
                  - value
                  - value
                  key: key
              timeout: 6907
          next_upstream_tcp_codes:
            head:
            - 0.8008281904610115
            - 0.8008281904610115
            patch:
            - 7.061401241503109
            - 7.061401241503109
            post:
            - 1.4658129805029452
            - 1.4658129805029452
            get:
            - 6.027456183070403
            - 6.027456183070403
            options:
            - 2.3021358869347655
            - 2.3021358869347655
            delete:
            - 5.637376656633329
            - 5.637376656633329
            put:
            - 5.962133916683182
            - 5.962133916683182
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          origins:
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: true
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          example: lb1
          pattern: "^[A-Za-z0-9-]+$"
          type: string
        description:
          type: string
        status:
          type: boolean
        method:
          enum:
          - failover
          - cluster_rr
          - cluster_chash
          type: string
        time_slice:
          default: 0s
          description: "Human friendly time duration for which a pool will uninterruptedly\
            \ be selected in cluster_rr strategy, i.e. pools will switch once every\
            \ time slice."
          type: string
        pools:
          items:
            $ref: "#/components/schemas/LoadBalancerPool"
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    LoadBalancerResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          time_slice: 0s
          method: failover
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: lb1
          description: description
          pools:
          - regions:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            method: cluster_rr
            monitoring_status: "off"
            keepalive: "off"
            next_upstream_tcp: "off"
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            priority: 0
            health_check:
              request_config:
                sent_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                path: path
                headers:
                  key: headers
                method: HEAD
                port: 39073
                allow_insecure: true
                follow_redirects: true
                expected_response:
                  codes:
                  - 5
                  - 5
                  headers:
                    key:
                    - headers
                    - headers
                  body: body
                  expected_headers:
                  - value:
                    - value
                    - value
                    key: key
                  - value:
                    - value
                    - value
                    key: key
                timeout: 6907
            next_upstream_tcp_codes:
              head:
              - 0.8008281904610115
              - 0.8008281904610115
              patch:
              - 7.061401241503109
              - 7.061401241503109
              post:
              - 1.4658129805029452
              - 1.4658129805029452
              get:
              - 6.027456183070403
              - 6.027456183070403
              options:
              - 2.3021358869347655
              - 2.3021358869347655
              delete:
              - 5.637376656633329
              - 5.637376656633329
              put:
              - 5.962133916683182
              - 5.962133916683182
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            origins:
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
          - regions:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            method: cluster_rr
            monitoring_status: "off"
            keepalive: "off"
            next_upstream_tcp: "off"
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            priority: 0
            health_check:
              request_config:
                sent_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                path: path
                headers:
                  key: headers
                method: HEAD
                port: 39073
                allow_insecure: true
                follow_redirects: true
                expected_response:
                  codes:
                  - 5
                  - 5
                  headers:
                    key:
                    - headers
                    - headers
                  body: body
                  expected_headers:
                  - value:
                    - value
                    - value
                    key: key
                  - value:
                    - value
                    - value
                    key: key
                timeout: 6907
            next_upstream_tcp_codes:
              head:
              - 0.8008281904610115
              - 0.8008281904610115
              patch:
              - 7.061401241503109
              - 7.061401241503109
              post:
              - 1.4658129805029452
              - 1.4658129805029452
              get:
              - 6.027456183070403
              - 6.027456183070403
              options:
              - 2.3021358869347655
              - 2.3021358869347655
              delete:
              - 5.637376656633329
              - 5.637376656633329
              put:
              - 5.962133916683182
              - 5.962133916683182
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            origins:
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
      properties:
        data:
          $ref: "#/components/schemas/LoadBalancer"
    LoadBalancerData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          time_slice: 0s
          method: failover
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: lb1
          description: description
          pools:
          - regions:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            method: cluster_rr
            monitoring_status: "off"
            keepalive: "off"
            next_upstream_tcp: "off"
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            priority: 0
            health_check:
              request_config:
                sent_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                path: path
                headers:
                  key: headers
                method: HEAD
                port: 39073
                allow_insecure: true
                follow_redirects: true
                expected_response:
                  codes:
                  - 5
                  - 5
                  headers:
                    key:
                    - headers
                    - headers
                  body: body
                  expected_headers:
                  - value:
                    - value
                    - value
                    key: key
                  - value:
                    - value
                    - value
                    key: key
                timeout: 6907
            next_upstream_tcp_codes:
              head:
              - 0.8008281904610115
              - 0.8008281904610115
              patch:
              - 7.061401241503109
              - 7.061401241503109
              post:
              - 1.4658129805029452
              - 1.4658129805029452
              get:
              - 6.027456183070403
              - 6.027456183070403
              options:
              - 2.3021358869347655
              - 2.3021358869347655
              delete:
              - 5.637376656633329
              - 5.637376656633329
              put:
              - 5.962133916683182
              - 5.962133916683182
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            origins:
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
          - regions:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            method: cluster_rr
            monitoring_status: "off"
            keepalive: "off"
            next_upstream_tcp: "off"
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            priority: 0
            health_check:
              request_config:
                sent_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                path: path
                headers:
                  key: headers
                method: HEAD
                port: 39073
                allow_insecure: true
                follow_redirects: true
                expected_response:
                  codes:
                  - 5
                  - 5
                  headers:
                    key:
                    - headers
                    - headers
                  body: body
                  expected_headers:
                  - value:
                    - value
                    - value
                    key: key
                  - value:
                    - value
                    - value
                    key: key
                timeout: 6907
            next_upstream_tcp_codes:
              head:
              - 0.8008281904610115
              - 0.8008281904610115
              patch:
              - 7.061401241503109
              - 7.061401241503109
              post:
              - 1.4658129805029452
              - 1.4658129805029452
              get:
              - 6.027456183070403
              - 6.027456183070403
              options:
              - 2.3021358869347655
              - 2.3021358869347655
              delete:
              - 5.637376656633329
              - 5.637376656633329
              put:
              - 5.962133916683182
              - 5.962133916683182
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            origins:
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
      properties:
        data:
          $ref: "#/components/schemas/LoadBalancer"
    LoadBalancerPool:
      example:
        regions:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region: LAH
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region: LAH
        method: cluster_rr
        monitoring_status: "off"
        keepalive: "off"
        next_upstream_tcp: "off"
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        priority: 0
        health_check:
          request_config:
            sent_headers:
            - value: value
              key: key
            - value: value
              key: key
            path: path
            headers:
              key: headers
            method: HEAD
            port: 39073
            allow_insecure: true
            follow_redirects: true
            expected_response:
              codes:
              - 5
              - 5
              headers:
                key:
                - headers
                - headers
              body: body
              expected_headers:
              - value:
                - value
                - value
                key: key
              - value:
                - value
                - value
                key: key
            timeout: 6907
        next_upstream_tcp_codes:
          head:
          - 0.8008281904610115
          - 0.8008281904610115
          patch:
          - 7.061401241503109
          - 7.061401241503109
          post:
          - 1.4658129805029452
          - 1.4658129805029452
          get:
          - 6.027456183070403
          - 6.027456183070403
          options:
          - 2.3021358869347655
          - 2.3021358869347655
          delete:
          - 5.637376656633329
          - 5.637376656633329
          put:
          - 5.962133916683182
          - 5.962133916683182
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        origins:
        - protocol: auto
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          health_check_status: "off"
          port: 39500
          name: name
          weight: 147
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
          host_header: host_header
        - protocol: auto
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          health_check_status: "off"
          port: 39500
          name: name
          weight: 147
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
          host_header: host_header
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: true
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: boolean
        priority:
          description: Zero means the default pool
          type: integer
        method:
          enum:
          - cluster_rr
          - cluster_chash
          type: string
        keepalive:
          default: "off"
          enum:
          - "on"
          - "off"
          type: string
        next_upstream_tcp:
          default: "off"
          description: Try another server when the first one failed if on
          enum:
          - "on"
          - "off"
          type: string
        next_upstream_tcp_codes:
          $ref: "#/components/schemas/NextUpstreamTcpCodes"
        regions:
          items:
            $ref: "#/components/schemas/LoadBalancerRegion"
          type: array
        origins:
          items:
            $ref: "#/components/schemas/LoadBalancerOrigin"
          readOnly: true
          type: array
        monitoring_status:
          $ref: "#/components/schemas/MonitoringStatus"
        health_check:
          $ref: "#/components/schemas/HealthCheck"
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    LoadBalancerPoolData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          regions:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          method: cluster_rr
          monitoring_status: "off"
          keepalive: "off"
          next_upstream_tcp: "off"
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          health_check:
            request_config:
              sent_headers:
              - value: value
                key: key
              - value: value
                key: key
              path: path
              headers:
                key: headers
              method: HEAD
              port: 39073
              allow_insecure: true
              follow_redirects: true
              expected_response:
                codes:
                - 5
                - 5
                headers:
                  key:
                  - headers
                  - headers
                body: body
                expected_headers:
                - value:
                  - value
                  - value
                  key: key
                - value:
                  - value
                  - value
                  key: key
              timeout: 6907
          next_upstream_tcp_codes:
            head:
            - 0.8008281904610115
            - 0.8008281904610115
            patch:
            - 7.061401241503109
            - 7.061401241503109
            post:
            - 1.4658129805029452
            - 1.4658129805029452
            get:
            - 6.027456183070403
            - 6.027456183070403
            options:
            - 2.3021358869347655
            - 2.3021358869347655
            delete:
            - 5.637376656633329
            - 5.637376656633329
            put:
            - 5.962133916683182
            - 5.962133916683182
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          origins:
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
      properties:
        data:
          $ref: "#/components/schemas/LoadBalancerPool"
    LoadBalancerPoolResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          regions:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          method: cluster_rr
          monitoring_status: "off"
          keepalive: "off"
          next_upstream_tcp: "off"
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          health_check:
            request_config:
              sent_headers:
              - value: value
                key: key
              - value: value
                key: key
              path: path
              headers:
                key: headers
              method: HEAD
              port: 39073
              allow_insecure: true
              follow_redirects: true
              expected_response:
                codes:
                - 5
                - 5
                headers:
                  key:
                  - headers
                  - headers
                body: body
                expected_headers:
                - value:
                  - value
                  - value
                  key: key
                - value:
                  - value
                  - value
                  key: key
              timeout: 6907
          next_upstream_tcp_codes:
            head:
            - 0.8008281904610115
            - 0.8008281904610115
            patch:
            - 7.061401241503109
            - 7.061401241503109
            post:
            - 1.4658129805029452
            - 1.4658129805029452
            get:
            - 6.027456183070403
            - 6.027456183070403
            options:
            - 2.3021358869347655
            - 2.3021358869347655
            delete:
            - 5.637376656633329
            - 5.637376656633329
            put:
            - 5.962133916683182
            - 5.962133916683182
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          origins:
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
      properties:
        data:
          $ref: "#/components/schemas/LoadBalancerPool"
    LoadBalancerOrigin:
      example:
        protocol: auto
        address: address
        updated_at: 2000-01-23T04:56:07.000+00:00
        health_check_status: "off"
        port: 39500
        name: name
        weight: 147
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: true
        host_header: host_header
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        health_check_status:
          enum:
          - "off"
          - healthy
          - unhealthy
          - no-data
          readOnly: true
          type: string
        status:
          type: boolean
        address:
          type: string
        port:
          maximum: 65535
          minimum: -1
          type: integer
        weight:
          maximum: 1000
          minimum: 1
          type: integer
        protocol:
          default: auto
          enum:
          - auto
          - http
          - https
          type: string
        host_header:
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    LoadBalancerOriginData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          protocol: auto
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          health_check_status: "off"
          port: 39500
          name: name
          weight: 147
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
          host_header: host_header
      properties:
        data:
          $ref: "#/components/schemas/LoadBalancerOrigin"
    LoadBalancerOriginResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          protocol: auto
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          health_check_status: "off"
          port: 39500
          name: name
          weight: 147
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
          host_header: host_header
      properties:
        data:
          $ref: "#/components/schemas/LoadBalancerOrigin"
    LoadBalancerStore:
      example:
        time_slice: 0s
        method: failover
        name: lb1
        description: description
        status: true
      properties:
        name:
          example: lb1
          pattern: "^[A-Za-z0-9-]+$"
          type: string
        description:
          type: string
        status:
          type: boolean
        time_slice:
          default: 0s
          description: "Human friendly time duration for which a pool will uninterruptedly\
            \ be selected in cluster_rr strategy, i.e. pools will switch once every\
            \ time slice."
          type: string
        method:
          enum:
          - failover
          - cluster_rr
          - cluster_chash
          type: string
      required:
      - method
      - name
      - status
      type: object
    LoadBalancerPoolStoreWithoutOrigin:
      example:
        regions:
        - regions
        - regions
        method: cluster_rr
        keepalive: "off"
        next_upstream_tcp: "off"
        name: name
        description: description
        id: id
        priority: 0
        status: true
        next_upstream_tcp_codes:
          head:
          - 0.8008281904610115
          - 0.8008281904610115
          patch:
          - 7.061401241503109
          - 7.061401241503109
          post:
          - 1.4658129805029452
          - 1.4658129805029452
          get:
          - 6.027456183070403
          - 6.027456183070403
          options:
          - 2.3021358869347655
          - 2.3021358869347655
          delete:
          - 5.637376656633329
          - 5.637376656633329
          put:
          - 5.962133916683182
          - 5.962133916683182
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: boolean
        priority:
          description: Zero means the default pool
          type: integer
        method:
          enum:
          - cluster_rr
          - cluster_chash
          type: string
        keepalive:
          default: "off"
          enum:
          - "on"
          - "off"
          type: string
        next_upstream_tcp:
          default: "off"
          description: Try another server when the first one failed if on
          enum:
          - "on"
          - "off"
          type: string
        next_upstream_tcp_codes:
          $ref: "#/components/schemas/NextUpstreamTcpCodes"
        regions:
          items:
            pattern: "^[A-Z]{3}$"
            type: string
          type: array
      type: object
    LoadBalancerPoolStoreWithOrigin:
      allOf:
      - $ref: "#/components/schemas/LoadBalancerPoolStoreWithoutOrigin"
      example:
        origins:
        - protocol: auto
          address: address
          port: 5249
          name: name
          weight: 603
          id: id
          status: true
          host_header: host_header
        - protocol: auto
          address: address
          port: 5249
          name: name
          weight: 603
          id: id
          status: true
          host_header: host_header
      properties:
        origins:
          items:
            $ref: "#/components/schemas/LoadBalancerOriginStore"
          readOnly: false
          type: array
      required:
      - keepalive
      - method
      - name
      - next_upstream_tcp
      - status
    LoadBalancerOriginStore:
      example:
        protocol: auto
        address: address
        port: 5249
        name: name
        weight: 603
        id: id
        status: true
        host_header: host_header
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: boolean
        address:
          type: string
        port:
          maximum: 65535
          minimum: 1
          type: integer
        weight:
          maximum: 1000
          minimum: 1
          type: integer
        protocol:
          default: auto
          enum:
          - auto
          - http
          - https
          type: string
        host_header:
          type: string
      required:
      - address
      - port
      - protocol
      - status
      - weight
      type: object
    CacheSettings:
      example:
        cache_scheme: true
        cache_cookie: cache_cookie
        cache_developer_mode: true
        cache_consistent_uptime: true
        cache_args: true
        cache_browser: default
        cache_status: "false"
        cache_page_200: 0s
        cache_arg: filter&sort
        cache_page_any: 0s
        cache_ignore_sc: true
        cache_max_size: 171976544
      properties:
        cache_developer_mode:
          type: boolean
        cache_consistent_uptime:
          type: boolean
        cache_max_size:
          description: Maximum size of cacheable content in bytes
          maximum: 2147483648
          minimum: 0
          type: integer
        cache_status:
          enum:
          - "false"
          - uri
          - query_string
          type: string
        cache_page_200:
          enum:
          - 0s
          - 1s
          - 2s
          - 3s
          - 4s
          - 5s
          - 6s
          - 7s
          - 8s
          - 9s
          - 10s
          - 30s
          - 1m
          - 3m
          - 5m
          - 10m
          - 30m
          - 45m
          - 1h
          - 3h
          - 5h
          - 10h
          - 12h
          - 24h
          - 3d
          - 7d
          - 10d
          - 15d
          - 30d
          type: string
        cache_page_any:
          enum:
          - 0s
          - 1s
          - 2s
          - 3s
          - 4s
          - 5s
          - 6s
          - 7s
          - 8s
          - 9s
          - 10s
          - 30s
          - 1m
          - 3m
          - 5m
          - 10m
          - 30m
          - 45m
          - 1h
          - 3h
          - 5h
          - 10h
          - 12h
          - 24h
          - 3d
          - 7d
          - 10d
          - 15d
          - 30d
          type: string
        cache_browser:
          enum:
          - default
          - 0s
          - 1s
          - 2s
          - 3s
          - 4s
          - 5s
          - 6s
          - 7s
          - 8s
          - 9s
          - 10s
          - 30s
          - 1m
          - 3m
          - 5m
          - 10m
          - 30m
          - 45m
          - 1h
          - 3h
          - 5h
          - 10h
          - 12h
          - 24h
          - 3d
          - 7d
          - 10d
          - 15d
          - 30d
          type: string
        cache_scheme:
          deprecated: true
          description: To consider scheme (HTTP/HTTPs) in cache
          type: boolean
        cache_ignore_sc:
          description: Ignore default behavior in caching set-cookie header
          type: boolean
        cache_cookie:
          description: Cookie variables to consider in cache (comma separaterd values)
          type: string
        cache_args:
          description: To consider query args or not
          type: boolean
        cache_arg:
          default: ""
          description: Query string arguments to consider in cache (& seperated values)
          example: filter&sort
          type: string
      type: object
    CacheSettingsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          cache_scheme: true
          cache_cookie: cache_cookie
          cache_developer_mode: true
          cache_consistent_uptime: true
          cache_args: true
          cache_browser: default
          cache_status: "false"
          cache_page_200: 0s
          cache_arg: filter&sort
          cache_page_any: 0s
          cache_ignore_sc: true
          cache_max_size: 171976544
      properties:
        data:
          $ref: "#/components/schemas/CacheSettings"
    ImageResize:
      example:
        mode: freely
        width_by: width
        mode_by: ""
        height_by: height
        status: "off"
      properties:
        status:
          default: "off"
          enum:
          - "on"
          - "off"
          type: string
        height_by:
          default: height
          maxLength: 20
          pattern: "[a-z0-9_]+"
          type: string
        width_by:
          default: width
          maxLength: 20
          pattern: "[a-z0-9_]+"
          type: string
        mode:
          default: freely
          description: Whether needs to preserve aspect ratio based on the short/long
            side of the image (after transforming)
          enum:
          - freely
          - short-side
          - long-side
          type: string
        mode_by:
          default: ""
          description: "Name of the variable for overriding 'mode' in query string.\
            \ Acceptable values for that variable are 'f', 's', and 'l'"
          maxLength: 20
          pattern: "[a-z0-9_]+"
          type: string
      type: object
    ImageResizeResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          mode: freely
          width_by: width
          mode_by: ""
          height_by: height
          status: "off"
      properties:
        data:
          $ref: "#/components/schemas/ImageResize"
    PageRuleImageResize:
      allOf:
      - $ref: "#/components/schemas/ImageResize"
      example:
        status: "on"
      properties:
        status:
          enum:
          - "on"
          - "off"
          - inherit
          type: string
    Acceleration:
      example:
        extensions:
        - css
        - js
        status: inherit
      properties:
        status:
          enum:
          - inherit
          - "on"
          - "off"
          type: string
        extensions:
          default: []
          example:
          - css
          - js
          items:
            enum:
            - css
            - gif
            - jpeg
            - js
            - png
            type: string
          minItems: 0
          type: array
          uniqueItems: true
      type: object
    AccelerationResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          extensions:
          - css
          - js
          status: inherit
      properties:
        data:
          $ref: "#/components/schemas/Acceleration"
    AccelerationUpdate:
      allOf:
      - $ref: "#/components/schemas/Acceleration"
      example:
        status: "on"
      properties:
        status:
          enum:
          - "on"
          - "off"
          type: string
    CustomPage:
      example:
        status_code: 0
        type: "false"
        url: http://example.com/aeiou
      properties:
        status_code:
          enum:
          - 200
          - 302
          - 481
          - 403
          - 482
          - 483
          - 484
          - 500
          type: integer
        type:
          enum:
          - "false"
          - url
          - file
          type: string
        url:
          format: url
          type: string
      type: object
    CustomPages:
      example:
        ddos_captcha:
          status_code: 0
          type: "false"
          url: http://example.com/aeiou
        ddos_js:
          status_code: 0
          type: "false"
          url: http://example.com/aeiou
        rate_limit_exceeded:
          status_code: 0
          type: "false"
          url: http://example.com/aeiou
        error_500:
          status_code: 0
          type: "false"
          url: http://example.com/aeiou
        under_construction:
          status_code: 0
          type: "false"
          url: http://example.com/aeiou
        secure_link_invalid:
          status_code: 0
          type: "false"
          url: http://example.com/aeiou
        waf_protection:
          status_code: 0
          type: "false"
          url: http://example.com/aeiou
        firewall_error:
          status_code: 0
          type: "false"
          url: http://example.com/aeiou
        secure_link_expired:
          status_code: 0
          type: "false"
          url: http://example.com/aeiou
      properties:
        under_construction:
          $ref: "#/components/schemas/CustomPage"
        firewall_error:
          $ref: "#/components/schemas/CustomPage"
        waf_protection:
          $ref: "#/components/schemas/CustomPage"
        rate_limit_exceeded:
          $ref: "#/components/schemas/CustomPage"
        secure_link_expired:
          $ref: "#/components/schemas/CustomPage"
        secure_link_invalid:
          $ref: "#/components/schemas/CustomPage"
        error_500:
          $ref: "#/components/schemas/CustomPage"
        ddos_js:
          $ref: "#/components/schemas/CustomPage"
        ddos_captcha:
          $ref: "#/components/schemas/CustomPage"
      type: object
    CustomPagesData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          ddos_captcha:
            status_code: 0
            type: "false"
            url: http://example.com/aeiou
          ddos_js:
            status_code: 0
            type: "false"
            url: http://example.com/aeiou
          rate_limit_exceeded:
            status_code: 0
            type: "false"
            url: http://example.com/aeiou
          error_500:
            status_code: 0
            type: "false"
            url: http://example.com/aeiou
          under_construction:
            status_code: 0
            type: "false"
            url: http://example.com/aeiou
          secure_link_invalid:
            status_code: 0
            type: "false"
            url: http://example.com/aeiou
          waf_protection:
            status_code: 0
            type: "false"
            url: http://example.com/aeiou
          firewall_error:
            status_code: 0
            type: "false"
            url: http://example.com/aeiou
          secure_link_expired:
            status_code: 0
            type: "false"
            url: http://example.com/aeiou
      properties:
        data:
          $ref: "#/components/schemas/CustomPages"
    CustomPageUpdate:
      properties:
        type:
          enum:
          - "false"
          - url
          - file
          type: string
        page:
          description: ddos_js and ddos_captcha can only be used with file type
          enum:
          - under_construction
          - firewall_error
          - waf_protection
          - rate_limit_exceeded
          - secure_link_expired
          - secure_link_invalid
          - error_500
          - ddos_js
          - ddos_captcha
          type: string
        url:
          format: url
          type: string
        file:
          format: binary
          type: string
      type: object
    Redirect:
      example:
        f_redirect_to_www: "false"
      properties:
        f_redirect_to_www:
          enum:
          - "false"
          - www
          - root
          type: string
      type: object
    RedirectData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          f_redirect_to_www: "false"
      properties:
        data:
          $ref: "#/components/schemas/Redirect"
    UpdateBooleanStatus:
      example:
        status: true
      properties:
        status:
          type: boolean
      type: object
    MetricExporter:
      example:
        name: name
        interval: 10s
        id: id
        type: access
        status: true
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        type:
          enum:
          - access
          - dns
          - error
          - event
          type: string
        interval:
          enum:
          - 10s
          - 30s
          - 60s
          type: string
        status:
          type: boolean
      required:
      - interval
      - name
      - status
      - type
      type: object
    MetricExporterResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data: "{}"
      properties:
        data:
          properties:
            id:
              readOnly: true
              type: string
            name:
              type: string
            type:
              enum:
              - access
              - event
              - dns
              - error
              type: string
            interval:
              enum:
              - 10s
              - 30s
              - 60s
              type: string
            status:
              type: boolean
          type: object
    LogForwarder:
      example:
        data_format_expr: Domain == 'arvancloud.ir' && Method == 'GET' && Scheme ==
          'HTTPS'
        data_format:
          referer: true
          country: true
          tls_fingerprint: true
          cache: true
          method: true
          scheme: true
          ip: true
          bytes_received: true
          upstream_time: true
          ua: true
          uri: true
          bytes_sent: true
          content_type: true
          domain: true
          server_port: true
          asn: true
          request_id: true
          query_string: true
          status: true
          timestamp: true
        settings:
          secret_key: secret_key
          sample_rate: 0
          access_key: access_key
          bucket_name: bucket_name
          region: region
          flush_interval: 1
          s3_endpoint: s3_endpoint
          object_size: 6
        connection_type: arvan_s3
        name: name
        description: description
        id: id
        type: access
        status: true
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
        type:
          enum:
          - access
          - waf
          - dns
          - error
          - event
          type: string
        connection_type:
          enum:
          - arvan_s3
          - alibaba_s3
          - amazon_s3
          - custom_s3
          - loggly
          - datadog
          - syslog
          - kafka
          - arvan_logs
          type: string
        data_format:
          $ref: "#/components/schemas/LogForwarderDataFormat"
        data_format_expr:
          description: Expr expression language
          example: Domain == 'arvancloud.ir' && Method == 'GET' && Scheme == 'HTTPS'
          maxLength: 5000
          type: string
        settings:
          $ref: "#/components/schemas/LogForwarderSetting"
        status:
          type: boolean
      required:
      - connection_type
      - description
      - name
      - settings
      - status
      - type
      type: object
    LogForwarderGeneric:
      example:
        data_format_expr: data_format_expr
        data_format: "{}"
        settings: "{}"
        connection_type: arvan_s3
        name: name
        description: description
        id: id
        type: access
        status: true
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
        type:
          enum:
          - access
          - waf
          - dns
          - error
          type: string
        connection_type:
          enum:
          - arvan_s3
          - alibaba_s3
          - amazon_s3
          - custom_s3
          - loggly
          - datadog
          - syslog
          - kafka
          - arvan_logs
          type: string
        data_format:
          type: object
        data_format_expr:
          type: string
        settings:
          type: object
        status:
          type: boolean
      type: object
    LogForwarderResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          data_format_expr: data_format_expr
          data_format: "{}"
          settings: "{}"
          connection_type: arvan_s3
          name: name
          description: description
          id: id
          type: access
          status: true
      properties:
        data:
          $ref: "#/components/schemas/LogForwarderGeneric"
    LogForwarderDataFormat:
      deprecated: true
      oneOf:
      - $ref: "#/components/schemas/LogForwarderAccessLogType"
      - $ref: "#/components/schemas/LogForwarderWAFType"
      - $ref: "#/components/schemas/LogForwarderDNSType"
      - $ref: "#/components/schemas/LogForwarderErrorType"
      - $ref: "#/components/schemas/LogForwarderEventType"
    LogForwarderAccessLogType:
      description: Access log type
      example:
        referer: true
        country: true
        tls_fingerprint: true
        cache: true
        method: true
        scheme: true
        ip: true
        bytes_received: true
        upstream_time: true
        ua: true
        uri: true
        bytes_sent: true
        content_type: true
        domain: true
        server_port: true
        asn: true
        request_id: true
        query_string: true
        status: true
        timestamp: true
      properties:
        method:
          type: boolean
        scheme:
          type: boolean
        domain:
          type: boolean
        uri:
          type: boolean
        query_string:
          type: boolean
        referer:
          type: boolean
        ip:
          type: boolean
        ua:
          type: boolean
        country:
          type: boolean
        asn:
          type: boolean
        content_type:
          type: boolean
        status:
          type: boolean
        tls_fingerprint:
          type: boolean
        server_port:
          type: boolean
        bytes_sent:
          type: boolean
        bytes_received:
          type: boolean
        upstream_time:
          type: boolean
        cache:
          type: boolean
        request_id:
          type: boolean
        timestamp:
          type: boolean
      type: object
    LogForwarderWAFType:
      description: Waf log type
      properties:
        product:
          type: boolean
        timestamp:
          type: boolean
        remote_address:
          type: boolean
        domain:
          type: boolean
        data:
          type: boolean
      type: object
    LogForwarderDNSType:
      description: Dns log type
      properties:
        timestamp:
          type: boolean
        uuid:
          type: boolean
        record:
          type: boolean
        type:
          type: boolean
        ip:
          type: boolean
        country:
          type: boolean
        asn:
          type: boolean
        response_code:
          type: boolean
        process_time:
          type: boolean
      type: object
    LogForwarderEventType:
      description: Event log type
      properties:
        domain:
          type: boolean
        uuid:
          type: boolean
        timestamp:
          type: boolean
        method:
          type: boolean
        scheme:
          type: boolean
        ip:
          type: boolean
        country:
          type: boolean
        status:
          type: boolean
        server_ip:
          type: boolean
        server_port:
          type: boolean
        uri:
          type: boolean
        query_string:
          type: boolean
        firewall:
          type: boolean
        proxy:
          type: boolean
        dns_resolver:
          type: boolean
        ddos:
          type: boolean
        ratelimit:
          type: boolean
        waf:
          type: boolean
      type: object
    LogForwarderErrorType:
      description: Error log type
      properties:
        client_ip:
          type: boolean
        upstream_proto:
          type: boolean
        upstream_uri:
          type: boolean
        upstream_port:
          type: boolean
        upstream_ip:
          type: boolean
        domain_name:
          type: boolean
        http_version:
          type: boolean
        request_method:
          type: boolean
        request_uri:
          type: boolean
        real_timestamp:
          type: boolean
        error_message:
          type: boolean
        pop_site:
          type: boolean
        request_id:
          type: boolean
      type: object
    LogForwarderSetting:
      oneOf:
      - $ref: "#/components/schemas/LogForwarderS3ConnectionType"
      - $ref: "#/components/schemas/LogForwarderDatadogConnectionType"
      - $ref: "#/components/schemas/LogForwarderKafkaConnectionType"
      - $ref: "#/components/schemas/LogForwarderLogglyConnectionType"
      - $ref: "#/components/schemas/LogForwarderSyslogConnectionType"
      - $ref: "#/components/schemas/LogForwarderArvanLogsConnectionType"
    LogForwarderS3ConnectionType:
      description: "ArvanS3, AmazonS3, AlibabaS3 and Custom S3 connections"
      example:
        secret_key: secret_key
        sample_rate: 0
        access_key: access_key
        bucket_name: bucket_name
        region: region
        flush_interval: 1
        s3_endpoint: s3_endpoint
        object_size: 6
      properties:
        sample_rate:
          type: integer
        s3_endpoint:
          format: hostname
          type: string
        access_key:
          type: string
        secret_key:
          type: string
        bucket_name:
          type: string
        object_size:
          type: integer
        region:
          maxLength: 100
          type: string
        flush_interval:
          type: integer
      type: object
    LogForwarderDatadogConnectionType:
      description: Datadog connection
      properties:
        sample_rate:
          type: integer
        url:
          format: url
          type: string
        api_key:
          type: string
        app_key:
          type: string
        flush_interval:
          type: integer
        buffer_size:
          type: integer
      type: object
    LogForwarderKafkaConnectionType:
      description: Kafka connection
      properties:
        sample_rate:
          type: integer
        kafka_version:
          type: string
        kafka_brokers:
          items:
            description: Host and port of the broker separated by a colon
            example: example.com:9092
            type: string
          type: array
        kafka_topic_to_write:
          type: string
        kafka_producer_batch_size:
          type: integer
        kafka_producer_flush_frequency_ms:
          type: integer
      type: object
    LogForwarderLogglyConnectionType:
      description: Loggly connection
      properties:
        sample_rate:
          type: integer
        token:
          type: string
        url:
          format: url
          type: string
        flush_interval:
          type: integer
        buffer_size:
          type: integer
      type: object
    LogForwarderSyslogConnectionType:
      description: Syslog connection
      properties:
        sample_rate:
          type: integer
        logtype:
          enum:
          - syslogudp
          - syslogtcp
          type: string
        host:
          format: "hostname, ip"
          type: string
        port:
          type: integer
        tls:
          type: boolean
        cert:
          type: string
        retry_time:
          type: integer
      type: object
    LogForwarderArvanLogsConnectionType:
      description: ArvanLogs connection
      properties:
        sample_rate:
          type: integer
      type: object
    Troubleshoot:
      example:
        created_at: created_at
        details:
        - details: details
          id: root_dns_record
          status: safe
        - details: details
          id: root_dns_record
          status: safe
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        details:
          items:
            $ref: "#/components/schemas/Troubleshoot_details_inner"
          type: array
        created_at:
          type: string
      type: object
    FirewallSettings:
      allOf:
      - $ref: "#/components/schemas/BaseFirewallSettings"
      example:
        default_action_details:
          rlimit: true
          challenge: true
          waf: true
      properties:
        default_action_details:
          $ref: "#/components/schemas/FirewallActionDetails"
    FirewallSettingsView:
      allOf:
      - $ref: "#/components/schemas/BaseFirewallSettings"
      example:
        default_action_details: "{}"
      properties:
        default_action_details:
          nullable: true
          type: object
    BaseFirewallSettings:
      properties:
        is_enabled:
          nullable: false
          readOnly: true
          type: boolean
        default_action:
          enum:
          - allow
          - deny
          - drop
          - bypass
          - challenge
          type: string
        verify_sni:
          default: true
          description: True to verify that SNI and hostname are equal
          nullable: false
          type: boolean
        skip_global_whitelist:
          default: false
          description: Shows hether global whitelist should be skipped for the domain
            or not
          nullable: true
          type: boolean
        skip_global_firewall:
          default: false
          description: Shows whether global firewall should be skipped for the domain
            or not
          nullable: true
          type: boolean
      type: object
    FirewallActionDetails:
      description: Details of bypass or challenge actions
      nullable: true
      oneOf:
      - $ref: "#/components/schemas/BypassAction"
      - $ref: "#/components/schemas/ChallengeAction"
      type: object
    FirewallRule:
      allOf:
      - $ref: "#/components/schemas/BaseFirewallRule"
      example:
        action_details:
          rlimit: true
          challenge: true
          waf: true
      properties:
        action_details:
          $ref: "#/components/schemas/FirewallActionDetails"
      required:
      - action
      - filter_expr
      - name
    FirewallRuleUpdate:
      allOf:
      - $ref: "#/components/schemas/BaseFirewallRule"
      example:
        action_details:
          rlimit: true
          challenge: true
          waf: true
      properties:
        action_details:
          $ref: "#/components/schemas/FirewallActionDetails"
    FirewallRuleView:
      allOf:
      - $ref: "#/components/schemas/BaseFirewallRule"
      example:
        action_details: "{}"
      properties:
        action_details:
          type: object
    BaseFirewallRule:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        filter_expr:
          description: Wireshark-like filter expression
          example: "ip.geoip.country in {\"IR\" \"TH\" \"US\"} and ssl"
          maxLength: 5000
          minLength: 3
          type: string
        action:
          enum:
          - allow
          - deny
          - bypass
          - challenge
          type: string
        priority:
          description: Priority of the firewall rule
          minimum: 1
          type: integer
        is_enabled:
          type: boolean
        note:
          type: string
      type: object
    FirewallRuleResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          action_details: "{}"
      properties:
        data:
          $ref: "#/components/schemas/FirewallRuleView"
    WafPreset:
      example:
        name: name
        description: description
        id: id
        packages:
        - provider:
            name: name
            logo: http://example.com/aeiou
          name: name
        - provider:
            name: name
            logo: http://example.com/aeiou
          name: name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        packages:
          items:
            $ref: "#/components/schemas/WafPreset_packages_inner"
          type: array
      type: object
    WafPresets:
      example:
        presets:
        - name: name
          description: description
          id: id
          packages:
          - provider:
              name: name
              logo: http://example.com/aeiou
            name: name
          - provider:
              name: name
              logo: http://example.com/aeiou
            name: name
        - name: name
          description: description
          id: id
          packages:
          - provider:
              name: name
              logo: http://example.com/aeiou
            name: name
          - provider:
              name: name
              logo: http://example.com/aeiou
            name: name
        packages:
        - disabled_rulesets:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          params_schema: "{}"
          provider:
            name: name
            logo: http://example.com/aeiou
          disabled_rules:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: id
        - disabled_rulesets:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          params_schema: "{}"
          provider:
            name: name
            logo: http://example.com/aeiou
          disabled_rules:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: id
      properties:
        presets:
          items:
            $ref: "#/components/schemas/WafPreset"
          type: array
        packages:
          items:
            $ref: "#/components/schemas/WafPackage"
          type: array
      type: object
    WafPresetsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          presets:
          - name: name
            description: description
            id: id
            packages:
            - provider:
                name: name
                logo: http://example.com/aeiou
              name: name
            - provider:
                name: name
                logo: http://example.com/aeiou
              name: name
          - name: name
            description: description
            id: id
            packages:
            - provider:
                name: name
                logo: http://example.com/aeiou
              name: name
            - provider:
                name: name
                logo: http://example.com/aeiou
              name: name
          packages:
          - disabled_rulesets:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            params_schema: "{}"
            provider:
              name: name
              logo: http://example.com/aeiou
            disabled_rules:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            id: id
          - disabled_rulesets:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            params_schema: "{}"
            provider:
              name: name
              logo: http://example.com/aeiou
            disabled_rules:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            id: id
      properties:
        data:
          $ref: "#/components/schemas/WafPresets"
    WafSettings:
      example:
        is_enabled: true
        mode: "false"
        packages:
        - is_enabled: true
          params: "{}"
        - is_enabled: true
          params: "{}"
        log_redaction:
          headers:
          - headers
          - headers
          all_headers: false
          records: false
          replacement_string: --REDACTED--
          body: true
          cookies:
          - cookies
          - cookies
      properties:
        is_enabled:
          readOnly: true
          type: boolean
        mode:
          enum:
          - "false"
          - detect
          - protect
          type: string
        log_redaction:
          $ref: "#/components/schemas/WafSettings_log_redaction"
        packages:
          description: Pacakges and their configurations that are used to configure
            WAF.
          items:
            $ref: "#/components/schemas/DomainWafPackage"
          readOnly: true
          type: array
      type: object
    WafRule:
      example:
        is_enabled: true
        url_pattern: url_pattern
        sources:
        - 1.2.3.4/32
        - 1.2.3.4/32
        - 1.2.3.4/32
        - 1.2.3.4/32
        - 1.2.3.4/32
        action: protect
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        url_pattern:
          description: |
            - `?` matches any single character.
            - `*` matches any (possibly empty) sequence of characters.
            - `**` matches the current directory and arbitrary subdirectories. This sequence must form a single path component, so both `**a` and `b**` are invalid and will result in an error. A sequence of more than two consecutive `*` characters is also invalid.
            - `[...]` matches any character inside the brackets. Character sequences can also specify ranges of characters, as ordered by Unicode, so e.g. `[0-9]` specifies any character between 0 and 9 inclusive. An unclosed bracket is invalid.
            - `[!...]` is the negation of `[...]`, i.e. it matches any characters not in the brackets.
            - The metacharacters `?`, `*`, `[`, `] `can be matched by using brackets (e.g. `[?]`). When a `]` occurs immediately following `[` or `[!` then it is interpreted as being part of, rather then ending, the character set, so `]` and NOT `]` can be matched by `[]]` and `[!]]` respectively. The - character can be specified inside a character sequence pattern by placing it at the start or the end, e.g. `[abc-]`.
          format: glob pattern
          type: string
        sources:
          items:
            $ref: "#/components/schemas/CIDR"
          maxItems: 20
          type: array
        action:
          enum:
          - protect
          - passthrough
          type: string
        description:
          type: string
        is_enabled:
          type: boolean
      type: object
    WafPackage:
      example:
        disabled_rulesets:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        params_schema: "{}"
        provider:
          name: name
          logo: http://example.com/aeiou
        disabled_rules:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: id
      properties:
        id:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        provider:
          $ref: "#/components/schemas/WafPackage_provider"
        params_schema:
          description: JSON-schema of parameters of the package
          type: object
        disabled_rules:
          description: It will be filled by default disabled rules when it's not provided
          items:
            format: uuid
            type: string
          type: array
        disabled_rulesets:
          description: It will be filled by default disabled rulesets when it's not
            provided
          items:
            format: uuid
            type: string
          type: array
      type: object
    WafRuleset:
      example:
        name: name
        rules:
        - name: name
          id: id
          params:
            score: 8
            severity: 7
        - name: name
          id: id
          params:
            score: 8
            severity: 7
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        rules:
          items:
            $ref: "#/components/schemas/WafRuleset_rules_inner"
          type: array
      type: object
    WafRulesets:
      properties:
        rulesets:
          items:
            $ref: "#/components/schemas/WafRuleset"
          type: array
      type: object
    WafPackageDetails:
      allOf:
      - $ref: "#/components/schemas/WafPackage"
      - $ref: "#/components/schemas/WafRulesets"
      example:
        disabled_rulesets:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        rulesets:
        - name: name
          rules:
          - name: name
            id: id
            params:
              score: 8
              severity: 7
          - name: name
            id: id
            params:
              score: 8
              severity: 7
          id: id
        - name: name
          rules:
          - name: name
            id: id
            params:
              score: 8
              severity: 7
          - name: name
            id: id
            params:
              score: 8
              severity: 7
          id: id
        params_schema: "{}"
        provider:
          name: name
          logo: http://example.com/aeiou
        disabled_rules:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: id
    WafPackageDetailsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          disabled_rulesets:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rulesets:
          - name: name
            rules:
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            id: id
          - name: name
            rules:
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            id: id
          params_schema: "{}"
          provider:
            name: name
            logo: http://example.com/aeiou
          disabled_rules:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          id: id
      properties:
        data:
          $ref: "#/components/schemas/WafPackageDetails"
    DomainWafPackage:
      allOf:
      - $ref: "#/components/schemas/WafPackage"
      example:
        is_enabled: true
        params: "{}"
      properties:
        params:
          description: parameters of the package
          type: object
        is_enabled:
          default: true
          type: boolean
    DomainWafPackageStore:
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
      type: object
    DomainWafPackageDetails:
      allOf:
      - $ref: "#/components/schemas/DomainWafPackage"
      - $ref: "#/components/schemas/WafRulesets"
      example:
        is_enabled: true
        rulesets:
        - name: name
          rules:
          - name: name
            id: id
            params:
              score: 8
              severity: 7
          - name: name
            id: id
            params:
              score: 8
              severity: 7
          id: id
        - name: name
          rules:
          - name: name
            id: id
            params:
              score: 8
              severity: 7
          - name: name
            id: id
            params:
              score: 8
              severity: 7
          id: id
        params: "{}"
    DomainWafPackageDetailsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          is_enabled: true
          rulesets:
          - name: name
            rules:
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            id: id
          - name: name
            rules:
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            id: id
          params: "{}"
      properties:
        data:
          $ref: "#/components/schemas/DomainWafPackageDetails"
    WafSettingsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          is_enabled: true
          mode: "false"
          packages:
          - is_enabled: true
            params: "{}"
          - is_enabled: true
            params: "{}"
          log_redaction:
            headers:
            - headers
            - headers
            all_headers: false
            records: false
            replacement_string: --REDACTED--
            body: true
            cookies:
            - cookies
            - cookies
      properties:
        data:
          $ref: "#/components/schemas/WafSettings"
    WafReconfigure:
      example:
        preset_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        preset_id:
          format: uuid
          type: string
      type: object
    WafReprioritize:
      example:
        before_package_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        package_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        after_package_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        package_id:
          description: ID of the package you want to move
          format: uuid
          type: string
        after_package_id:
          description: ID of the package you want to be prior to the selected package
          format: uuid
          type: string
        before_package_id:
          description: ID of the package you want to follow the selected package
          format: uuid
          type: string
      required:
      - package_id
      type: object
    WafRuleResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          is_enabled: true
          url_pattern: url_pattern
          sources:
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          action: protect
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: "#/components/schemas/WafRule"
    DomainWafPackagesData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
        - is_enabled: true
          params: "{}"
        - is_enabled: true
          params: "{}"
      properties:
        data:
          items:
            $ref: "#/components/schemas/DomainWafPackage"
          type: array
    DdosSettings:
      example:
        is_enabled: true
        secret_key: secret_key
        site_key: site_key
        https_only: true
        captcha_service: recaptcha
        ttl: 0
        preflight:
          access_credentials: access_credentials
          access_methods:
          - GET
          - GET
          access_expose_headers: access_expose_headers
          access_origin: access_origin
          access_headers: access_headers
        protection_mode: "false"
      properties:
        is_enabled:
          readOnly: true
          type: boolean
        protection_mode:
          enum:
          - "false"
          - cookie
          - javascript
          - captcha
          type: string
        captcha_service:
          enum:
          - recaptcha
          - arcaptcha
          - hcaptcha
          type: string
        site_key:
          description: it can be configured when the captcha_service is set to arcaptcha
          type: string
        secret_key:
          description: it can be configured when the captcha_service is set to arcaptcha
          type: string
        ttl:
          description: Time in seconds for cookie max-age
          type: integer
        https_only:
          description: Adds "SameSite=None; Secure" to set-cookie header
          type: boolean
        preflight:
          $ref: "#/components/schemas/DdosPreflight"
      type: object
    DdosSettingsData:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          is_enabled: true
          secret_key: secret_key
          site_key: site_key
          https_only: true
          captcha_service: recaptcha
          ttl: 0
          preflight:
            access_credentials: access_credentials
            access_methods:
            - GET
            - GET
            access_expose_headers: access_expose_headers
            access_origin: access_origin
            access_headers: access_headers
          protection_mode: "false"
      properties:
        data:
          $ref: "#/components/schemas/DdosSettings"
    DdosPreflight:
      example:
        access_credentials: access_credentials
        access_methods:
        - GET
        - GET
        access_expose_headers: access_expose_headers
        access_origin: access_origin
        access_headers: access_headers
      properties:
        access_origin:
          type: string
        access_credentials:
          type: string
        access_methods:
          items:
            enum:
            - GET
            - HEAD
            - POST
            - PUT
            - DELETE
            - CONNECT
            - OPTIONS
            - TRACE
            - PATCH
            type: string
          type: array
        access_headers:
          type: string
        access_expose_headers:
          type: string
      type: object
    DdosRule:
      example:
        is_enabled: true
        url_pattern: url_pattern
        sources:
        - 1.2.3.4/32
        - 1.2.3.4/32
        - 1.2.3.4/32
        - 1.2.3.4/32
        - 1.2.3.4/32
        description: description
        action: passthrough
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        url_pattern:
          description: |
            - `?` matches any single character.
            - `*` matches any (possibly empty) sequence of characters.
            - `**` matches the current directory and arbitrary subdirectories. This sequence must form a single path component, so both `**a` and `b**` are invalid and will result in an error. A sequence of more than two consecutive `*` characters is also invalid.
            - `[...]` matches any character inside the brackets. Character sequences can also specify ranges of characters, as ordered by Unicode, so e.g. `[0-9]` specifies any character between 0 and 9 inclusive. An unclosed bracket is invalid.
            - `[!...]` is the negation of `[...]`, i.e. it matches any characters not in the brackets.
            - The metacharacters `?`, `*`, `[`, `] `can be matched by using brackets (e.g. `[?]`). When a `]` occurs immediately following `[` or `[!` then it is interpreted as being part of, rather then ending, the character set, so `]` and NOT `]` can be matched by `[]]` and `[!]]` respectively. The - character can be specified inside a character sequence pattern by placing it at the start or the end, e.g. `[abc-]`.
          format: glob pattern
          type: string
        sources:
          items:
            $ref: "#/components/schemas/CIDR"
          maxItems: 20
          type: array
        description:
          type: string
        action:
          enum:
          - passthrough
          - protect
          type: string
        is_enabled:
          type: boolean
      type: object
    DdosRuleResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          is_enabled: true
          url_pattern: url_pattern
          sources:
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          description: description
          action: passthrough
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: "#/components/schemas/DdosRule"
    DdosRuleData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          is_enabled: true
          url_pattern: url_pattern
          sources:
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          description: description
          action: passthrough
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: "#/components/schemas/DdosRule"
    RateLimitSettings:
      example:
        exclude_sources:
        - 1.2.3.4/32
        - 1.2.3.4/32
        ddos_detection: true
      properties:
        ddos_detection:
          type: boolean
        exclude_sources:
          items:
            $ref: "#/components/schemas/CIDR"
          type: array
      type: object
    RateLimitSettingsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          exclude_sources:
          - 1.2.3.4/32
          - 1.2.3.4/32
          ddos_detection: true
      properties:
        data:
          $ref: "#/components/schemas/RateLimitSettings"
    RateLimitRule:
      allOf:
      - $ref: "#/components/schemas/BaseRateLimitRule"
      example:
        action_details:
          mode: 0
          https_only: true
          ttl: 19008189
      properties:
        action_details:
          $ref: "#/components/schemas/ChallengeAction"
    RateLimitRuleView:
      allOf:
      - $ref: "#/components/schemas/BaseRateLimitRule"
      example:
        action_details: "{}"
      properties:
        action_details:
          type: object
    BaseRateLimitRule:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        action:
          default: block
          enum:
          - challenge
          - block
          type: string
        is_enabled:
          type: boolean
        url_pattern:
          description: |
            - `?` matches any single character.
            - `*` matches any (possibly empty) sequence of characters.
            - `**` matches the current directory and arbitrary subdirectories. This sequence must form a single path component, so both `**a` and `b**` are invalid and will result in an error. A sequence of more than two consecutive `*` characters is also invalid.
            - `[...]` matches any character inside the brackets. Character sequences can also specify ranges of characters, as ordered by Unicode, so e.g. `[0-9]` specifies any character between 0 and 9 inclusive. An unclosed bracket is invalid.
            - `[!...]` is the negation of `[...]`, i.e. it matches any characters not in the brackets.
            - The metacharacters `?`, `*`, `[`, `] `can be matched by using brackets (e.g. `[?]`). When a `]` occurs immediately following `[` or `[!` then it is interpreted as being part of, rather then ending, the character set, so `]` and NOT `]` can be matched by `[]]` and `[!]]` respectively. The - character can be specified inside a character sequence pattern by placing it at the start or the end, e.g. `[abc-]`.
          format: glob pattern
          type: string
        description:
          nullable: true
          type: string
        exclude_sources:
          items:
            $ref: "#/components/schemas/CIDR"
          type: array
        rate:
          maximum: 4000000
          minimum: 1
          type: integer
        burst:
          maximum: 4000000
          minimum: 1
          type: integer
        block_duration:
          maximum: 86400
          minimum: 0
          type: integer
        time_duration:
          maximum: 2592000
          minimum: 1
          type: integer
        allowed_methods:
          items:
            enum:
            - POST
            - GET
            - PUT
            - HEAD
            - DELETE
            type: string
          type: array
      required:
      - rate
      - time_duration
      - url_pattern
      type: object
    RateLimitRuleData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          action_details: "{}"
      properties:
        data:
          $ref: "#/components/schemas/RateLimitRuleView"
    CIDR:
      example: 1.2.3.4/32
      format: CIDR
      type: string
    GlobPattern:
      description: |
        - `?` matches any single character.
        - `*` matches any (possibly empty) sequence of characters.
        - `**` matches the current directory and arbitrary subdirectories. This sequence must form a single path component, so both `**a` and `b**` are invalid and will result in an error. A sequence of more than two consecutive `*` characters is also invalid.
        - `[...]` matches any character inside the brackets. Character sequences can also specify ranges of characters, as ordered by Unicode, so e.g. `[0-9]` specifies any character between 0 and 9 inclusive. An unclosed bracket is invalid.
        - `[!...]` is the negation of `[...]`, i.e. it matches any characters not in the brackets.
        - The metacharacters `?`, `*`, `[`, `] `can be matched by using brackets (e.g. `[?]`). When a `]` occurs immediately following `[` or `[!` then it is interpreted as being part of, rather then ending, the character set, so `]` and NOT `]` can be matched by `[]]` and `[!]]` respectively. The - character can be specified inside a character sequence pattern by placing it at the start or the end, e.g. `[abc-]`.
      format: glob pattern
      type: string
    ReprioritizeRuleRequest:
      example:
        rule_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        before_rule_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        after_rule_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        rule_id:
          description: ID of the rule you want to move
          format: uuid
          type: string
        after_rule_id:
          description: ID of the rule you want to be prior to the selected rule
          format: uuid
          type: string
        before_rule_id:
          description: ID of the rule you want to follow the selected rule
          format: uuid
          type: string
      required:
      - rule_id
      type: object
    PrioritizePoolAfter:
      example:
        after_pool_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        pool_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        pool_id:
          description: ID of the pool you want to move
          format: uuid
          type: string
        after_pool_id:
          description: ID of the pool you want to be prior to the selected pool
          format: uuid
          type: string
      required:
      - after_pool_id
      - pool_id
      type: object
    PrioritizePoolBefore:
      properties:
        pool_id:
          description: ID of the pool you want to move
          format: uuid
          type: string
        before_pool_id:
          description: ID of the pool you want to follow the selected pool
          format: uuid
          type: string
      required:
      - before_pool_id
      - pool_id
      type: object
    PrioritizePool:
      anyOf:
      - $ref: "#/components/schemas/PrioritizePoolAfter"
      - $ref: "#/components/schemas/PrioritizePoolBefore"
    CdnAppLikeStats:
      example:
        likes_count: 6
        dislikes_count: 1
      properties:
        likes_count:
          type: integer
        dislikes_count:
          type: integer
      readOnly: true
      type: object
    CdnAppLikeStatsData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          likes_count: 6
          dislikes_count: 1
      properties:
        data:
          $ref: "#/components/schemas/CdnAppLikeStats"
    CdnAppLike:
      example:
        like: true
      properties:
        like:
          description: "True means she likes, False means she dislikes, null means\
            \ she wants to get her vote back."
          nullable: true
          type: boolean
      type: object
    CdnApp:
      example:
        install_json: "{}"
        short_description: short_description
        like_by_user: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        pictures:
        - http://example.com/aeiou
        - http://example.com/aeiou
        like_stats:
          likes_count: 6
          dislikes_count: 1
        support_email: support_email
        like_by_account: true
        updated_at: 2000-01-23T04:56:07.000+00:00
        vendor: vendor
        name: name
        rank: 5
        logo: logo
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        categories:
        - name: name
          active: true
          name_translation:
            en:
              name: name
            fa:
              name: name
          id: id
          order: 0
          applications:
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
        - name: name
          active: true
          name_translation:
            en:
              name: name
            fa:
              name: name
          id: id
          order: 0
          applications:
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
        slug: slug
        status: published
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        categories:
          items:
            $ref: "#/components/schemas/ApplicationCategory"
          type: array
        rank:
          example: 5
          type: number
        name:
          type: string
        slug:
          type: string
        short_description:
          type: string
        description:
          type: string
        logo:
          description: absolute link to logo image
          type: string
        pictures:
          items:
            format: url
            type: string
          type: array
        vendor:
          type: string
        support_email:
          format: email
          type: string
        install_json:
          type: object
        status:
          enum:
          - published
          - draft
          type: string
        like_stats:
          $ref: "#/components/schemas/CdnAppLikeStats"
        like_by_account:
          description: "True means she likes, False means she dislikes. null means\
            \ she did not vote."
          type: boolean
        like_by_user:
          deprecated: true
          description: "Deprecated: Please use 'accounts' instead."
          type: boolean
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    CdnAppInstall:
      example:
        is_install: true
      properties:
        is_install:
          type: boolean
      type: object
    CdnAppData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          install_json: "{}"
          short_description: short_description
          like_by_user: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          pictures:
          - http://example.com/aeiou
          - http://example.com/aeiou
          like_stats:
            likes_count: 6
            dislikes_count: 1
          support_email: support_email
          like_by_account: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          vendor: vendor
          name: name
          rank: 5
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          categories:
          - name: name
            active: true
            name_translation:
              en:
                name: name
              fa:
                name: name
            id: id
            order: 0
            applications:
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
          - name: name
            active: true
            name_translation:
              en:
                name: name
              fa:
                name: name
            id: id
            order: 0
            applications:
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
          slug: slug
          status: published
      properties:
        data:
          $ref: "#/components/schemas/CdnApp"
    DomainCdnApp:
      example:
        domain_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_at: 2000-01-23T04:56:07.000+00:00
        options: "{}"
        active: true
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        application_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        domain_id:
          format: uuid
          readOnly: true
          type: string
        application_id:
          format: uuid
          readOnly: true
          type: string
        active:
          type: boolean
        options:
          type: object
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    CdnAppTriggerWebhook:
      example:
        options: "{}"
        event: before-new-install
      properties:
        event:
          enum:
          - before-new-install
          - new-install
          type: string
        options:
          type: object
      required:
      - event
      - options
      type: object
    InstallJson:
      type: object
    AppOptions:
      type: object
    Certificate:
      example:
        key_type: ec
        updated_at: 2000-01-23T04:56:07.000+00:00
        is_revoked: true
        expiry_date: 2000-01-23T04:56:07.000+00:00
        active: false
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: arvan
        issuer: issuer
        domain_names:
        - domain_names
        - domain_names
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        type:
          enum:
          - arvan
          - user
          - origin
          readOnly: true
          type: string
        active:
          default: false
          readOnly: true
          type: boolean
        key_type:
          enum:
          - ec
          - rsa
          nullable: true
          readOnly: true
          type: string
        domain_names:
          items:
            type: string
          readOnly: true
          type: array
        issuer:
          readOnly: true
          type: string
        is_revoked:
          readOnly: true
          type: boolean
        expiry_date:
          format: date-time
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    SSLProblem:
      example:
        detail: Some of the identifiers requested were rejected
        type: urn:ietf:params:acme:error:malformed
        status: status
        subproblems:
        - identifier:
            type: _example.org
            value: dns
          detail: Invalid underscore in DNS name "_example.org"
          type: urn:ietf:params:acme:error:malformed
        - identifier:
            type: _example.org
            value: dns
          detail: Invalid underscore in DNS name "_example.org"
          type: urn:ietf:params:acme:error:malformed
      properties:
        type:
          description: A URI reference that identifies the problem type.
          example: urn:ietf:params:acme:error:malformed
          format: uri
          readOnly: true
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: Some of the identifiers requested were rejected
          readOnly: true
          type: string
        status:
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem
          format: string
          readOnly: true
          type: string
        subproblems:
          items:
            $ref: "#/components/schemas/Subproblem"
          readOnly: true
          type: array
      type: object
    Subproblem:
      example:
        identifier:
          type: _example.org
          value: dns
        detail: Invalid underscore in DNS name "_example.org"
        type: urn:ietf:params:acme:error:malformed
      properties:
        type:
          description: A reference that identifies the problem type.
          example: urn:ietf:params:acme:error:malformed
          readOnly: true
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: Invalid underscore in DNS name "_example.org"
          readOnly: true
          type: string
        identifier:
          $ref: "#/components/schemas/Subproblem_identifier"
      type: object
    CertificateOrder:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        expiry_date: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order_id: order_id
        errors:
          detail: Some of the identifiers requested were rejected
          type: urn:ietf:params:acme:error:malformed
          status: status
          subproblems:
          - identifier:
              type: _example.org
              value: dns
            detail: Invalid underscore in DNS name "_example.org"
            type: urn:ietf:params:acme:error:malformed
          - identifier:
              type: _example.org
              value: dns
            detail: Invalid underscore in DNS name "_example.org"
            type: urn:ietf:params:acme:error:malformed
        status: unprocessed
        domain_names:
        - domain_names
        - domain_names
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        order_id:
          format: int32
          readOnly: true
          type: string
        status:
          description: |
            - `unprocessed` - Order is in the process queue
            - `canceled` - Order is canceled in favor of a new one with updated subject names
            - `pending` - Authorization Challenges are set, Validating authorization challenges...
            - `ready` - Challenges are validated, ready to issue the certificate
            - `processing` - Issuing Certificate...
            - `valid` - Certificate is issued successfully, this is the final stage
            - `invalid` - An Error Occurred, this order cannot proceed anymore, a new order will be created automatically
            - `terminated` - An Unknown Error occurred, this order cannot proceed anymore, a new order will be created automatically
            - `killed` - Order failed despite many retries, will not proceed anymore nor retry, needs manual intervention
          enum:
          - unprocessed
          - pending
          - processing
          - ready
          - valid
          - invalid
          - canceled
          - terminated
          - killed
          readOnly: true
          type: string
        domain_names:
          items:
            type: string
          readOnly: true
          type: array
        errors:
          $ref: "#/components/schemas/SSLProblem"
        expiry_date:
          description: Expired order is treated as invalid order
          format: date-time
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      type: object
    Ssl:
      example:
        hsts_subdomain: true
        replace_http: true
        hsts_status: true
        tls_version: ""
        certificate_key_type: rsa
        certificate_mode: managed
        quic_status: true
        hsts_preload: true
        certificates:
        - key_type: ec
          updated_at: 2000-01-23T04:56:07.000+00:00
          is_revoked: true
          expiry_date: 2000-01-23T04:56:07.000+00:00
          active: false
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: arvan
          issuer: issuer
          domain_names:
          - domain_names
          - domain_names
        - key_type: ec
          updated_at: 2000-01-23T04:56:07.000+00:00
          is_revoked: true
          expiry_date: 2000-01-23T04:56:07.000+00:00
          active: false
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: arvan
          issuer: issuer
          domain_names:
          - domain_names
          - domain_names
        https_redirect: true
        fingerprint_status: true
        orders:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          expiry_date: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order_id: order_id
          errors:
            detail: Some of the identifiers requested were rejected
            type: urn:ietf:params:acme:error:malformed
            status: status
            subproblems:
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
          status: unprocessed
          domain_names:
          - domain_names
          - domain_names
        - updated_at: 2000-01-23T04:56:07.000+00:00
          expiry_date: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order_id: order_id
          errors:
            detail: Some of the identifiers requested were rejected
            type: urn:ietf:params:acme:error:malformed
            status: status
            subproblems:
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
          status: unprocessed
          domain_names:
          - domain_names
          - domain_names
        ssl_status: true
        hsts_max_age: 1mo
      properties:
        fingerprint_status:
          description: Whether Domain is using fingerprint or not
          type: boolean
        ssl_status:
          description: Whether Domain is using ssl module or not
          type: boolean
        certificate_mode:
          description: "Indicates certificate is managed by arvan, or its up to the\
            \ user"
          enum:
          - managed
          - custom
          readOnly: true
          type: string
        tls_version:
          description: Minimum version of TLS. Empty ('') means default.
          enum:
          - ""
          - TLSv1
          - TLSv1.1
          - TLSv1.2
          - TLSv1.3
          type: string
        hsts_status:
          description: Whether HSTS is enabled
          type: boolean
        quic_status:
          description: Whether QUIC is enabled
          type: boolean
        hsts_max_age:
          description: HSTS max age directive
          enum:
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          - 5mo
          - 6mo
          - 12mo
          - 24mo
          type: string
        hsts_subdomain:
          type: boolean
        hsts_preload:
          type: boolean
        https_redirect:
          type: boolean
        replace_http:
          description: Replace HTTP with HTTPs in HTML and JS sources
          type: boolean
        certificate_key_type:
          enum:
          - rsa
          - ec
          type: string
        certificates:
          items:
            $ref: "#/components/schemas/Certificate"
          readOnly: true
          type: array
        orders:
          description: returns all "certificate orders" since the last invalid or
            canceled order
          items:
            $ref: "#/components/schemas/CertificateOrder"
          nullable: true
          readOnly: true
          type: array
      type: object
    SslResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          hsts_subdomain: true
          replace_http: true
          hsts_status: true
          tls_version: ""
          certificate_key_type: rsa
          certificate_mode: managed
          quic_status: true
          hsts_preload: true
          certificates:
          - key_type: ec
            updated_at: 2000-01-23T04:56:07.000+00:00
            is_revoked: true
            expiry_date: 2000-01-23T04:56:07.000+00:00
            active: false
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: arvan
            issuer: issuer
            domain_names:
            - domain_names
            - domain_names
          - key_type: ec
            updated_at: 2000-01-23T04:56:07.000+00:00
            is_revoked: true
            expiry_date: 2000-01-23T04:56:07.000+00:00
            active: false
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: arvan
            issuer: issuer
            domain_names:
            - domain_names
            - domain_names
          https_redirect: true
          fingerprint_status: true
          orders:
          - updated_at: 2000-01-23T04:56:07.000+00:00
            expiry_date: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order_id: order_id
            errors:
              detail: Some of the identifiers requested were rejected
              type: urn:ietf:params:acme:error:malformed
              status: status
              subproblems:
              - identifier:
                  type: _example.org
                  value: dns
                detail: Invalid underscore in DNS name "_example.org"
                type: urn:ietf:params:acme:error:malformed
              - identifier:
                  type: _example.org
                  value: dns
                detail: Invalid underscore in DNS name "_example.org"
                type: urn:ietf:params:acme:error:malformed
            status: unprocessed
            domain_names:
            - domain_names
            - domain_names
          - updated_at: 2000-01-23T04:56:07.000+00:00
            expiry_date: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            order_id: order_id
            errors:
              detail: Some of the identifiers requested were rejected
              type: urn:ietf:params:acme:error:malformed
              status: status
              subproblems:
              - identifier:
                  type: _example.org
                  value: dns
                detail: Invalid underscore in DNS name "_example.org"
                type: urn:ietf:params:acme:error:malformed
              - identifier:
                  type: _example.org
                  value: dns
                detail: Invalid underscore in DNS name "_example.org"
                type: urn:ietf:params:acme:error:malformed
            status: unprocessed
            domain_names:
            - domain_names
            - domain_names
          ssl_status: true
          hsts_max_age: 1mo
      properties:
        data:
          $ref: "#/components/schemas/Ssl"
    CertificateStore:
      properties:
        certificate:
          format: binary
          type: string
        private_key:
          format: binary
          type: string
      type: object
    LogForwarderSummary:
      example:
        connection_type: connection_type
        name: name
        description: description
        id: id
        type: type
        status: true
      properties:
        id:
          type: string
        type:
          type: string
        connection_type:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: boolean
      type: object
    MetricExporterSummary:
      example:
        domain: domain
        name: name
        interval: 0
        id: id
        type: type
        url: url
        status: true
      properties:
        id:
          type: string
        type:
          type: string
        interval:
          type: integer
        name:
          type: string
        domain:
          type: string
        url:
          type: string
        status:
          type: boolean
      type: object
    TransportLayerProxy:
      example:
        app_name: app_name
        servers:
        - address: address
          fall: 1
          port: 6
          inter: 5
          weight: 15
          check: enabled
          rise: 1
        - address: address
          fall: 1
          port: 6
          inter: 5
          weight: 15
          check: enabled
          rise: 1
        port: 5249
        domain: sub.example.com
        ip: ip
        proxy_protocol: "false"
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        firewalls:
        - access: allow
          name: name
          match: IR
          description: description
          active: true
          type: geo
        - access: allow
          name: name
          match: IR
          description: description
          active: true
          type: geo
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        firewall_default_action: allow
        balance_algorithm: roundrobin
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        created_at:
          format: date-time
          readOnly: true
          type: string
        app_name:
          type: string
        description:
          type: string
        domain:
          example: sub.example.com
          type: string
        port:
          maximum: 65535
          minimum: 1
          type: integer
        ip:
          format: ipv4
          type: string
        proxy_protocol:
          enum:
          - "false"
          - send-proxy
          - send-proxy-v2
          type: string
        balance_algorithm:
          enum:
          - roundrobin
          - leastconn
          - source
          type: string
        servers:
          items:
            $ref: "#/components/schemas/TransportLayerProxy_servers_inner"
          type: array
        firewall_default_action:
          enum:
          - allow
          - deny
          type: string
        firewalls:
          items:
            $ref: "#/components/schemas/TransportLayerProxy_firewalls_inner"
          type: array
      type: object
    TransportLayerProxyMatch:
      oneOf:
      - $ref: "#/components/schemas/TransportLayerProxyMatchCountry"
      - $ref: "#/components/schemas/TransportLayerProxyMatchIp"
      type: object
    TransportLayerProxyMatchCountry:
      description: when type is geo
      example: IR
      pattern: "^[A-Za-z]{2}$"
      type: string
    TransportLayerProxyMatchIp:
      description: when type is ip_range
      items:
        format: ip range
        type: string
      type: array
    TransportLayerProxyResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          app_name: app_name
          servers:
          - address: address
            fall: 1
            port: 6
            inter: 5
            weight: 15
            check: enabled
            rise: 1
          - address: address
            fall: 1
            port: 6
            inter: 5
            weight: 15
            check: enabled
            rise: 1
          port: 5249
          domain: sub.example.com
          ip: ip
          proxy_protocol: "false"
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          firewalls:
          - access: allow
            name: name
            match: IR
            description: description
            active: true
            type: geo
          - access: allow
            name: name
            match: IR
            description: description
            active: true
            type: geo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          firewall_default_action: allow
          balance_algorithm: roundrobin
      properties:
        data:
          $ref: "#/components/schemas/TransportLayerProxy"
    TransportLayerProxyStore:
      example:
        app_name: app_name
        servers:
        - address: address
          fall: 1
          port: 6
          inter: 5
          weight: 15
          check: enabled
          rise: 1
        - address: address
          fall: 1
          port: 6
          inter: 5
          weight: 15
          check: enabled
          rise: 1
        port: 5248
        domain: sub.example.com
        ip: ip
        proxy_protocol: "false"
        description: description
        firewalls:
        - access: allow
          name: name
          match: IR
          description: description
          active: true
          type: geo
        - access: allow
          name: name
          match: IR
          description: description
          active: true
          type: geo
        firewall_default_action: allow
        balance_algorithm: roundrobin
      properties:
        app_name:
          type: string
        description:
          type: string
        domain:
          example: sub.example.com
          type: string
        ip:
          format: ipv4
          type: string
        port:
          maximum: 65535
          type: integer
        proxy_protocol:
          enum:
          - "false"
          - send-proxy
          - send-proxy-v2
          type: string
        balance_algorithm:
          enum:
          - roundrobin
          - leastconn
          - source
          type: string
        servers:
          items:
            $ref: "#/components/schemas/TransportLayerProxyServer"
          type: array
        firewall_default_action:
          enum:
          - allow
          - deny
          type: string
        firewalls:
          items:
            $ref: "#/components/schemas/TransportLayerProxyFirewall"
          type: array
      required:
      - app_name
      - balance_algorithm
      - domain
      - firewall_default_action
      - proxy_protocol
      type: object
    TransportLayerProxyUpdate:
      example:
        app_name: app_name
        servers:
        - address: address
          fall: 1
          port: 6
          inter: 5
          weight: 15
          check: enabled
          rise: 1
        - address: address
          fall: 1
          port: 6
          inter: 5
          weight: 15
          check: enabled
          rise: 1
        proxy_protocol: "false"
        description: description
        firewalls:
        - access: allow
          name: name
          match: IR
          description: description
          active: true
          type: geo
        - access: allow
          name: name
          match: IR
          description: description
          active: true
          type: geo
        firewall_default_action: allow
        balance_algorithm: roundrobin
      properties:
        app_name:
          type: string
        description:
          type: string
        proxy_protocol:
          enum:
          - "false"
          - send-proxy
          - send-proxy-v2
          type: string
        balance_algorithm:
          enum:
          - roundrobin
          - leastconn
          - source
          type: string
        servers:
          items:
            $ref: "#/components/schemas/TransportLayerProxyServer"
          type: array
        firewall_default_action:
          enum:
          - allow
          - deny
          type: string
        firewalls:
          items:
            $ref: "#/components/schemas/TransportLayerProxyFirewall"
          type: array
      required:
      - app_name
      - balance_algorithm
      - proxy_protocol
      type: object
    TransportLayerProxyFirewall:
      example:
        access: allow
        name: name
        match: IR
        description: description
        active: true
        type: geo
      properties:
        access:
          enum:
          - allow
          - deny
          type: string
        name:
          maxLength: 100
          minLength: 3
          type: string
        description:
          maxLength: 500
          minLength: 3
          type: string
        type:
          enum:
          - geo
          - ip_range
          type: string
        match:
          $ref: "#/components/schemas/TransportLayerProxyMatch"
        active:
          type: boolean
      type: object
    TransportLayerProxyServer:
      example:
        address: address
        fall: 1
        port: 6
        inter: 5
        weight: 15
        check: enabled
        rise: 1
      properties:
        address:
          format: hostname
          type: string
        port:
          type: integer
        weight:
          maximum: 100
          minimum: 1
          type: integer
        check:
          enum:
          - enabled
          - disabled
          type: string
        fall:
          minimum: 1
          type: integer
        inter:
          minimum: 5
          type: integer
        rise:
          minimum: 1
          type: integer
      required:
      - address
      - check
      - port
      - weight
      type: object
    SslUpdate:
      allOf:
      - $ref: "#/components/schemas/Ssl"
      example:
        certificate: "[\"managed\",\"4e0de55d-96f5-471b-8ee5-f2667738320e\"]"
        certificate_key_type: rsa
      properties:
        certificate:
          description: a user uploaded certificate's uuid or `managed`
          example: "[\"managed\",\"4e0de55d-96f5-471b-8ee5-f2667738320e\"]"
          type: string
        certificate_key_type:
          enum:
          - rsa
          - ec
          type: string
    HealthCheckReportDetail:
      example:
        date: date
        upstream: upstream
        zone: zone
        message: message
        status: true
      properties:
        date:
          format: datetime
          type: string
        zone:
          type: string
        upstream:
          type: string
        status:
          type: boolean
        message:
          type: string
      type: object
    HealthCheckReportSummaryDetail:
      example:
        date: date
        status: true
      properties:
        date:
          format: datetime
          type: string
        status:
          type: boolean
      type: object
    HealthCheckReportSummary:
      example:
        total: 0
        zone: zone
        details:
        - date: date
          status: true
        - date: date
          status: true
        failed: 6
        status: true
      properties:
        zone:
          type: string
        status:
          type: boolean
        total:
          type: integer
        failed:
          type: integer
        details:
          items:
            $ref: "#/components/schemas/HealthCheckReportSummaryDetail"
          type: array
      type: object
    HealthCheckRequestConfig:
      oneOf:
      - $ref: "#/components/schemas/HttpConfig"
      - $ref: "#/components/schemas/TcpConfig"
    HealthCheckView:
      allOf:
      - $ref: "#/components/schemas/BaseHealthCheck"
      example:
        request_config: "{}"
      properties:
        request_config:
          type: object
    HealthCheck:
      allOf:
      - $ref: "#/components/schemas/BaseHealthCheck"
      example:
        request_config:
          sent_headers:
          - value: value
            key: key
          - value: value
            key: key
          path: path
          headers:
            key: headers
          method: HEAD
          port: 39073
          allow_insecure: true
          follow_redirects: true
          expected_response:
            codes:
            - 5
            - 5
            headers:
              key:
              - headers
              - headers
            body: body
            expected_headers:
            - value:
              - value
              - value
              key: key
            - value:
              - value
              - value
              key: key
          timeout: 6907
      properties:
        request_config:
          $ref: "#/components/schemas/HealthCheckRequestConfig"
    BaseHealthCheck:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
        origin:
          description: "can be IP/Host when type is `upstream`, otherwise it must\
            \ be a valid record ID"
          type: string
        origin_type:
          enum:
          - pool
          type: string
        upstreams:
          items:
            example: 1.1.1.1
            type: string
          type: array
        interval:
          description: In milliseconds
          enum:
          - 30000
          - 60000
          - 120000
          type: integer
        threshold:
          minimum: 1
          type: integer
        type:
          enum:
          - TCP
          - HTTP
          - HTTPS
          type: string
        status:
          default: true
          description: The health-check is off or on
          type: boolean
        retries:
          description: Number of immediate retries in case of a timeout
          maximum: 10
          minimum: 0
          type: integer
        zones:
          items:
            $ref: "#/components/schemas/HealthCheckZone"
          type: array
        monitoring_updated_at:
          format: date-time
          nullable: true
          type: string
      type: object
    HttpConfig:
      example:
        sent_headers:
        - value: value
          key: key
        - value: value
          key: key
        path: path
        headers:
          key: headers
        method: HEAD
        port: 39073
        allow_insecure: true
        follow_redirects: true
        expected_response:
          codes:
          - 5
          - 5
          headers:
            key:
            - headers
            - headers
          body: body
          expected_headers:
          - value:
            - value
            - value
            key: key
          - value:
            - value
            - value
            key: key
        timeout: 6907
      properties:
        method:
          enum:
          - HEAD
          - GET
          - POST
          - PUT
          type: string
        port:
          maximum: 65535
          minimum: 1
          type: integer
        path:
          description: path for test
          type: string
        allow_insecure:
          type: boolean
        expected_response:
          $ref: "#/components/schemas/ExpectedResponse"
        headers:
          additionalProperties:
            type: string
          type: object
        sent_headers:
          items:
            $ref: "#/components/schemas/HttpConfig_sent_headers_inner"
          type: array
        follow_redirects:
          deprecated: true
          readOnly: true
          type: boolean
        timeout:
          description: In milliseconds
          maximum: 30000
          minimum: 1
          type: integer
      required:
      - allow_insecure
      - expected_response
      - headers
      - method
      - path
      - port
      - sent_headers
      - timeout
      type: object
    TcpConfig:
      properties:
        port:
          maximum: 65535
          minimum: 1
          type: integer
        timeout:
          description: In milliseconds
          maximum: 10000
          minimum: 1
          type: integer
      required:
      - port
      - timeout
      type: object
    HealthCheckZone:
      properties:
        id:
          type: string
        name:
          description: "The name of the health check zone. If 'id' is not provided,\
            \ 'name' will be used as the 'id'."
          type: string
        monitoring_level:
          enum:
          - critical
          - non-critical
          - quiet-critical
          - "false"
          type: string
      type: object
    HealthCheckZoneName:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    ExpectedResponse:
      example:
        codes:
        - 5
        - 5
        headers:
          key:
          - headers
          - headers
        body: body
        expected_headers:
        - value:
          - value
          - value
          key: key
        - value:
          - value
          - value
          key: key
      properties:
        codes:
          description: List of expected http status code
          items:
            type: integer
          type: array
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        expected_headers:
          items:
            $ref: "#/components/schemas/ExpectedHeaders_inner"
          type: array
        body:
          type: string
      type: object
    Headers:
      additionalProperties:
        items:
          type: string
        type: array
      type: object
    ExpectedHeaders:
      items:
        $ref: "#/components/schemas/ExpectedHeaders_inner"
      type: array
    MonitoringStatus:
      enum:
      - "off"
      - no-data
      - healthy
      - unhealthy
      nullable: true
      type: string
    HealthCheckResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          request_config: "{}"
      properties:
        data:
          $ref: "#/components/schemas/HealthCheckView"
    FeaturePrice:
      example:
        metric_key: metric_key
        currency: currency
        value: 7.061401241503109
      nullable: true
      properties:
        metric_key:
          type: string
        currency:
          type: string
        value:
          type: number
      type: object
    UsageLimit:
      example:
        min: 5
        max: 5
      nullable: true
      properties:
        min:
          type: integer
        max:
          type: integer
      type: object
    FeaturePricing:
      example:
        per_unit:
          metric_key: metric_key
          currency: currency
          value: 7.061401241503109
        flat:
          metric_key: metric_key
          currency: currency
          value: 7.061401241503109
        free_tier: 2
      nullable: true
      properties:
        free_tier:
          type: integer
        flat:
          $ref: "#/components/schemas/FeaturePrice"
        per_unit:
          $ref: "#/components/schemas/FeaturePrice"
      type: object
    Currency:
      example:
        label: label
        key: irr
      properties:
        key:
          enum:
          - irr
          - eur
          - rub
          type: string
        label:
          type: string
      type: object
    PlanInfo:
      example:
        monthly_cost: 0.8008281904610115
        needed_balance: 1.4658129805029452
        name: name
        discount: 6.027456183070403
        key: enterprise
      properties:
        key:
          example: enterprise
          type: string
        name:
          type: string
        monthly_cost:
          type: number
        discount:
          description: between 0 to 100 is the percentage of the discount
          type: number
        needed_balance:
          description: How much balance the account needs for selected plan
          type: number
      type: object
    Plans:
      items:
        $ref: "#/components/schemas/PlanInfo"
      type: array
    FeaturePlanDefinition:
      example:
        usage_limit:
          min: 5
          max: 5
        meta:
          tip: tip
          available_params:
          - "{}"
          - "{}"
          labels:
          - FeaturePlanDefinition_meta_labels_inner
          - FeaturePlanDefinition_meta_labels_inner
        pricing:
          per_unit:
            metric_key: metric_key
            currency: currency
            value: 7.061401241503109
          flat:
            metric_key: metric_key
            currency: currency
            value: 7.061401241503109
          free_tier: 2
      nullable: true
      properties:
        meta:
          $ref: "#/components/schemas/FeaturePlanDefinition_meta"
        usage_limit:
          $ref: "#/components/schemas/UsageLimit"
        pricing:
          $ref: "#/components/schemas/FeaturePricing"
      type: object
    FeatureDefinition:
      example:
        plans:
          "0":
            usage_limit:
              min: 5
              max: 5
            meta:
              tip: tip
              available_params:
              - "{}"
              - "{}"
              labels:
              - FeaturePlanDefinition_meta_labels_inner
              - FeaturePlanDefinition_meta_labels_inner
            pricing:
              per_unit:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              flat:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              free_tier: 2
          "1":
            usage_limit:
              min: 5
              max: 5
            meta:
              tip: tip
              available_params:
              - "{}"
              - "{}"
              labels:
              - FeaturePlanDefinition_meta_labels_inner
              - FeaturePlanDefinition_meta_labels_inner
            pricing:
              per_unit:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              flat:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              free_tier: 2
          "2":
            usage_limit:
              min: 5
              max: 5
            meta:
              tip: tip
              available_params:
              - "{}"
              - "{}"
              labels:
              - FeaturePlanDefinition_meta_labels_inner
              - FeaturePlanDefinition_meta_labels_inner
            pricing:
              per_unit:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              flat:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              free_tier: 2
          "3":
            usage_limit:
              min: 5
              max: 5
            meta:
              tip: tip
              available_params:
              - "{}"
              - "{}"
              labels:
              - FeaturePlanDefinition_meta_labels_inner
              - FeaturePlanDefinition_meta_labels_inner
            pricing:
              per_unit:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              flat:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              free_tier: 2
          "4":
            usage_limit:
              min: 5
              max: 5
            meta:
              tip: tip
              available_params:
              - "{}"
              - "{}"
              labels:
              - FeaturePlanDefinition_meta_labels_inner
              - FeaturePlanDefinition_meta_labels_inner
            pricing:
              per_unit:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              flat:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              free_tier: 2
        meta:
          description: description
          label: label
        id: id
      properties:
        id:
          type: string
        plans:
          $ref: "#/components/schemas/FeatureDefinition_plans"
        meta:
          $ref: "#/components/schemas/FeatureDefinition_meta"
      type: object
    FeatureSet:
      example:
        features:
        - plans:
            "0":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
            "1":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
            "2":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
            "3":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
            "4":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
          meta:
            description: description
            label: label
          id: id
        - plans:
            "0":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
            "1":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
            "2":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
            "3":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
            "4":
              usage_limit:
                min: 5
                max: 5
              meta:
                tip: tip
                available_params:
                - "{}"
                - "{}"
                labels:
                - FeaturePlanDefinition_meta_labels_inner
                - FeaturePlanDefinition_meta_labels_inner
              pricing:
                per_unit:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                flat:
                  metric_key: metric_key
                  currency: currency
                  value: 7.061401241503109
                free_tier: 2
          meta:
            description: description
            label: label
          id: id
        id: id
        label: label
      properties:
        id:
          type: string
        label:
          type: string
        features:
          items:
            $ref: "#/components/schemas/FeatureDefinition"
          type: array
      type: object
    EstimatedCost:
      example:
        period: monthly
        currency: IRT
        value: 0.8008281904610115
      properties:
        period:
          enum:
          - monthly
          - dayly
          - hourly
          type: string
        currency:
          enum:
          - IRT
          - EUR
          - RUB
          type: string
        value:
          type: number
      type: object
    FeatureUsage:
      example:
        feature_id: feature_id
        estimated_cost:
          period: monthly
          currency: IRT
          value: 0.8008281904610115
        usage: 6.027456183070403
        pricing:
          per_unit:
            metric_key: metric_key
            currency: currency
            value: 7.061401241503109
          flat:
            metric_key: metric_key
            currency: currency
            value: 7.061401241503109
          free_tier: 2
      properties:
        feature_id:
          type: string
        pricing:
          $ref: "#/components/schemas/FeaturePricing"
        estimated_cost:
          $ref: "#/components/schemas/EstimatedCost"
        usage:
          type: number
      type: object
    Violations:
      example:
        violations:
          enterprise:
          - enterprise
          - enterprise
          paygo:
          - paygo
          - paygo
          growth:
          - growth
          - growth
          basic:
          - basic
          - basic
          professional:
          - professional
          - professional
      properties:
        violations:
          $ref: "#/components/schemas/Violations_violations"
      type: object
    Usages:
      example:
        feature_usages:
        - feature_id: feature_id
          estimated_cost:
            period: monthly
            currency: IRT
            value: 0.8008281904610115
          usage: 6.027456183070403
          pricing:
            per_unit:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            flat:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            free_tier: 2
        - feature_id: feature_id
          estimated_cost:
            period: monthly
            currency: IRT
            value: 0.8008281904610115
          usage: 6.027456183070403
          pricing:
            per_unit:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            flat:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            free_tier: 2
        estimated_cost:
          period: monthly
          currency: IRT
          value: 0.8008281904610115
      properties:
        feature_usages:
          items:
            $ref: "#/components/schemas/FeatureUsage"
          type: array
        estimated_cost:
          $ref: "#/components/schemas/EstimatedCost"
      type: object
    FeatureSets:
      example:
        plans:
        - monthly_cost: 0.8008281904610115
          needed_balance: 1.4658129805029452
          name: name
          discount: 6.027456183070403
          key: enterprise
        - monthly_cost: 0.8008281904610115
          needed_balance: 1.4658129805029452
          name: name
          discount: 6.027456183070403
          key: enterprise
        feature_sets:
        - features:
          - plans:
              "0":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "1":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "2":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "3":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "4":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
            meta:
              description: description
              label: label
            id: id
          - plans:
              "0":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "1":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "2":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "3":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "4":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
            meta:
              description: description
              label: label
            id: id
          id: id
          label: label
        - features:
          - plans:
              "0":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "1":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "2":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "3":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "4":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
            meta:
              description: description
              label: label
            id: id
          - plans:
              "0":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "1":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "2":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "3":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
              "4":
                usage_limit:
                  min: 5
                  max: 5
                meta:
                  tip: tip
                  available_params:
                  - "{}"
                  - "{}"
                  labels:
                  - FeaturePlanDefinition_meta_labels_inner
                  - FeaturePlanDefinition_meta_labels_inner
                pricing:
                  per_unit:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  flat:
                    metric_key: metric_key
                    currency: currency
                    value: 7.061401241503109
                  free_tier: 2
            meta:
              description: description
              label: label
            id: id
          id: id
          label: label
        currency:
          label: label
          key: irr
      properties:
        currency:
          $ref: "#/components/schemas/Currency"
        plans:
          items:
            $ref: "#/components/schemas/PlanInfo"
          type: array
        feature_sets:
          items:
            $ref: "#/components/schemas/FeatureSet"
          type: array
      type: object
    PlanResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          plans:
          - monthly_cost: 0.8008281904610115
            needed_balance: 1.4658129805029452
            name: name
            discount: 6.027456183070403
            key: enterprise
          - monthly_cost: 0.8008281904610115
            needed_balance: 1.4658129805029452
            name: name
            discount: 6.027456183070403
            key: enterprise
          feature_sets:
          - features:
            - plans:
                "0":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "1":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "2":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "3":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "4":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
              meta:
                description: description
                label: label
              id: id
            - plans:
                "0":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "1":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "2":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "3":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "4":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
              meta:
                description: description
                label: label
              id: id
            id: id
            label: label
          - features:
            - plans:
                "0":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "1":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "2":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "3":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "4":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
              meta:
                description: description
                label: label
              id: id
            - plans:
                "0":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "1":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "2":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "3":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
                "4":
                  usage_limit:
                    min: 5
                    max: 5
                  meta:
                    tip: tip
                    available_params:
                    - "{}"
                    - "{}"
                    labels:
                    - FeaturePlanDefinition_meta_labels_inner
                    - FeaturePlanDefinition_meta_labels_inner
                  pricing:
                    per_unit:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    flat:
                      metric_key: metric_key
                      currency: currency
                      value: 7.061401241503109
                    free_tier: 2
              meta:
                description: description
                label: label
              id: id
            id: id
            label: label
          currency:
            label: label
            key: irr
      properties:
        data:
          $ref: "#/components/schemas/FeatureSets"
    CachingPurge:
      example:
        purge_urls:
        - http://example.com/aeiou
        - http://example.com/aeiou
        - http://example.com/aeiou
        - http://example.com/aeiou
        - http://example.com/aeiou
        purge_tags:
        - purge_tags
        - purge_tags
        - purge_tags
        - purge_tags
        - purge_tags
        purge: all
      properties:
        purge:
          description: tags is deprecated
          enum:
          - all
          - individual
          - tags
          type: string
        purge_urls:
          description: URLs to be purged from cache. Required if purge value is set
            to individual.
          items:
            format: url
            type: string
          maxItems: 50
          minItems: 1
          type: array
        purge_tags:
          deprecated: true
          description: |
            Tags to be purged from cache. Required if purge value is set to tags.
            Each tag must be 32 characters or less. Only ASCII characters are acceptable.
          items:
            type: string
          maxItems: 100
          minItems: 1
          type: array
      required:
      - purge
      type: object
    DomainPurgeTags:
      example:
        domain_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
      properties:
        domain_id:
          format: uuid
          type: string
        tags:
          items:
            type: string
          type: array
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    ApplicationCategory:
      example:
        name: name
        active: true
        name_translation:
          en:
            name: name
          fa:
            name: name
        id: id
        order: 0
        applications:
        - name: name
          description: description
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
        - name: name
          description: description
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
        - name: name
          description: description
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
        - name: name
          description: description
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
        - name: name
          description: description
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
      properties:
        id:
          type: string
        name:
          type: string
        active:
          type: boolean
        order:
          type: integer
        name_translation:
          $ref: "#/components/schemas/ApplicationCategory_name_translation"
        applications:
          items:
            $ref: "#/components/schemas/ApplicationCategory_applications_inner"
          maxItems: 10
          type: array
      type: object
    CloneDomain:
      example:
        from: from
      properties:
        from:
          format: hostname
          type: string
      required:
      - from
      type: object
    BypassAction:
      example:
        rlimit: true
        challenge: true
        waf: true
      properties:
        rlimit:
          type: boolean
        challenge:
          type: boolean
        waf:
          type: boolean
      type: object
    ChallengeAction:
      example:
        mode: 0
        https_only: true
        ttl: 19008189
      properties:
        mode:
          description: "The mode of mitigation (1: Cookie, 2: Javascript, 3: Captcha)"
          enum:
          - 1
          - 2
          - 3
          type: integer
        ttl:
          maximum: 31536000
          minimum: 10
          type: integer
        https_only:
          type: boolean
      type: object
    DynamicField:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        scope: public
        values:
        - created_at: created_at
          value: null
          desc: desc
        - created_at: created_at
          value: null
          desc: desc
        name: name
        namespace: namespace
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        allowed_plans:
        - 0
        - 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: ip
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        name:
          type: string
        description:
          nullable: true
          type: string
        namespace:
          readOnly: true
          type: string
        type:
          enum:
          - ip
          - number
          - byte
          type: string
        scope:
          enum:
          - public
          - private
          readOnly: true
          type: string
        values:
          items:
            $ref: "#/components/schemas/DynamicFieldValue"
          type: array
        allowed_plans:
          items:
            type: integer
          readOnly: true
          type: array
        created_at:
          format: date-time
          readOnly: true
          type: string
        updated_at:
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      - type
      - values
      type: object
    DynamicFieldResponse:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          updated_at: 2000-01-23T04:56:07.000+00:00
          scope: public
          values:
          - created_at: created_at
            value: null
            desc: desc
          - created_at: created_at
            value: null
            desc: desc
          name: name
          namespace: namespace
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          allowed_plans:
          - 0
          - 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: ip
      properties:
        data:
          $ref: "#/components/schemas/DynamicField"
    DynamicFieldData:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          updated_at: 2000-01-23T04:56:07.000+00:00
          scope: public
          values:
          - created_at: created_at
            value: null
            desc: desc
          - created_at: created_at
            value: null
            desc: desc
          name: name
          namespace: namespace
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          allowed_plans:
          - 0
          - 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: ip
      properties:
        data:
          $ref: "#/components/schemas/DynamicField"
    DynamicFieldValues:
      items:
        $ref: "#/components/schemas/DynamicFieldValue"
      type: array
    DynamicFieldValue:
      example:
        created_at: created_at
        value: null
        desc: desc
      properties:
        value:
          $ref: "#/components/schemas/DynamicFieldType"
        desc:
          type: string
        created_at:
          readOnly: true
          type: string
      type: object
    DynamicFieldType:
      oneOf:
      - $ref: "#/components/schemas/DynamicFieldIpType"
      - $ref: "#/components/schemas/DynamicFieldByteType"
      - $ref: "#/components/schemas/DynamicFieldNumberType"
    UnprocessableEntityErrorObject:
      additionalProperties:
        type: string
      description: List of parameters and related errors
      nullable: true
      type: object
    UnprocessableEntityErrorArray:
      description: List of error messages
      items:
        items:
          type: string
        type: array
      type: array
    UnprocessableEntityErrorStringArray:
      description: List of error messages
      items:
        type: string
      type: array
    UnprocessableEntityErrorArrays:
      additionalProperties:
        items:
          type: string
        type: array
      description: List of error messages
      type: object
    DynamicFieldIpType:
      description: IPv4 or IPv6
      title: IP
      type: string
    DynamicFieldNumberType:
      title: Number
      type: number
    DynamicFieldByteType:
      format: byte
      title: Byte
      type: string
    MessageResponse:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    domains_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - custom_cname: custom_cname
          created_at: 2000-01-23T04:56:07.000+00:00
          type: full
          account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plan_level: 0
          transfer:
            incoming: true
            account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            owner_name: owner_name
            owner_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            domain: domain
            account_name: account_name
            time: 2000-01-23T04:56:07.000+00:00
          plan_duraition: 6
          dns_cloud: false
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cname_target: cname_target
          domain: domain
          name: name
          restriction:
          - paused
          - paused
          ns_keys:
          - ns_keys
          - ns_keys
          fingerprint_status: false
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          current_ns:
          - current_ns
          - current_ns
          status: initializing
        - custom_cname: custom_cname
          created_at: 2000-01-23T04:56:07.000+00:00
          type: full
          account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          plan_level: 0
          transfer:
            incoming: true
            account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            owner_name: owner_name
            owner_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            domain: domain
            account_name: account_name
            time: 2000-01-23T04:56:07.000+00:00
          plan_duraition: 6
          dns_cloud: false
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cname_target: cname_target
          domain: domain
          name: name
          restriction:
          - paused
          - paused
          ns_keys:
          - ns_keys
          - ns_keys
          fingerprint_status: false
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          current_ns:
          - current_ns
          - current_ns
          status: initializing
      properties:
        data:
          items:
            $ref: "#/components/schemas/Domain"
          type: array
    domains_store_422_response_errors:
      oneOf:
      - $ref: "#/components/schemas/UnprocessableEntityErrorStringArray"
      - $ref: "#/components/schemas/UnprocessableEntityErrorArray"
      - $ref: "#/components/schemas/UnprocessableEntityErrorArrays"
      - $ref: "#/components/schemas/UnprocessableEntityErrorObject"
    domains_store_422_response:
      example:
        message: message
        errors:
        - null
        - null
        status: false
      properties:
        status:
          default: false
          type: boolean
        message:
          type: string
        errors:
          $ref: "#/components/schemas/domains_store_422_response_errors"
      type: object
    domains_show_404_response:
      allOf:
      - $ref: "#/components/schemas/MessageResponse"
      example:
        status: false
      properties:
        status:
          default: false
          type: boolean
    domains_nameservers_check_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          ns_keys:
          - ns_keys
          - ns_keys
          ns_domain:
          - ns_domain
          - ns_domain
      properties:
        data:
          $ref: "#/components/schemas/NsDomain"
    domains_nameservers_deprecated_check_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          ns_status: true
          ns_keys:
          - ns_keys
          - ns_keys
          ns_domain:
          - ns_domain
          - ns_domain
      properties:
        data:
          $ref: "#/components/schemas/DeprecatedNs"
    domains_transfer_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - incoming: true
          account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          owner_name: owner_name
          owner_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain: domain
          account_name: account_name
          time: 2000-01-23T04:56:07.000+00:00
        - incoming: true
          account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          owner_name: owner_name
          owner_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          domain: domain
          account_name: account_name
          time: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: "#/components/schemas/DomainTransferData"
          type: array
    domains_claims_store_422_response:
      example:
        errors:
        - errors
        - errors
      properties:
        errors:
          items:
            type: string
          type: array
      type: object
    domains_claims_check_200_response:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    domains_claims_check_400_response:
      example:
        message: "[\"domain status should be pending\"]"
      properties:
        message:
          example: "[\"domain status should be pending\"]"
          type: string
      type: object
    plans_index_domain_parameter:
      anyOf:
      - example: example.com
        format: hostname
        type: string
      - format: uuid
        type: string
    domains_plans_violations_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          violations:
            enterprise:
            - enterprise
            - enterprise
            paygo:
            - paygo
            - paygo
            growth:
            - growth
            - growth
            basic:
            - basic
            - basic
            professional:
            - professional
            - professional
      properties:
        data:
          $ref: "#/components/schemas/Violations"
    domains_plans_usages_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          feature_usages:
          - feature_id: feature_id
            estimated_cost:
              period: monthly
              currency: IRT
              value: 0.8008281904610115
            usage: 6.027456183070403
            pricing:
              per_unit:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              flat:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              free_tier: 2
          - feature_id: feature_id
            estimated_cost:
              period: monthly
              currency: IRT
              value: 0.8008281904610115
            usage: 6.027456183070403
            pricing:
              per_unit:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              flat:
                metric_key: metric_key
                currency: currency
                value: 7.061401241503109
              free_tier: 2
          estimated_cost:
            period: monthly
            currency: IRT
            value: 0.8008281904610115
      properties:
        data:
          $ref: "#/components/schemas/Usages"
    dns_records_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - type: a
          value:
          - ip: 198.51.100.42
            port: 65535
            weight: 1000
            country: US
        - type: a
          value:
          - ip: 198.51.100.42
            port: 65535
            weight: 1000
            country: US
      properties:
        data:
          items:
            $ref: "#/components/schemas/DnsRecordGeneric"
          type: array
    purge_tags_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          domain_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
      properties:
        data:
          $ref: "#/components/schemas/DomainPurgeTags"
    load_balancers_regions_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region: LAH
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          region: LAH
      properties:
        data:
          items:
            $ref: "#/components/schemas/LoadBalancerRegion"
          type: array
    load_balancers_settings_update_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          protocol: auto
          max_fails: 9301.444243932576
          method: cluster_rr
          next_upstream_tcp: "off"
          keepalive: "off"
          fail_timeout: 45s
          next_upstream_tcp_codes:
            head:
            - 0.8008281904610115
            - 0.8008281904610115
            patch:
            - 7.061401241503109
            - 7.061401241503109
            post:
            - 1.4658129805029452
            - 1.4658129805029452
            get:
            - 6.027456183070403
            - 6.027456183070403
            options:
            - 2.3021358869347655
            - 2.3021358869347655
            delete:
            - 5.637376656633329
            - 5.637376656633329
            put:
            - 5.962133916683182
            - 5.962133916683182
      properties:
        data:
          $ref: "#/components/schemas/LoadBalancerSetting"
    load_balancers_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
        - time_slice: 0s
          method: failover
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: lb1
          description: description
          pools:
          - regions:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            method: cluster_rr
            monitoring_status: "off"
            keepalive: "off"
            next_upstream_tcp: "off"
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            priority: 0
            health_check:
              request_config:
                sent_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                path: path
                headers:
                  key: headers
                method: HEAD
                port: 39073
                allow_insecure: true
                follow_redirects: true
                expected_response:
                  codes:
                  - 5
                  - 5
                  headers:
                    key:
                    - headers
                    - headers
                  body: body
                  expected_headers:
                  - value:
                    - value
                    - value
                    key: key
                  - value:
                    - value
                    - value
                    key: key
                timeout: 6907
            next_upstream_tcp_codes:
              head:
              - 0.8008281904610115
              - 0.8008281904610115
              patch:
              - 7.061401241503109
              - 7.061401241503109
              post:
              - 1.4658129805029452
              - 1.4658129805029452
              get:
              - 6.027456183070403
              - 6.027456183070403
              options:
              - 2.3021358869347655
              - 2.3021358869347655
              delete:
              - 5.637376656633329
              - 5.637376656633329
              put:
              - 5.962133916683182
              - 5.962133916683182
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            origins:
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
          - regions:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            method: cluster_rr
            monitoring_status: "off"
            keepalive: "off"
            next_upstream_tcp: "off"
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            priority: 0
            health_check:
              request_config:
                sent_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                path: path
                headers:
                  key: headers
                method: HEAD
                port: 39073
                allow_insecure: true
                follow_redirects: true
                expected_response:
                  codes:
                  - 5
                  - 5
                  headers:
                    key:
                    - headers
                    - headers
                  body: body
                  expected_headers:
                  - value:
                    - value
                    - value
                    key: key
                  - value:
                    - value
                    - value
                    key: key
                timeout: 6907
            next_upstream_tcp_codes:
              head:
              - 0.8008281904610115
              - 0.8008281904610115
              patch:
              - 7.061401241503109
              - 7.061401241503109
              post:
              - 1.4658129805029452
              - 1.4658129805029452
              get:
              - 6.027456183070403
              - 6.027456183070403
              options:
              - 2.3021358869347655
              - 2.3021358869347655
              delete:
              - 5.637376656633329
              - 5.637376656633329
              put:
              - 5.962133916683182
              - 5.962133916683182
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            origins:
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
        - time_slice: 0s
          method: failover
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: lb1
          description: description
          pools:
          - regions:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            method: cluster_rr
            monitoring_status: "off"
            keepalive: "off"
            next_upstream_tcp: "off"
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            priority: 0
            health_check:
              request_config:
                sent_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                path: path
                headers:
                  key: headers
                method: HEAD
                port: 39073
                allow_insecure: true
                follow_redirects: true
                expected_response:
                  codes:
                  - 5
                  - 5
                  headers:
                    key:
                    - headers
                    - headers
                  body: body
                  expected_headers:
                  - value:
                    - value
                    - value
                    key: key
                  - value:
                    - value
                    - value
                    key: key
                timeout: 6907
            next_upstream_tcp_codes:
              head:
              - 0.8008281904610115
              - 0.8008281904610115
              patch:
              - 7.061401241503109
              - 7.061401241503109
              post:
              - 1.4658129805029452
              - 1.4658129805029452
              get:
              - 6.027456183070403
              - 6.027456183070403
              options:
              - 2.3021358869347655
              - 2.3021358869347655
              delete:
              - 5.637376656633329
              - 5.637376656633329
              put:
              - 5.962133916683182
              - 5.962133916683182
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            origins:
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
          - regions:
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            - name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              region: LAH
            method: cluster_rr
            monitoring_status: "off"
            keepalive: "off"
            next_upstream_tcp: "off"
            description: description
            created_at: 2000-01-23T04:56:07.000+00:00
            priority: 0
            health_check:
              request_config:
                sent_headers:
                - value: value
                  key: key
                - value: value
                  key: key
                path: path
                headers:
                  key: headers
                method: HEAD
                port: 39073
                allow_insecure: true
                follow_redirects: true
                expected_response:
                  codes:
                  - 5
                  - 5
                  headers:
                    key:
                    - headers
                    - headers
                  body: body
                  expected_headers:
                  - value:
                    - value
                    - value
                    key: key
                  - value:
                    - value
                    - value
                    key: key
                timeout: 6907
            next_upstream_tcp_codes:
              head:
              - 0.8008281904610115
              - 0.8008281904610115
              patch:
              - 7.061401241503109
              - 7.061401241503109
              post:
              - 1.4658129805029452
              - 1.4658129805029452
              get:
              - 6.027456183070403
              - 6.027456183070403
              options:
              - 2.3021358869347655
              - 2.3021358869347655
              delete:
              - 5.637376656633329
              - 5.637376656633329
              put:
              - 5.962133916683182
              - 5.962133916683182
            updated_at: 2000-01-23T04:56:07.000+00:00
            name: name
            origins:
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            - protocol: auto
              address: address
              updated_at: 2000-01-23T04:56:07.000+00:00
              health_check_status: "off"
              port: 39500
              name: name
              weight: 147
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              status: true
              host_header: host_header
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/LoadBalancer"
          type: array
    load_balancers_pools_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
        - regions:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          method: cluster_rr
          monitoring_status: "off"
          keepalive: "off"
          next_upstream_tcp: "off"
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          health_check:
            request_config:
              sent_headers:
              - value: value
                key: key
              - value: value
                key: key
              path: path
              headers:
                key: headers
              method: HEAD
              port: 39073
              allow_insecure: true
              follow_redirects: true
              expected_response:
                codes:
                - 5
                - 5
                headers:
                  key:
                  - headers
                  - headers
                body: body
                expected_headers:
                - value:
                  - value
                  - value
                  key: key
                - value:
                  - value
                  - value
                  key: key
              timeout: 6907
          next_upstream_tcp_codes:
            head:
            - 0.8008281904610115
            - 0.8008281904610115
            patch:
            - 7.061401241503109
            - 7.061401241503109
            post:
            - 1.4658129805029452
            - 1.4658129805029452
            get:
            - 6.027456183070403
            - 6.027456183070403
            options:
            - 2.3021358869347655
            - 2.3021358869347655
            delete:
            - 5.637376656633329
            - 5.637376656633329
            put:
            - 5.962133916683182
            - 5.962133916683182
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          origins:
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
        - regions:
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          - name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            region: LAH
          method: cluster_rr
          monitoring_status: "off"
          keepalive: "off"
          next_upstream_tcp: "off"
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          priority: 0
          health_check:
            request_config:
              sent_headers:
              - value: value
                key: key
              - value: value
                key: key
              path: path
              headers:
                key: headers
              method: HEAD
              port: 39073
              allow_insecure: true
              follow_redirects: true
              expected_response:
                codes:
                - 5
                - 5
                headers:
                  key:
                  - headers
                  - headers
                body: body
                expected_headers:
                - value:
                  - value
                  - value
                  key: key
                - value:
                  - value
                  - value
                  key: key
              timeout: 6907
          next_upstream_tcp_codes:
            head:
            - 0.8008281904610115
            - 0.8008281904610115
            patch:
            - 7.061401241503109
            - 7.061401241503109
            post:
            - 1.4658129805029452
            - 1.4658129805029452
            get:
            - 6.027456183070403
            - 6.027456183070403
            options:
            - 2.3021358869347655
            - 2.3021358869347655
            delete:
            - 5.637376656633329
            - 5.637376656633329
            put:
            - 5.962133916683182
            - 5.962133916683182
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          origins:
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          - protocol: auto
            address: address
            updated_at: 2000-01-23T04:56:07.000+00:00
            health_check_status: "off"
            port: 39500
            name: name
            weight: 147
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            status: true
            host_header: host_header
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/LoadBalancerPool"
          type: array
    load_balancers_pools_origins_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
        - protocol: auto
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          health_check_status: "off"
          port: 39500
          name: name
          weight: 147
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
          host_header: host_header
        - protocol: auto
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          health_check_status: "off"
          port: 39500
          name: name
          weight: 147
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          status: true
          host_header: host_header
      properties:
        data:
          items:
            $ref: "#/components/schemas/LoadBalancerOrigin"
          type: array
    page_rules_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - url_type: default
          created_at: 2000-01-23T04:56:07.000+00:00
          is_protected: false
          fw_status: true
          url: url
          cache_level: query_string
          slink_status: false
          domain_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          acceleration:
            extensions:
            - css
            - js
            status: inherit
          waf_status: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          seq: 0
          status: true
        - url_type: default
          created_at: 2000-01-23T04:56:07.000+00:00
          is_protected: false
          fw_status: true
          url: url
          cache_level: query_string
          slink_status: false
          domain_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          acceleration:
            extensions:
            - css
            - js
            status: inherit
          waf_status: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          seq: 0
          status: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/PageRuleSummary"
          type: array
    page_rules_diff_update_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          load_balancer: load_balancer
          res_custom_headers:
          - name: name
            is_var: true
            value: value
          - name: name
            is_var: true
            value: value
          upstream_timeout:
            connect_timeout: 0
            send_timeout: 1
            read_timeout: 6
          cache_args: true
          fw_status: true
          cache_ignore_sc: true
          cache_level: "off"
          acceleration:
            extensions:
            - css
            - js
            status: inherit
          cors_header: cors_header
          cluster_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          cache_cookie: cache_cookie
          cluster_status: true
          cache_device_type: true
          slink_secret: slink_secret
          cache_arg: filter&sort
          slink_md5:
          - remote_addr
          - remote_addr
          cache_ignore_cc: true
          edge_compute_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          req_hide_headers:
          - req_hide_headers
          - req_hide_headers
          redirect:
            status_code: 0
            enable: true
            url: http://example.com/aeiou
          cache_any: 0s
          req_custom_headers:
          - name: name
            is_var: true
            value: value
          - name: name
            is_var: true
            value: value
          url: url
          res_hide_headers:
          - res_hide_headers
          - res_hide_headers
          slink_status: true
          cache_200: 0s
          waf_status: true
          cache_scheme: true
          image_resize:
            mode: freely
            width_by: width
            height_by: height
            status: "true"
          custom_host_header: custom_host_header
          cache_browser: default
          status: true
          cache_ignore_vary: true
          rewrite_url: rewrite_url
      properties:
        data:
          $ref: "#/components/schemas/PageRuleDiff"
    log_forwarders_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - connection_type: connection_type
          name: name
          description: description
          id: id
          type: type
          status: true
        - connection_type: connection_type
          name: name
          description: description
          id: id
          type: type
          status: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/LogForwarderSummary"
          type: array
    metric_exporters_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - domain: domain
          name: name
          interval: 0
          id: id
          type: type
          url: url
          status: true
        - domain: domain
          name: name
          interval: 0
          id: id
          type: type
          url: url
          status: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/MetricExporterSummary"
          type: array
    transport_layer_proxies_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - app_name: app_name
          servers:
          - address: address
            fall: 1
            port: 6
            inter: 5
            weight: 15
            check: enabled
            rise: 1
          - address: address
            fall: 1
            port: 6
            inter: 5
            weight: 15
            check: enabled
            rise: 1
          port: 5249
          domain: sub.example.com
          ip: ip
          proxy_protocol: "false"
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          firewalls:
          - access: allow
            name: name
            match: IR
            description: description
            active: true
            type: geo
          - access: allow
            name: name
            match: IR
            description: description
            active: true
            type: geo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          firewall_default_action: allow
          balance_algorithm: roundrobin
        - app_name: app_name
          servers:
          - address: address
            fall: 1
            port: 6
            inter: 5
            weight: 15
            check: enabled
            rise: 1
          - address: address
            fall: 1
            port: 6
            inter: 5
            weight: 15
            check: enabled
            rise: 1
          port: 5249
          domain: sub.example.com
          ip: ip
          proxy_protocol: "false"
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          firewalls:
          - access: allow
            name: name
            match: IR
            description: description
            active: true
            type: geo
          - access: allow
            name: name
            match: IR
            description: description
            active: true
            type: geo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          firewall_default_action: allow
          balance_algorithm: roundrobin
      properties:
        data:
          items:
            $ref: "#/components/schemas/TransportLayerProxy"
          type: array
    troubleshoots_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
        - created_at: created_at
          details:
          - details: details
            id: root_dns_record
            status: safe
          - details: details
            id: root_dns_record
            status: safe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - created_at: created_at
          details:
          - details: details
            id: root_dns_record
            status: safe
          - details: details
            id: root_dns_record
            status: safe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          items:
            $ref: "#/components/schemas/Troubleshoot"
          type: array
    troubleshoots_store_201_response:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          created_at: created_at
          details:
          - details: details
            id: root_dns_record
            status: safe
          - details: details
            id: root_dns_record
            status: safe
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: "#/components/schemas/Troubleshoot"
    reports_visitors_high_request_ips_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - ip: HighRequestedIp_ip
          request_count: 0
        - ip: HighRequestedIp_ip
          request_count: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/HighRequestedIp"
          type: array
    reports_error_log_details_200_response:
      example:
        data: "{}"
      properties:
        data:
          type: object
      type: object
    reports_attacks_show_200_response:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
          charts:
            attacks:
              series:
              - data:
                - 6
                - 6
                name: reports.attack.attacks
              - data:
                - 6
                - 6
                name: reports.attack.attacks
              categories:
              - 2000-01-23T04:56:07.000+00:00
              - 2000-01-23T04:56:07.000+00:00
              title: reports.attack
          statistics:
            Attacks:
              total_attacks: 0
              top_attacks: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: "#/components/schemas/AttackReport"
    reports_attacks_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - alerts:
          - alerts
          - alerts
          method: GET
          cookie:
          - cookie
          - cookie
          attacker_country: attacker_country
          uri_args: uri_args
          attacker_ip: attacker_ip
          host:
          - host
          - host
          uri: https://openapi-generator.tech
          user_agent:
          - user_agent
          - user_agent
          timestamp: 2000-01-23T04:56:07.000+00:00
        - alerts:
          - alerts
          - alerts
          method: GET
          cookie:
          - cookie
          - cookie
          attacker_country: attacker_country
          uri_args: uri_args
          attacker_ip: attacker_ip
          host:
          - host
          - host
          uri: https://openapi-generator.tech
          user_agent:
          - user_agent
          - user_agent
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: "#/components/schemas/AttackReportItem"
          type: array
    reports_attacks_attackers_200_response_data_inner:
      example:
        ip: ip
        count: 0
      properties:
        ip:
          format: ipv4
          type: string
        count:
          type: integer
      type: object
    reports_attacks_attackers_200_response:
      allOf:
      - $ref: "#/components/schemas/DataResponse"
      example:
        data:
        - ip: ip
          count: 0
        - ip: ip
          count: 0
      properties:
        data:
          items:
            $ref: "#/components/schemas/reports_attacks_attackers_200_response_data_inner"
          type: array
    firewall_settings_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          default_action_details: "{}"
      properties:
        data:
          $ref: "#/components/schemas/FirewallSettingsView"
    firewall_rules_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - action_details: "{}"
        - action_details: "{}"
      properties:
        data:
          items:
            $ref: "#/components/schemas/FirewallRuleView"
          type: array
    waf_rules_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - is_enabled: true
          url_pattern: url_pattern
          sources:
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          action: protect
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - is_enabled: true
          url_pattern: url_pattern
          sources:
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          action: protect
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          items:
            $ref: "#/components/schemas/WafRule"
          type: array
    waf_packages_store_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          is_enabled: true
          params: "{}"
      properties:
        data:
          $ref: "#/components/schemas/DomainWafPackage"
    waf_packages_update_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          is_enabled: true
          rulesets:
          - name: name
            rules:
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            id: id
          - name: name
            rules:
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            - name: name
              id: id
              params:
                score: 8
                severity: 7
            id: id
          params: "{}"
      properties:
        data:
          $ref: "#/components/schemas/DomainWafPackageDetails"
    ddos_settings_update_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          is_enabled: true
          secret_key: secret_key
          site_key: site_key
          https_only: true
          captcha_service: recaptcha
          ttl: 0
          preflight:
            access_credentials: access_credentials
            access_methods:
            - GET
            - GET
            access_expose_headers: access_expose_headers
            access_origin: access_origin
            access_headers: access_headers
          protection_mode: "false"
      properties:
        data:
          $ref: "#/components/schemas/DdosSettings"
    ddos_rules_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - is_enabled: true
          url_pattern: url_pattern
          sources:
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          description: description
          action: passthrough
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - is_enabled: true
          url_pattern: url_pattern
          sources:
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          - 1.2.3.4/32
          description: description
          action: passthrough
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          items:
            $ref: "#/components/schemas/DdosRule"
          type: array
    rate_limiting_settings_update_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          exclude_sources:
          - 1.2.3.4/32
          - 1.2.3.4/32
          ddos_detection: true
      properties:
        data:
          $ref: "#/components/schemas/RateLimitSettings"
    rate_limiting_rules_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - action_details: "{}"
        - action_details: "{}"
      properties:
        data:
          items:
            $ref: "#/components/schemas/RateLimitRuleView"
          type: array
    rate_limiting_rules_update_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          action_details: "{}"
      properties:
        data:
          $ref: "#/components/schemas/RateLimitRuleView"
    apps_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - install_json: "{}"
          short_description: short_description
          like_by_user: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          pictures:
          - http://example.com/aeiou
          - http://example.com/aeiou
          like_stats:
            likes_count: 6
            dislikes_count: 1
          support_email: support_email
          like_by_account: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          vendor: vendor
          name: name
          rank: 5
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          categories:
          - name: name
            active: true
            name_translation:
              en:
                name: name
              fa:
                name: name
            id: id
            order: 0
            applications:
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
          - name: name
            active: true
            name_translation:
              en:
                name: name
              fa:
                name: name
            id: id
            order: 0
            applications:
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
          slug: slug
          status: published
        - install_json: "{}"
          short_description: short_description
          like_by_user: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          pictures:
          - http://example.com/aeiou
          - http://example.com/aeiou
          like_stats:
            likes_count: 6
            dislikes_count: 1
          support_email: support_email
          like_by_account: true
          updated_at: 2000-01-23T04:56:07.000+00:00
          vendor: vendor
          name: name
          rank: 5
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          categories:
          - name: name
            active: true
            name_translation:
              en:
                name: name
              fa:
                name: name
            id: id
            order: 0
            applications:
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
          - name: name
            active: true
            name_translation:
              en:
                name: name
              fa:
                name: name
            id: id
            order: 0
            applications:
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
            - name: name
              description: description
              logo: logo
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              slug: slug
          slug: slug
          status: published
      properties:
        data:
          items:
            $ref: "#/components/schemas/CdnApp"
          type: array
    domains_apps_store_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          domain_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updated_at: 2000-01-23T04:56:07.000+00:00
          options: "{}"
          active: true
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          application_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: "#/components/schemas/DomainCdnApp"
    apps_category_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - name: name
          active: true
          name_translation:
            en:
              name: name
            fa:
              name: name
          id: id
          order: 0
          applications:
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
        - name: name
          active: true
          name_translation:
            en:
              name: name
            fa:
              name: name
          id: id
          order: 0
          applications:
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
      properties:
        data:
          items:
            $ref: "#/components/schemas/ApplicationCategory"
          type: array
    apps_category_show_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          name: name
          active: true
          name_translation:
            en:
              name: name
            fa:
              name: name
          id: id
          order: 0
          applications:
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
          - name: name
            description: description
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
      properties:
        data:
          $ref: "#/components/schemas/ApplicationCategory"
    ssl_cert_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
        - key_type: ec
          updated_at: 2000-01-23T04:56:07.000+00:00
          is_revoked: true
          expiry_date: 2000-01-23T04:56:07.000+00:00
          active: false
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: arvan
          issuer: issuer
          domain_names:
          - domain_names
          - domain_names
        - key_type: ec
          updated_at: 2000-01-23T04:56:07.000+00:00
          is_revoked: true
          expiry_date: 2000-01-23T04:56:07.000+00:00
          active: false
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: arvan
          issuer: issuer
          domain_names:
          - domain_names
          - domain_names
      properties:
        data:
          items:
            $ref: "#/components/schemas/Certificate"
          type: array
    ssl_cert_get_200_response_data:
      allOf:
      - $ref: "#/components/schemas/Certificate"
      example:
        certificate: certificate
        private_key: private_key
      properties:
        certificate:
          description: The certificate in base64-encoded
          format: base64
          readOnly: true
          type: string
        private_key:
          description: The private key in base64-encoded
          format: base64
          readOnly: true
          type: string
    ssl_cert_get_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          certificate: certificate
          private_key: private_key
      properties:
        data:
          $ref: "#/components/schemas/ssl_cert_get_200_response_data"
    ssl_cert_order_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          expiry_date: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order_id: order_id
          errors:
            detail: Some of the identifiers requested were rejected
            type: urn:ietf:params:acme:error:malformed
            status: status
            subproblems:
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
          status: unprocessed
          domain_names:
          - domain_names
          - domain_names
        - updated_at: 2000-01-23T04:56:07.000+00:00
          expiry_date: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order_id: order_id
          errors:
            detail: Some of the identifiers requested were rejected
            type: urn:ietf:params:acme:error:malformed
            status: status
            subproblems:
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
          status: unprocessed
          domain_names:
          - domain_names
          - domain_names
      properties:
        data:
          items:
            $ref: "#/components/schemas/CertificateOrder"
          type: array
    ssl_cert_issue_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
          updated_at: 2000-01-23T04:56:07.000+00:00
          expiry_date: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order_id: order_id
          errors:
            detail: Some of the identifiers requested were rejected
            type: urn:ietf:params:acme:error:malformed
            status: status
            subproblems:
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
            - identifier:
                type: _example.org
                value: dns
              detail: Invalid underscore in DNS name "_example.org"
              type: urn:ietf:params:acme:error:malformed
          status: unprocessed
          domain_names:
          - domain_names
          - domain_names
      properties:
        data:
          $ref: "#/components/schemas/CertificateOrder"
    account_certificate_product_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - has_wildcard: true
          price: 6.0274563
          name: name
          limit: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_multi: true
        - has_wildcard: true
          price: 6.0274563
          name: name
          limit: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          is_multi: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/CertificateProduct"
          type: array
    account_certificate_order_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - product: product
          updated_at: 2000-01-23T04:56:07.000+00:00
          is_revoked: true
          expiry_date: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order_id: order_id
          errors: "{}"
          status: status
          domain_names:
          - domain_names
          - domain_names
        - product: product
          updated_at: 2000-01-23T04:56:07.000+00:00
          is_revoked: true
          expiry_date: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order_id: order_id
          errors: "{}"
          status: status
          domain_names:
          - domain_names
          - domain_names
      properties:
        data:
          items:
            $ref: "#/components/schemas/AccountCertificateOrder"
          type: array
    account_certificate_install_200_response_warnings_inner:
      example:
        reason: reason
        domain: domain
      properties:
        domain:
          type: string
        reason:
          type: string
      type: object
    account_certificate_install_200_response:
      example:
        warnings:
        - reason: reason
          domain: domain
        - reason: reason
          domain: domain
        message: message
      properties:
        message:
          type: string
        warnings:
          items:
            $ref: "#/components/schemas/account_certificate_install_200_response_warnings_inner"
          type: array
      type: object
    active_health_check_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
        - request_config: "{}"
        - request_config: "{}"
      properties:
        data:
          items:
            $ref: "#/components/schemas/HealthCheckView"
          type: array
    health_checks_regions_index_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        data:
          items:
            $ref: "#/components/schemas/HealthCheckZoneName"
          type: array
    active_health_check_reports_summary_200_response:
      allOf:
      - $ref: "#/components/schemas/DataWithMessageResponse"
      example:
        data:
        - total: 0
          zone: zone
          details:
          - date: date
            status: true
          - date: date
            status: true
          failed: 6
          status: true
        - total: 0
          zone: zone
          details:
          - date: date
            status: true
          - date: date
            status: true
          failed: 6
          status: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/HealthCheckReportSummary"
          type: array
    active_health_check_reports_details_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - date: date
          upstream: upstream
          zone: zone
          message: message
          status: true
        - date: date
          upstream: upstream
          zone: zone
          message: message
          status: true
      properties:
        data:
          items:
            $ref: "#/components/schemas/HealthCheckReportDetail"
          type: array
    lists_index_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          scope: public
          values:
          - created_at: created_at
            value: null
            desc: desc
          - created_at: created_at
            value: null
            desc: desc
          name: name
          namespace: namespace
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          allowed_plans:
          - 0
          - 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: ip
        - updated_at: 2000-01-23T04:56:07.000+00:00
          scope: public
          values:
          - created_at: created_at
            value: null
            desc: desc
          - created_at: created_at
            value: null
            desc: desc
          name: name
          namespace: namespace
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          allowed_plans:
          - 0
          - 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: ip
      properties:
        data:
          items:
            $ref: "#/components/schemas/DynamicField"
          type: array
    reports_aggregated_details_200_response:
      allOf:
      - $ref: "#/components/schemas/PaginatedResponse"
      example:
        data:
        - pop: Tehran - MCI
          total_downstream: 120
          domain: domain
          total_upstream: 120
          total_requests: 1000
          asn: 67352
        - pop: Tehran - MCI
          total_downstream: 120
          domain: domain
          total_upstream: 120
          total_requests: 1000
          asn: 67352
      properties:
        data:
          items:
            $ref: "#/components/schemas/AggregatedReportsResponse"
          type: array
    reports_aggregated_charts_200_response_data:
      example:
        charts:
          series:
          - data:
            - 1200
            - 1200
            name: Tehran - MCI
          - data:
            - 1200
            - 1200
            name: Tehran - MCI
          categories:
          - 2023-12-13T10:00:00Z
          - 2023-12-13T10:00:00Z
          title: title
      properties:
        charts:
          $ref: "#/components/schemas/AggregatedReportsChartsResponse"
    reports_aggregated_charts_200_response:
      example:
        data:
          charts:
            series:
            - data:
              - 1200
              - 1200
              name: Tehran - MCI
            - data:
              - 1200
              - 1200
              name: Tehran - MCI
            categories:
            - 2023-12-13T10:00:00Z
            - 2023-12-13T10:00:00Z
            title: title
      properties:
        data:
          $ref: "#/components/schemas/reports_aggregated_charts_200_response_data"
    reports_aggregated_filters_200_response:
      example:
        data:
          pops:
          - pop: thr-mci
            label: Tehran - MCI
          - pop: thr-mci
            label: Tehran - MCI
          asns:
          - 6439
          - 6439
      properties:
        data:
          $ref: "#/components/schemas/AggregatedReportsFilterResponse"
    CertificateOrderIssueRequest_domains_inner:
      example:
        domain: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        domain_names:
        - domain_names
        - domain_names
      properties:
        domain:
          format: uuid
          type: string
        domain_names:
          items:
            type: string
          type: array
      type: object
    SavedTrafficsCharts_request_inner:
      properties:
        name:
          enum:
          - reports.request.hit
          - reports.request.miss
          type: string
        "y":
          type: integer
      type: object
    SavedTrafficsCharts_traffic_inner:
      properties:
        name:
          enum:
          - reports.traffic.hit
          - reports.traffic.miss
          type: string
        "y":
          type: integer
      type: object
    SavedTrafficsStatistics_traffic:
      properties:
        saved:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      type: object
    TransportLayerProxyTrafficCharts_traffics_series_inner:
      properties:
        name:
          enum:
          - reports.traffics.bytes_out
          - reports.traffics.bytes_in
          - reports.traffics.connections
          type: string
        data:
          items:
            format: int64
            type: integer
          type: array
      type: object
    TransportLayerProxyTrafficCharts_traffics:
      properties:
        title:
          enum:
          - reports.traffics
          type: string
        categories:
          items:
            format: date-time
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/TransportLayerProxyTrafficCharts_traffics_series_inner"
          type: array
      type: object
    TrafficCharts_requests_series_inner:
      example:
        data:
        - 5
        - 5
        name: reports.requests.total
      properties:
        name:
          enum:
          - reports.requests.total
          - reports.requests.saved
          type: string
        data:
          items:
            format: int64
            type: integer
          type: array
      type: object
    TrafficCharts_requests:
      example:
        series:
        - data:
          - 5
          - 5
          name: reports.requests.total
        - data:
          - 5
          - 5
          name: reports.requests.total
        categories:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        title: reports.requests
      properties:
        title:
          enum:
          - reports.requests
          type: string
        categories:
          items:
            format: date-time
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/TrafficCharts_requests_series_inner"
          type: array
      type: object
    TrafficCharts_traffics_series_inner:
      example:
        data:
        - 5
        - 5
        name: reports.traffics.total
      properties:
        name:
          enum:
          - reports.traffics.total
          - reports.traffics.saved
          type: string
        data:
          items:
            format: int64
            type: integer
          type: array
      type: object
    TrafficCharts_traffics:
      example:
        series:
        - data:
          - 5
          - 5
          name: reports.traffics.total
        - data:
          - 5
          - 5
          name: reports.traffics.total
        categories:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        title: reports.traffics
      properties:
        title:
          enum:
          - reports.traffics
          type: string
        categories:
          items:
            format: date-time
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/TrafficCharts_traffics_series_inner"
          type: array
      type: object
    TrafficStatistics_traffics:
      example:
        bypass: 6
        total: 1
        top: 2000-01-23T04:56:07.000+00:00
        saved: 0
      properties:
        saved:
          format: int64
          type: integer
        bypass:
          format: int64
          type: integer
        top:
          format: date-time
          type: string
        total:
          format: int64
          type: integer
      required:
      - saved
      - top
      - total
      type: object
    VisitorsStatistics_visitors:
      example:
        total_visitors: 0
        top_visitors: 2000-01-23T04:56:07.000+00:00
      properties:
        top_visitors:
          format: date-time
          type: string
        total_visitors:
          format: int64
          type: integer
      required:
      - top_visitors
      - total_visitors
      type: object
    VisitorsCharts_visitors_series_inner:
      example:
        data:
        - 6
        - 6
        name: reports.visitor.visitors
      properties:
        name:
          enum:
          - reports.visitor.visitors
          type: string
        data:
          items:
            format: int64
            type: integer
          type: array
      type: object
    VisitorsCharts_visitors:
      example:
        series:
        - data:
          - 6
          - 6
          name: reports.visitor.visitors
        - data:
          - 6
          - 6
          name: reports.visitor.visitors
        categories:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        title: reports.visitor
      properties:
        title:
          enum:
          - reports.visitor
          type: string
        categories:
          items:
            format: date-time
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/VisitorsCharts_visitors_series_inner"
          type: array
      type: object
    TrafficsMap_charts:
      example:
        traffics:
          key:
            fillKey: 1
            name: name
            value: 5
        requests:
          key:
            IRN:
              fillKey: 4
              name: Iran (Islamic Republic of)
              value: 12456789
            description: A dictionay which maps country codes to fill and value
      properties:
        requests:
          additionalProperties:
            $ref: "#/components/schemas/CountryRequestChart"
          type: object
        traffics:
          additionalProperties:
            $ref: "#/components/schemas/CountryTrafficChart"
          type: object
      type: object
    HighRequestedIp_ip:
      anyOf:
      - format: ipv4
        type: string
      - format: ipv6
        type: string
    ResponseTime_charts_ir_series_inner:
      example:
        data:
        - 0.8008281904610115
        - 0.8008281904610115
        name: reports.response_time.Server
      properties:
        name:
          enum:
          - reports.response_time.Server
          type: string
        data:
          items:
            format: double
            type: number
          type: array
      type: object
    ResponseTime_charts_ir:
      example:
        series:
        - data:
          - 0.8008281904610115
          - 0.8008281904610115
          name: reports.response_time.Server
        - data:
          - 0.8008281904610115
          - 0.8008281904610115
          name: reports.response_time.Server
        categories:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        title: reports.response_time
      properties:
        title:
          enum:
          - reports.response_time
          type: string
        categories:
          items:
            format: date-time
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/ResponseTime_charts_ir_series_inner"
          type: array
      type: object
    ResponseTime_charts:
      example:
        ir:
          series:
          - data:
            - 0.8008281904610115
            - 0.8008281904610115
            name: reports.response_time.Server
          - data:
            - 0.8008281904610115
            - 0.8008281904610115
            name: reports.response_time.Server
          categories:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          title: reports.response_time
      properties:
        ir:
          $ref: "#/components/schemas/ResponseTime_charts_ir"
      type: object
    StatusCodeReport_statistics_status_codes:
      example:
        "4xx_sum": 1
        "3xx_sum": 6
        "5xx_sum": 5
        "2xx_sum": 0
      properties:
        "2xx_sum":
          format: int64
          type: integer
        "3xx_sum":
          format: int64
          type: integer
        "4xx_sum":
          format: int64
          type: integer
        "5xx_sum":
          format: int64
          type: integer
      type: object
    StatusCodeReport_statistics:
      example:
        status_codes:
          "4xx_sum": 1
          "3xx_sum": 6
          "5xx_sum": 5
          "2xx_sum": 0
      properties:
        status_codes:
          $ref: "#/components/schemas/StatusCodeReport_statistics_status_codes"
      type: object
    StatusCodeReport_charts_status_code_series_inner:
      example:
        data:
        - 5.637376656633329
        - 5.637376656633329
        name: report.status_code.2xx
      properties:
        name:
          enum:
          - report.status_code.2xx
          - report.status_code.3xx
          - report.status_code.4xx
          - report.status_code.4xx
          type: string
        data:
          items:
            format: double
            type: number
          type: array
      type: object
    StatusCodeReport_charts_status_code:
      example:
        series:
        - data:
          - 5.637376656633329
          - 5.637376656633329
          name: report.status_code.2xx
        - data:
          - 5.637376656633329
          - 5.637376656633329
          name: report.status_code.2xx
        name: status_code
        categories:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          enum:
          - status_code
          type: string
        categories:
          items:
            format: date-time
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/StatusCodeReport_charts_status_code_series_inner"
          type: array
      type: object
    StatusCodeReport_charts:
      example:
        status_code:
          series:
          - data:
            - 5.637376656633329
            - 5.637376656633329
            name: report.status_code.2xx
          - data:
            - 5.637376656633329
            - 5.637376656633329
            name: report.status_code.2xx
          name: status_code
          categories:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
      properties:
        status_code:
          $ref: "#/components/schemas/StatusCodeReport_charts_status_code"
      type: object
    StatusCodeSummary_charts_status_code_inner:
      example:
        name: name
        "y": 0
      properties:
        name:
          type: string
        "y":
          type: integer
      type: object
    StatusCodeSummary_charts:
      example:
        status_code:
        - name: name
          "y": 0
        - name: name
          "y": 0
      properties:
        status_code:
          items:
            $ref: "#/components/schemas/StatusCodeSummary_charts_status_code_inner"
          type: array
      type: object
    ErrorLog_upstreams_inner:
      example:
        address: address
        count: 6
      properties:
        address:
          description: The upstream's address
          type: string
        count:
          description: Error count per upstream
          format: int64
          type: integer
      type: object
    ErrorLogChart_statistics:
      example:
        status_codes:
          key: ""
      properties:
        status_codes:
          additionalProperties: true
          description: "<key, value> where key is error and value is its count"
          type: object
      type: object
    ErrorLogChart_charts_status_code_series_inner:
      example:
        data:
        - 0
        - 0
        name: name
      properties:
        name:
          description: The error message
          type: string
        data:
          items:
            format: int64
            type: integer
          type: array
      type: object
    ErrorLogChart_charts_status_code:
      example:
        series:
        - data:
          - 0
          - 0
          name: name
        - data:
          - 0
          - 0
          name: name
        categories:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        title: reports.status_code
      properties:
        title:
          enum:
          - reports.status_code
          type: string
        categories:
          items:
            format: date-time
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/ErrorLogChart_charts_status_code_series_inner"
          type: array
      type: object
    ErrorLogChart_charts:
      example:
        status_code:
          series:
          - data:
            - 0
            - 0
            name: name
          - data:
            - 0
            - 0
            name: name
          categories:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          title: reports.status_code
      properties:
        status_code:
          $ref: "#/components/schemas/ErrorLogChart_charts_status_code"
      type: object
    DnsRequestReport_statistics:
      example:
        total: 0
        top: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          format: int64
          type: integer
        top:
          format: date-time
          type: string
      type: object
    DnsRequestReport_charts_requests_series_inner:
      example:
        data:
        - 6
        - 6
        name: reports.requests.request
      properties:
        name:
          enum:
          - reports.requests.request
          type: string
        data:
          items:
            format: int64
            type: integer
          type: array
      type: object
    DnsRequestReport_charts_requests:
      example:
        series:
        - data:
          - 6
          - 6
          name: reports.requests.request
        - data:
          - 6
          - 6
          name: reports.requests.request
        categories:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        title: reports.requests
      properties:
        title:
          enum:
          - reports.requests
          type: string
        categories:
          items:
            format: date-time
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/DnsRequestReport_charts_requests_series_inner"
          type: array
      type: object
    DnsRequestReport_charts:
      example:
        requests:
          series:
          - data:
            - 6
            - 6
            name: reports.requests.request
          - data:
            - 6
            - 6
            name: reports.requests.request
          categories:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          title: reports.requests
      properties:
        requests:
          $ref: "#/components/schemas/DnsRequestReport_charts_requests"
      type: object
    DnsGeoReport_charts_requests_value:
      properties:
        fillKey:
          format: int64
          type: integer
        name:
          type: string
        value:
          format: int64
          type: integer
      type: object
    DnsGeoReport_charts:
      example:
        requests:
          IRN:
            fillKey: 4
            name: Iran (Islamic Republic of)
            value: 12456789
      properties:
        requests:
          additionalProperties:
            $ref: "#/components/schemas/DnsGeoReport_charts_requests_value"
          description: A dictionay which maps country codes to fill and value
          example:
            IRN:
              fillKey: 4
              name: Iran (Islamic Republic of)
              value: 12456789
          type: object
      type: object
    DnsGeoReport_lists_inner:
      example:
        country: country
        code: code
        name: name
        requests: 0
      properties:
        country:
          type: string
        name:
          type: string
        code:
          type: string
        requests:
          format: int64
          type: integer
      type: object
    AttackReport_statistics_Attacks:
      example:
        total_attacks: 0
        top_attacks: 2000-01-23T04:56:07.000+00:00
      properties:
        total_attacks:
          format: int64
          type: integer
        top_attacks:
          format: date-time
          type: string
      type: object
    AttackReport_statistics:
      example:
        Attacks:
          total_attacks: 0
          top_attacks: 2000-01-23T04:56:07.000+00:00
      properties:
        Attacks:
          $ref: "#/components/schemas/AttackReport_statistics_Attacks"
      type: object
    AttackReport_charts_attacks_series_inner:
      example:
        data:
        - 6
        - 6
        name: reports.attack.attacks
      properties:
        name:
          enum:
          - reports.attack.attacks
          type: string
        data:
          items:
            format: int64
            type: integer
          type: array
      type: object
    AttackReport_charts_attacks:
      example:
        series:
        - data:
          - 6
          - 6
          name: reports.attack.attacks
        - data:
          - 6
          - 6
          name: reports.attack.attacks
        categories:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        title: reports.attack
      properties:
        title:
          enum:
          - reports.attack
          type: string
        categories:
          items:
            format: date-time
            type: string
          type: array
        series:
          items:
            $ref: "#/components/schemas/AttackReport_charts_attacks_series_inner"
          type: array
      type: object
    AttackReport_charts:
      example:
        attacks:
          series:
          - data:
            - 6
            - 6
            name: reports.attack.attacks
          - data:
            - 6
            - 6
            name: reports.attack.attacks
          categories:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          title: reports.attack
      properties:
        attacks:
          $ref: "#/components/schemas/AttackReport_charts_attacks"
      type: object
    AttackReportMap_statistics_inner:
      example:
        country: country
        code: code
        attack: 0
        name: name
      properties:
        country:
          description: The 2-letter country code
          type: string
        name:
          description: The name of the country
          type: string
        code:
          description: The 3-letter country code
          type: string
        attack:
          description: The number of attacks
          format: int64
          type: integer
      type: object
    AttackReportMap_charts_attacks_value:
      example:
        fillKey: 6
        name: name
        value: 1
      properties:
        fillKey:
          description: A numerical key used for coloring the map
          format: int64
          type: integer
        name:
          description: The name of the country
          type: string
        value:
          description: The number of attacks
          format: int64
          type: integer
      type: object
    AttackReportMap_charts:
      example:
        attacks:
          key:
            fillKey: 6
            name: name
            value: 1
      properties:
        attacks:
          additionalProperties:
            $ref: "#/components/schemas/AttackReportMap_charts_attacks_value"
          type: object
      type: object
    AggregatedReportsChartsResponse_series_inner:
      example:
        data:
        - 1200
        - 1200
        name: Tehran - MCI
      properties:
        name:
          example: Tehran - MCI
          type: string
        data:
          items:
            example: 1200
            type: integer
          type: array
      type: object
    AggregatedReportsFilterResponse_pops_inner:
      example:
        pop: thr-mci
        label: Tehran - MCI
      properties:
        pop:
          example: thr-mci
          type: string
        label:
          example: Tehran - MCI
          type: string
      type: object
    PageRuleDiff_req_custom_headers_inner:
      example:
        name: name
        is_var: true
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        is_var:
          type: boolean
      type: object
    PageRuleDiff_image_resize:
      example:
        mode: freely
        width_by: width
        height_by: height
        status: "true"
      properties:
        status:
          enum:
          - "true"
          - "false"
          - inherit
          type: string
        height_by:
          example: height
          type: string
        width_by:
          example: width
          type: string
        mode:
          enum:
          - freely
          - short-side
          - long-side
          type: string
      type: object
    PageRuleDiff_redirect:
      example:
        status_code: 0
        enable: true
        url: http://example.com/aeiou
      properties:
        enable:
          type: boolean
        status_code:
          enum:
          - 301
          - 302
          - 307
          type: integer
        url:
          format: url
          nullable: true
          type: string
      type: object
    Troubleshoot_details_inner:
      example:
        details: details
        id: root_dns_record
        status: safe
      properties:
        id:
          enum:
          - root_dns_record
          - www_dns_record
          - mx_dns_record
          - https_redirection
          - domain_active_status
          - active_certificate
          - cloud_icon
          - domain_expiration_days
          - origin_ssl_port
          type: string
        status:
          enum:
          - safe
          - troubled
          type: string
        details:
          type: string
      type: object
    WafPreset_packages_inner_provider:
      example:
        name: name
        logo: http://example.com/aeiou
      properties:
        name:
          type: string
        logo:
          format: url
          type: string
      type: object
    WafPreset_packages_inner:
      example:
        provider:
          name: name
          logo: http://example.com/aeiou
        name: name
      properties:
        name:
          type: string
        provider:
          $ref: "#/components/schemas/WafPreset_packages_inner_provider"
      type: object
    WafSettings_log_redaction:
      description: The LogRedaction configuration is used to control which parts of
        the Web Application Firewall (WAF) logs are redacted (hidden or replaced)
        to protect sensitive information.
      example:
        headers:
        - headers
        - headers
        all_headers: false
        records: false
        replacement_string: --REDACTED--
        body: true
        cookies:
        - cookies
        - cookies
      properties:
        cookies:
          default: []
          description: List of cookie names to redact.
          items:
            type: string
          type: array
        headers:
          default:
          - authorization
          - proxy-authorization
          - cookie
          description: List of header names to redact.
          items:
            type: string
          type: array
        all_headers:
          default: false
          description: Redact all headers if true.
          type: boolean
        body:
          default: true
          description: Redact the request body if true.
          type: boolean
        records:
          default: false
          description: |
            Redacts specific log entries or entire log records. When enabled, fields within log records may be hidden or replaced with a placeholder.
          type: boolean
        replacement_string:
          default: --REDACTED--
          description: String to replace redacted values.
          enum:
          - '****'
          - "####"
          - --REDACTED--
          - ""
          type: string
      type: object
    WafPackage_provider:
      example:
        name: name
        logo: http://example.com/aeiou
      properties:
        name:
          type: string
        logo:
          format: url
          type: string
      readOnly: true
      type: object
    WafRuleset_rules_inner:
      example:
        name: name
        id: id
        params:
          score: 8
          severity: 7
      properties:
        id:
          type: string
        name:
          type: string
        params:
          example:
            score: 8
            severity: 7
          type: object
      type: object
    Subproblem_identifier:
      description: A hint that an operation would succeed if that identifier were
        omitted
      example:
        type: _example.org
        value: dns
      properties:
        type:
          example: _example.org
          readOnly: true
          type: string
        value:
          example: dns
          readOnly: true
          type: string
      readOnly: true
      type: object
    TransportLayerProxy_servers_inner:
      example:
        address: address
        fall: 1
        port: 6
        inter: 5
        weight: 15
        check: enabled
        rise: 1
      properties:
        address:
          format: hostname
          type: string
        port:
          type: integer
        weight:
          maximum: 100
          minimum: 1
          type: integer
        check:
          enum:
          - enabled
          - disabled
          type: string
        fall:
          minimum: 1
          type: integer
        inter:
          minimum: 5
          type: integer
        rise:
          minimum: 1
          type: integer
      type: object
    TransportLayerProxy_firewalls_inner:
      example:
        access: allow
        name: name
        match: IR
        description: description
        active: true
        type: geo
      properties:
        access:
          enum:
          - allow
          - deny
          type: string
        name:
          maxLength: 100
          minLength: 3
          type: string
        description:
          maxLength: 500
          minLength: 3
          type: string
        type:
          enum:
          - geo
          - ip_range
          type: string
        match:
          $ref: "#/components/schemas/TransportLayerProxyMatch"
        active:
          type: boolean
      type: object
    HttpConfig_sent_headers_inner:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    ExpectedHeaders_inner:
      example:
        value:
        - value
        - value
        key: key
      properties:
        key:
          type: string
        value:
          items:
            type: string
          type: array
      required:
      - key
      - value
      type: object
    FeaturePlanDefinition_meta_labels_inner:
      anyOf:
      - type: string
      - type: boolean
    FeaturePlanDefinition_meta:
      example:
        tip: tip
        available_params:
        - "{}"
        - "{}"
        labels:
        - FeaturePlanDefinition_meta_labels_inner
        - FeaturePlanDefinition_meta_labels_inner
      properties:
        labels:
          items:
            $ref: "#/components/schemas/FeaturePlanDefinition_meta_labels_inner"
          type: array
        tip:
          type: string
        available_params:
          items:
            type: object
          type: array
      type: object
    FeatureDefinition_plans:
      example:
        "0":
          usage_limit:
            min: 5
            max: 5
          meta:
            tip: tip
            available_params:
            - "{}"
            - "{}"
            labels:
            - FeaturePlanDefinition_meta_labels_inner
            - FeaturePlanDefinition_meta_labels_inner
          pricing:
            per_unit:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            flat:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            free_tier: 2
        "1":
          usage_limit:
            min: 5
            max: 5
          meta:
            tip: tip
            available_params:
            - "{}"
            - "{}"
            labels:
            - FeaturePlanDefinition_meta_labels_inner
            - FeaturePlanDefinition_meta_labels_inner
          pricing:
            per_unit:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            flat:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            free_tier: 2
        "2":
          usage_limit:
            min: 5
            max: 5
          meta:
            tip: tip
            available_params:
            - "{}"
            - "{}"
            labels:
            - FeaturePlanDefinition_meta_labels_inner
            - FeaturePlanDefinition_meta_labels_inner
          pricing:
            per_unit:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            flat:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            free_tier: 2
        "3":
          usage_limit:
            min: 5
            max: 5
          meta:
            tip: tip
            available_params:
            - "{}"
            - "{}"
            labels:
            - FeaturePlanDefinition_meta_labels_inner
            - FeaturePlanDefinition_meta_labels_inner
          pricing:
            per_unit:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            flat:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            free_tier: 2
        "4":
          usage_limit:
            min: 5
            max: 5
          meta:
            tip: tip
            available_params:
            - "{}"
            - "{}"
            labels:
            - FeaturePlanDefinition_meta_labels_inner
            - FeaturePlanDefinition_meta_labels_inner
          pricing:
            per_unit:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            flat:
              metric_key: metric_key
              currency: currency
              value: 7.061401241503109
            free_tier: 2
      properties:
        "0":
          $ref: "#/components/schemas/FeaturePlanDefinition"
        "1":
          $ref: "#/components/schemas/FeaturePlanDefinition"
        "2":
          $ref: "#/components/schemas/FeaturePlanDefinition"
        "3":
          $ref: "#/components/schemas/FeaturePlanDefinition"
        "4":
          $ref: "#/components/schemas/FeaturePlanDefinition"
      type: object
    FeatureDefinition_meta:
      example:
        description: description
        label: label
      properties:
        label:
          type: string
        description:
          type: string
      type: object
    Violations_violations:
      example:
        enterprise:
        - enterprise
        - enterprise
        paygo:
        - paygo
        - paygo
        growth:
        - growth
        - growth
        basic:
        - basic
        - basic
        professional:
        - professional
        - professional
      properties:
        paygo:
          items:
            type: string
          type: array
        basic:
          items:
            type: string
          type: array
        growth:
          items:
            type: string
          type: array
        professional:
          items:
            type: string
          type: array
        enterprise:
          items:
            type: string
          type: array
      type: object
    ApplicationCategory_name_translation_en:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    ApplicationCategory_name_translation:
      example:
        en:
          name: name
        fa:
          name: name
      nullable: true
      properties:
        en:
          $ref: "#/components/schemas/ApplicationCategory_name_translation_en"
        fa:
          $ref: "#/components/schemas/ApplicationCategory_name_translation_en"
      type: object
    ApplicationCategory_applications_inner:
      example:
        name: name
        description: description
        logo: logo
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        logo:
          type: string
      type: object
  securitySchemes:
    UserToken:
      bearerFormat: JWT
      scheme: bearer
      type: http
    ApiKey:
      in: header
      name: Authorization
      type: apiKey
