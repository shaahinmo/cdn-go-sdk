/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdnapi

import (
	"encoding/json"
)

// checks if the WafRulesets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WafRulesets{}

// WafRulesets struct for WafRulesets
type WafRulesets struct {
	Rulesets []WafRuleset `json:"rulesets,omitempty"`
}

// NewWafRulesets instantiates a new WafRulesets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWafRulesets() *WafRulesets {
	this := WafRulesets{}
	return &this
}

// NewWafRulesetsWithDefaults instantiates a new WafRulesets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWafRulesetsWithDefaults() *WafRulesets {
	this := WafRulesets{}
	return &this
}

// GetRulesets returns the Rulesets field value if set, zero value otherwise.
func (o *WafRulesets) GetRulesets() []WafRuleset {
	if o == nil || IsNil(o.Rulesets) {
		var ret []WafRuleset
		return ret
	}
	return o.Rulesets
}

// GetRulesetsOk returns a tuple with the Rulesets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafRulesets) GetRulesetsOk() ([]WafRuleset, bool) {
	if o == nil || IsNil(o.Rulesets) {
		return nil, false
	}
	return o.Rulesets, true
}

// HasRulesets returns a boolean if a field has been set.
func (o *WafRulesets) HasRulesets() bool {
	if o != nil && !IsNil(o.Rulesets) {
		return true
	}

	return false
}

// SetRulesets gets a reference to the given []WafRuleset and assigns it to the Rulesets field.
func (o *WafRulesets) SetRulesets(v []WafRuleset) {
	o.Rulesets = v
}

func (o WafRulesets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WafRulesets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rulesets) {
		toSerialize["rulesets"] = o.Rulesets
	}
	return toSerialize, nil
}

type NullableWafRulesets struct {
	value *WafRulesets
	isSet bool
}

func (v NullableWafRulesets) Get() *WafRulesets {
	return v.value
}

func (v *NullableWafRulesets) Set(val *WafRulesets) {
	v.value = val
	v.isSet = true
}

func (v NullableWafRulesets) IsSet() bool {
	return v.isSet
}

func (v *NullableWafRulesets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWafRulesets(val *WafRulesets) *NullableWafRulesets {
	return &NullableWafRulesets{value: val, isSet: true}
}

func (v NullableWafRulesets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWafRulesets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


