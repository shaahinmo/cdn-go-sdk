/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdnapi

import (
	"encoding/json"
	"time"
)

// checks if the CdnApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CdnApp{}

// CdnApp struct for CdnApp
type CdnApp struct {
	Id *string `json:"id,omitempty"`
	Categories []ApplicationCategory `json:"categories,omitempty"`
	Rank *float32 `json:"rank,omitempty"`
	Name *string `json:"name,omitempty"`
	Slug *string `json:"slug,omitempty"`
	ShortDescription *string `json:"short_description,omitempty"`
	Description *string `json:"description,omitempty"`
	// absolute link to logo image
	Logo *string `json:"logo,omitempty"`
	Pictures []string `json:"pictures,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	SupportEmail *string `json:"support_email,omitempty"`
	InstallJson map[string]interface{} `json:"install_json,omitempty"`
	Status *string `json:"status,omitempty"`
	LikeStats *CdnAppLikeStats `json:"like_stats,omitempty"`
	// True means she likes, False means she dislikes. null means she did not vote.
	LikeByAccount *bool `json:"like_by_account,omitempty"`
	// Deprecated: Please use 'accounts' instead.
	// Deprecated
	LikeByUser *bool `json:"like_by_user,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewCdnApp instantiates a new CdnApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnApp() *CdnApp {
	this := CdnApp{}
	return &this
}

// NewCdnAppWithDefaults instantiates a new CdnApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnAppWithDefaults() *CdnApp {
	this := CdnApp{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CdnApp) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CdnApp) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CdnApp) SetId(v string) {
	o.Id = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *CdnApp) GetCategories() []ApplicationCategory {
	if o == nil || IsNil(o.Categories) {
		var ret []ApplicationCategory
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetCategoriesOk() ([]ApplicationCategory, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *CdnApp) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []ApplicationCategory and assigns it to the Categories field.
func (o *CdnApp) SetCategories(v []ApplicationCategory) {
	o.Categories = v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *CdnApp) GetRank() float32 {
	if o == nil || IsNil(o.Rank) {
		var ret float32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetRankOk() (*float32, bool) {
	if o == nil || IsNil(o.Rank) {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *CdnApp) HasRank() bool {
	if o != nil && !IsNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given float32 and assigns it to the Rank field.
func (o *CdnApp) SetRank(v float32) {
	o.Rank = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CdnApp) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CdnApp) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CdnApp) SetName(v string) {
	o.Name = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *CdnApp) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *CdnApp) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *CdnApp) SetSlug(v string) {
	o.Slug = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *CdnApp) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *CdnApp) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *CdnApp) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CdnApp) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CdnApp) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CdnApp) SetDescription(v string) {
	o.Description = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *CdnApp) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *CdnApp) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *CdnApp) SetLogo(v string) {
	o.Logo = &v
}

// GetPictures returns the Pictures field value if set, zero value otherwise.
func (o *CdnApp) GetPictures() []string {
	if o == nil || IsNil(o.Pictures) {
		var ret []string
		return ret
	}
	return o.Pictures
}

// GetPicturesOk returns a tuple with the Pictures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetPicturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Pictures) {
		return nil, false
	}
	return o.Pictures, true
}

// HasPictures returns a boolean if a field has been set.
func (o *CdnApp) HasPictures() bool {
	if o != nil && !IsNil(o.Pictures) {
		return true
	}

	return false
}

// SetPictures gets a reference to the given []string and assigns it to the Pictures field.
func (o *CdnApp) SetPictures(v []string) {
	o.Pictures = v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *CdnApp) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *CdnApp) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *CdnApp) SetVendor(v string) {
	o.Vendor = &v
}

// GetSupportEmail returns the SupportEmail field value if set, zero value otherwise.
func (o *CdnApp) GetSupportEmail() string {
	if o == nil || IsNil(o.SupportEmail) {
		var ret string
		return ret
	}
	return *o.SupportEmail
}

// GetSupportEmailOk returns a tuple with the SupportEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetSupportEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SupportEmail) {
		return nil, false
	}
	return o.SupportEmail, true
}

// HasSupportEmail returns a boolean if a field has been set.
func (o *CdnApp) HasSupportEmail() bool {
	if o != nil && !IsNil(o.SupportEmail) {
		return true
	}

	return false
}

// SetSupportEmail gets a reference to the given string and assigns it to the SupportEmail field.
func (o *CdnApp) SetSupportEmail(v string) {
	o.SupportEmail = &v
}

// GetInstallJson returns the InstallJson field value if set, zero value otherwise.
func (o *CdnApp) GetInstallJson() map[string]interface{} {
	if o == nil || IsNil(o.InstallJson) {
		var ret map[string]interface{}
		return ret
	}
	return o.InstallJson
}

// GetInstallJsonOk returns a tuple with the InstallJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetInstallJsonOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InstallJson) {
		return map[string]interface{}{}, false
	}
	return o.InstallJson, true
}

// HasInstallJson returns a boolean if a field has been set.
func (o *CdnApp) HasInstallJson() bool {
	if o != nil && !IsNil(o.InstallJson) {
		return true
	}

	return false
}

// SetInstallJson gets a reference to the given map[string]interface{} and assigns it to the InstallJson field.
func (o *CdnApp) SetInstallJson(v map[string]interface{}) {
	o.InstallJson = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CdnApp) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CdnApp) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CdnApp) SetStatus(v string) {
	o.Status = &v
}

// GetLikeStats returns the LikeStats field value if set, zero value otherwise.
func (o *CdnApp) GetLikeStats() CdnAppLikeStats {
	if o == nil || IsNil(o.LikeStats) {
		var ret CdnAppLikeStats
		return ret
	}
	return *o.LikeStats
}

// GetLikeStatsOk returns a tuple with the LikeStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetLikeStatsOk() (*CdnAppLikeStats, bool) {
	if o == nil || IsNil(o.LikeStats) {
		return nil, false
	}
	return o.LikeStats, true
}

// HasLikeStats returns a boolean if a field has been set.
func (o *CdnApp) HasLikeStats() bool {
	if o != nil && !IsNil(o.LikeStats) {
		return true
	}

	return false
}

// SetLikeStats gets a reference to the given CdnAppLikeStats and assigns it to the LikeStats field.
func (o *CdnApp) SetLikeStats(v CdnAppLikeStats) {
	o.LikeStats = &v
}

// GetLikeByAccount returns the LikeByAccount field value if set, zero value otherwise.
func (o *CdnApp) GetLikeByAccount() bool {
	if o == nil || IsNil(o.LikeByAccount) {
		var ret bool
		return ret
	}
	return *o.LikeByAccount
}

// GetLikeByAccountOk returns a tuple with the LikeByAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetLikeByAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.LikeByAccount) {
		return nil, false
	}
	return o.LikeByAccount, true
}

// HasLikeByAccount returns a boolean if a field has been set.
func (o *CdnApp) HasLikeByAccount() bool {
	if o != nil && !IsNil(o.LikeByAccount) {
		return true
	}

	return false
}

// SetLikeByAccount gets a reference to the given bool and assigns it to the LikeByAccount field.
func (o *CdnApp) SetLikeByAccount(v bool) {
	o.LikeByAccount = &v
}

// GetLikeByUser returns the LikeByUser field value if set, zero value otherwise.
// Deprecated
func (o *CdnApp) GetLikeByUser() bool {
	if o == nil || IsNil(o.LikeByUser) {
		var ret bool
		return ret
	}
	return *o.LikeByUser
}

// GetLikeByUserOk returns a tuple with the LikeByUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CdnApp) GetLikeByUserOk() (*bool, bool) {
	if o == nil || IsNil(o.LikeByUser) {
		return nil, false
	}
	return o.LikeByUser, true
}

// HasLikeByUser returns a boolean if a field has been set.
func (o *CdnApp) HasLikeByUser() bool {
	if o != nil && !IsNil(o.LikeByUser) {
		return true
	}

	return false
}

// SetLikeByUser gets a reference to the given bool and assigns it to the LikeByUser field.
// Deprecated
func (o *CdnApp) SetLikeByUser(v bool) {
	o.LikeByUser = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CdnApp) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CdnApp) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CdnApp) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CdnApp) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CdnApp) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CdnApp) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CdnApp) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o CdnApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CdnApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["short_description"] = o.ShortDescription
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Pictures) {
		toSerialize["pictures"] = o.Pictures
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.SupportEmail) {
		toSerialize["support_email"] = o.SupportEmail
	}
	if !IsNil(o.InstallJson) {
		toSerialize["install_json"] = o.InstallJson
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.LikeStats) {
		toSerialize["like_stats"] = o.LikeStats
	}
	if !IsNil(o.LikeByAccount) {
		toSerialize["like_by_account"] = o.LikeByAccount
	}
	if !IsNil(o.LikeByUser) {
		toSerialize["like_by_user"] = o.LikeByUser
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableCdnApp struct {
	value *CdnApp
	isSet bool
}

func (v NullableCdnApp) Get() *CdnApp {
	return v.value
}

func (v *NullableCdnApp) Set(val *CdnApp) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnApp) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnApp(val *CdnApp) *NullableCdnApp {
	return &NullableCdnApp{value: val, isSet: true}
}

func (v NullableCdnApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


