/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdnapi

import (
	"encoding/json"
)

// checks if the FeaturePricing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeaturePricing{}

// FeaturePricing struct for FeaturePricing
type FeaturePricing struct {
	FreeTier *int32 `json:"free_tier,omitempty"`
	Flat NullableFeaturePrice `json:"flat,omitempty"`
	PerUnit NullableFeaturePrice `json:"per_unit,omitempty"`
}

// NewFeaturePricing instantiates a new FeaturePricing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeaturePricing() *FeaturePricing {
	this := FeaturePricing{}
	return &this
}

// NewFeaturePricingWithDefaults instantiates a new FeaturePricing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeaturePricingWithDefaults() *FeaturePricing {
	this := FeaturePricing{}
	return &this
}

// GetFreeTier returns the FreeTier field value if set, zero value otherwise.
func (o *FeaturePricing) GetFreeTier() int32 {
	if o == nil || IsNil(o.FreeTier) {
		var ret int32
		return ret
	}
	return *o.FreeTier
}

// GetFreeTierOk returns a tuple with the FreeTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeaturePricing) GetFreeTierOk() (*int32, bool) {
	if o == nil || IsNil(o.FreeTier) {
		return nil, false
	}
	return o.FreeTier, true
}

// HasFreeTier returns a boolean if a field has been set.
func (o *FeaturePricing) HasFreeTier() bool {
	if o != nil && !IsNil(o.FreeTier) {
		return true
	}

	return false
}

// SetFreeTier gets a reference to the given int32 and assigns it to the FreeTier field.
func (o *FeaturePricing) SetFreeTier(v int32) {
	o.FreeTier = &v
}

// GetFlat returns the Flat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FeaturePricing) GetFlat() FeaturePrice {
	if o == nil || IsNil(o.Flat.Get()) {
		var ret FeaturePrice
		return ret
	}
	return *o.Flat.Get()
}

// GetFlatOk returns a tuple with the Flat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FeaturePricing) GetFlatOk() (*FeaturePrice, bool) {
	if o == nil {
		return nil, false
	}
	return o.Flat.Get(), o.Flat.IsSet()
}

// HasFlat returns a boolean if a field has been set.
func (o *FeaturePricing) HasFlat() bool {
	if o != nil && o.Flat.IsSet() {
		return true
	}

	return false
}

// SetFlat gets a reference to the given NullableFeaturePrice and assigns it to the Flat field.
func (o *FeaturePricing) SetFlat(v FeaturePrice) {
	o.Flat.Set(&v)
}
// SetFlatNil sets the value for Flat to be an explicit nil
func (o *FeaturePricing) SetFlatNil() {
	o.Flat.Set(nil)
}

// UnsetFlat ensures that no value is present for Flat, not even an explicit nil
func (o *FeaturePricing) UnsetFlat() {
	o.Flat.Unset()
}

// GetPerUnit returns the PerUnit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FeaturePricing) GetPerUnit() FeaturePrice {
	if o == nil || IsNil(o.PerUnit.Get()) {
		var ret FeaturePrice
		return ret
	}
	return *o.PerUnit.Get()
}

// GetPerUnitOk returns a tuple with the PerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FeaturePricing) GetPerUnitOk() (*FeaturePrice, bool) {
	if o == nil {
		return nil, false
	}
	return o.PerUnit.Get(), o.PerUnit.IsSet()
}

// HasPerUnit returns a boolean if a field has been set.
func (o *FeaturePricing) HasPerUnit() bool {
	if o != nil && o.PerUnit.IsSet() {
		return true
	}

	return false
}

// SetPerUnit gets a reference to the given NullableFeaturePrice and assigns it to the PerUnit field.
func (o *FeaturePricing) SetPerUnit(v FeaturePrice) {
	o.PerUnit.Set(&v)
}
// SetPerUnitNil sets the value for PerUnit to be an explicit nil
func (o *FeaturePricing) SetPerUnitNil() {
	o.PerUnit.Set(nil)
}

// UnsetPerUnit ensures that no value is present for PerUnit, not even an explicit nil
func (o *FeaturePricing) UnsetPerUnit() {
	o.PerUnit.Unset()
}

func (o FeaturePricing) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeaturePricing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FreeTier) {
		toSerialize["free_tier"] = o.FreeTier
	}
	if o.Flat.IsSet() {
		toSerialize["flat"] = o.Flat.Get()
	}
	if o.PerUnit.IsSet() {
		toSerialize["per_unit"] = o.PerUnit.Get()
	}
	return toSerialize, nil
}

type NullableFeaturePricing struct {
	value *FeaturePricing
	isSet bool
}

func (v NullableFeaturePricing) Get() *FeaturePricing {
	return v.value
}

func (v *NullableFeaturePricing) Set(val *FeaturePricing) {
	v.value = val
	v.isSet = true
}

func (v NullableFeaturePricing) IsSet() bool {
	return v.isSet
}

func (v *NullableFeaturePricing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeaturePricing(val *FeaturePricing) *NullableFeaturePricing {
	return &NullableFeaturePricing{value: val, isSet: true}
}

func (v NullableFeaturePricing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeaturePricing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


