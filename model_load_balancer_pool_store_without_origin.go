/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn-api

import (
	"encoding/json"
)

// checks if the LoadBalancerPoolStoreWithoutOrigin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerPoolStoreWithoutOrigin{}

// LoadBalancerPoolStoreWithoutOrigin struct for LoadBalancerPoolStoreWithoutOrigin
type LoadBalancerPoolStoreWithoutOrigin struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Status *bool `json:"status,omitempty"`
	// Zero means the default pool
	Priority *int32 `json:"priority,omitempty"`
	Method *string `json:"method,omitempty"`
	Keepalive *string `json:"keepalive,omitempty"`
	// Try another server when the first one failed if on
	NextUpstreamTcp *string `json:"next_upstream_tcp,omitempty"`
	NextUpstreamTcpCodes *NextUpstreamTcpCodes `json:"next_upstream_tcp_codes,omitempty"`
	Regions []string `json:"regions,omitempty"`
}

// NewLoadBalancerPoolStoreWithoutOrigin instantiates a new LoadBalancerPoolStoreWithoutOrigin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerPoolStoreWithoutOrigin() *LoadBalancerPoolStoreWithoutOrigin {
	this := LoadBalancerPoolStoreWithoutOrigin{}
	var keepalive string = "off"
	this.Keepalive = &keepalive
	var nextUpstreamTcp string = "off"
	this.NextUpstreamTcp = &nextUpstreamTcp
	return &this
}

// NewLoadBalancerPoolStoreWithoutOriginWithDefaults instantiates a new LoadBalancerPoolStoreWithoutOrigin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerPoolStoreWithoutOriginWithDefaults() *LoadBalancerPoolStoreWithoutOrigin {
	this := LoadBalancerPoolStoreWithoutOrigin{}
	var keepalive string = "off"
	this.Keepalive = &keepalive
	var nextUpstreamTcp string = "off"
	this.NextUpstreamTcp = &nextUpstreamTcp
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetStatus(v bool) {
	o.Status = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetPriority(v int32) {
	o.Priority = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetMethod(v string) {
	o.Method = &v
}

// GetKeepalive returns the Keepalive field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetKeepalive() string {
	if o == nil || IsNil(o.Keepalive) {
		var ret string
		return ret
	}
	return *o.Keepalive
}

// GetKeepaliveOk returns a tuple with the Keepalive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetKeepaliveOk() (*string, bool) {
	if o == nil || IsNil(o.Keepalive) {
		return nil, false
	}
	return o.Keepalive, true
}

// HasKeepalive returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasKeepalive() bool {
	if o != nil && !IsNil(o.Keepalive) {
		return true
	}

	return false
}

// SetKeepalive gets a reference to the given string and assigns it to the Keepalive field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetKeepalive(v string) {
	o.Keepalive = &v
}

// GetNextUpstreamTcp returns the NextUpstreamTcp field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetNextUpstreamTcp() string {
	if o == nil || IsNil(o.NextUpstreamTcp) {
		var ret string
		return ret
	}
	return *o.NextUpstreamTcp
}

// GetNextUpstreamTcpOk returns a tuple with the NextUpstreamTcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetNextUpstreamTcpOk() (*string, bool) {
	if o == nil || IsNil(o.NextUpstreamTcp) {
		return nil, false
	}
	return o.NextUpstreamTcp, true
}

// HasNextUpstreamTcp returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasNextUpstreamTcp() bool {
	if o != nil && !IsNil(o.NextUpstreamTcp) {
		return true
	}

	return false
}

// SetNextUpstreamTcp gets a reference to the given string and assigns it to the NextUpstreamTcp field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetNextUpstreamTcp(v string) {
	o.NextUpstreamTcp = &v
}

// GetNextUpstreamTcpCodes returns the NextUpstreamTcpCodes field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetNextUpstreamTcpCodes() NextUpstreamTcpCodes {
	if o == nil || IsNil(o.NextUpstreamTcpCodes) {
		var ret NextUpstreamTcpCodes
		return ret
	}
	return *o.NextUpstreamTcpCodes
}

// GetNextUpstreamTcpCodesOk returns a tuple with the NextUpstreamTcpCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetNextUpstreamTcpCodesOk() (*NextUpstreamTcpCodes, bool) {
	if o == nil || IsNil(o.NextUpstreamTcpCodes) {
		return nil, false
	}
	return o.NextUpstreamTcpCodes, true
}

// HasNextUpstreamTcpCodes returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasNextUpstreamTcpCodes() bool {
	if o != nil && !IsNil(o.NextUpstreamTcpCodes) {
		return true
	}

	return false
}

// SetNextUpstreamTcpCodes gets a reference to the given NextUpstreamTcpCodes and assigns it to the NextUpstreamTcpCodes field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetNextUpstreamTcpCodes(v NextUpstreamTcpCodes) {
	o.NextUpstreamTcpCodes = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetRegions() []string {
	if o == nil || IsNil(o.Regions) {
		var ret []string
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) GetRegionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *LoadBalancerPoolStoreWithoutOrigin) HasRegions() bool {
	if o != nil && !IsNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []string and assigns it to the Regions field.
func (o *LoadBalancerPoolStoreWithoutOrigin) SetRegions(v []string) {
	o.Regions = v
}

func (o LoadBalancerPoolStoreWithoutOrigin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerPoolStoreWithoutOrigin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Keepalive) {
		toSerialize["keepalive"] = o.Keepalive
	}
	if !IsNil(o.NextUpstreamTcp) {
		toSerialize["next_upstream_tcp"] = o.NextUpstreamTcp
	}
	if !IsNil(o.NextUpstreamTcpCodes) {
		toSerialize["next_upstream_tcp_codes"] = o.NextUpstreamTcpCodes
	}
	if !IsNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	return toSerialize, nil
}

type NullableLoadBalancerPoolStoreWithoutOrigin struct {
	value *LoadBalancerPoolStoreWithoutOrigin
	isSet bool
}

func (v NullableLoadBalancerPoolStoreWithoutOrigin) Get() *LoadBalancerPoolStoreWithoutOrigin {
	return v.value
}

func (v *NullableLoadBalancerPoolStoreWithoutOrigin) Set(val *LoadBalancerPoolStoreWithoutOrigin) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerPoolStoreWithoutOrigin) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerPoolStoreWithoutOrigin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerPoolStoreWithoutOrigin(val *LoadBalancerPoolStoreWithoutOrigin) *NullableLoadBalancerPoolStoreWithoutOrigin {
	return &NullableLoadBalancerPoolStoreWithoutOrigin{value: val, isSet: true}
}

func (v NullableLoadBalancerPoolStoreWithoutOrigin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerPoolStoreWithoutOrigin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


