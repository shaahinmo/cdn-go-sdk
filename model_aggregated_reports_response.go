/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdnapi

import (
	"encoding/json"
)

// checks if the AggregatedReportsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggregatedReportsResponse{}

// AggregatedReportsResponse struct for AggregatedReportsResponse
type AggregatedReportsResponse struct {
	Domain *string `json:"domain,omitempty"`
	TotalDownstream *int32 `json:"total_downstream,omitempty"`
	TotalUpstream *int32 `json:"total_upstream,omitempty"`
	TotalRequests *int32 `json:"total_requests,omitempty"`
	Asn NullableInt32 `json:"asn,omitempty"`
	Pop NullableString `json:"pop,omitempty"`
}

// NewAggregatedReportsResponse instantiates a new AggregatedReportsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregatedReportsResponse() *AggregatedReportsResponse {
	this := AggregatedReportsResponse{}
	return &this
}

// NewAggregatedReportsResponseWithDefaults instantiates a new AggregatedReportsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregatedReportsResponseWithDefaults() *AggregatedReportsResponse {
	this := AggregatedReportsResponse{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *AggregatedReportsResponse) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregatedReportsResponse) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *AggregatedReportsResponse) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *AggregatedReportsResponse) SetDomain(v string) {
	o.Domain = &v
}

// GetTotalDownstream returns the TotalDownstream field value if set, zero value otherwise.
func (o *AggregatedReportsResponse) GetTotalDownstream() int32 {
	if o == nil || IsNil(o.TotalDownstream) {
		var ret int32
		return ret
	}
	return *o.TotalDownstream
}

// GetTotalDownstreamOk returns a tuple with the TotalDownstream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregatedReportsResponse) GetTotalDownstreamOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalDownstream) {
		return nil, false
	}
	return o.TotalDownstream, true
}

// HasTotalDownstream returns a boolean if a field has been set.
func (o *AggregatedReportsResponse) HasTotalDownstream() bool {
	if o != nil && !IsNil(o.TotalDownstream) {
		return true
	}

	return false
}

// SetTotalDownstream gets a reference to the given int32 and assigns it to the TotalDownstream field.
func (o *AggregatedReportsResponse) SetTotalDownstream(v int32) {
	o.TotalDownstream = &v
}

// GetTotalUpstream returns the TotalUpstream field value if set, zero value otherwise.
func (o *AggregatedReportsResponse) GetTotalUpstream() int32 {
	if o == nil || IsNil(o.TotalUpstream) {
		var ret int32
		return ret
	}
	return *o.TotalUpstream
}

// GetTotalUpstreamOk returns a tuple with the TotalUpstream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregatedReportsResponse) GetTotalUpstreamOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalUpstream) {
		return nil, false
	}
	return o.TotalUpstream, true
}

// HasTotalUpstream returns a boolean if a field has been set.
func (o *AggregatedReportsResponse) HasTotalUpstream() bool {
	if o != nil && !IsNil(o.TotalUpstream) {
		return true
	}

	return false
}

// SetTotalUpstream gets a reference to the given int32 and assigns it to the TotalUpstream field.
func (o *AggregatedReportsResponse) SetTotalUpstream(v int32) {
	o.TotalUpstream = &v
}

// GetTotalRequests returns the TotalRequests field value if set, zero value otherwise.
func (o *AggregatedReportsResponse) GetTotalRequests() int32 {
	if o == nil || IsNil(o.TotalRequests) {
		var ret int32
		return ret
	}
	return *o.TotalRequests
}

// GetTotalRequestsOk returns a tuple with the TotalRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregatedReportsResponse) GetTotalRequestsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRequests) {
		return nil, false
	}
	return o.TotalRequests, true
}

// HasTotalRequests returns a boolean if a field has been set.
func (o *AggregatedReportsResponse) HasTotalRequests() bool {
	if o != nil && !IsNil(o.TotalRequests) {
		return true
	}

	return false
}

// SetTotalRequests gets a reference to the given int32 and assigns it to the TotalRequests field.
func (o *AggregatedReportsResponse) SetTotalRequests(v int32) {
	o.TotalRequests = &v
}

// GetAsn returns the Asn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AggregatedReportsResponse) GetAsn() int32 {
	if o == nil || IsNil(o.Asn.Get()) {
		var ret int32
		return ret
	}
	return *o.Asn.Get()
}

// GetAsnOk returns a tuple with the Asn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AggregatedReportsResponse) GetAsnOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Asn.Get(), o.Asn.IsSet()
}

// HasAsn returns a boolean if a field has been set.
func (o *AggregatedReportsResponse) HasAsn() bool {
	if o != nil && o.Asn.IsSet() {
		return true
	}

	return false
}

// SetAsn gets a reference to the given NullableInt32 and assigns it to the Asn field.
func (o *AggregatedReportsResponse) SetAsn(v int32) {
	o.Asn.Set(&v)
}
// SetAsnNil sets the value for Asn to be an explicit nil
func (o *AggregatedReportsResponse) SetAsnNil() {
	o.Asn.Set(nil)
}

// UnsetAsn ensures that no value is present for Asn, not even an explicit nil
func (o *AggregatedReportsResponse) UnsetAsn() {
	o.Asn.Unset()
}

// GetPop returns the Pop field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AggregatedReportsResponse) GetPop() string {
	if o == nil || IsNil(o.Pop.Get()) {
		var ret string
		return ret
	}
	return *o.Pop.Get()
}

// GetPopOk returns a tuple with the Pop field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AggregatedReportsResponse) GetPopOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pop.Get(), o.Pop.IsSet()
}

// HasPop returns a boolean if a field has been set.
func (o *AggregatedReportsResponse) HasPop() bool {
	if o != nil && o.Pop.IsSet() {
		return true
	}

	return false
}

// SetPop gets a reference to the given NullableString and assigns it to the Pop field.
func (o *AggregatedReportsResponse) SetPop(v string) {
	o.Pop.Set(&v)
}
// SetPopNil sets the value for Pop to be an explicit nil
func (o *AggregatedReportsResponse) SetPopNil() {
	o.Pop.Set(nil)
}

// UnsetPop ensures that no value is present for Pop, not even an explicit nil
func (o *AggregatedReportsResponse) UnsetPop() {
	o.Pop.Unset()
}

func (o AggregatedReportsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggregatedReportsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.TotalDownstream) {
		toSerialize["total_downstream"] = o.TotalDownstream
	}
	if !IsNil(o.TotalUpstream) {
		toSerialize["total_upstream"] = o.TotalUpstream
	}
	if !IsNil(o.TotalRequests) {
		toSerialize["total_requests"] = o.TotalRequests
	}
	if o.Asn.IsSet() {
		toSerialize["asn"] = o.Asn.Get()
	}
	if o.Pop.IsSet() {
		toSerialize["pop"] = o.Pop.Get()
	}
	return toSerialize, nil
}

type NullableAggregatedReportsResponse struct {
	value *AggregatedReportsResponse
	isSet bool
}

func (v NullableAggregatedReportsResponse) Get() *AggregatedReportsResponse {
	return v.value
}

func (v *NullableAggregatedReportsResponse) Set(val *AggregatedReportsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregatedReportsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregatedReportsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregatedReportsResponse(val *AggregatedReportsResponse) *NullableAggregatedReportsResponse {
	return &NullableAggregatedReportsResponse{value: val, isSet: true}
}

func (v NullableAggregatedReportsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregatedReportsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


