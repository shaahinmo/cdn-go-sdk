/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn-api

import (
	"encoding/json"
)

// checks if the DomainsClaimsStore422Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainsClaimsStore422Response{}

// DomainsClaimsStore422Response struct for DomainsClaimsStore422Response
type DomainsClaimsStore422Response struct {
	Errors []string `json:"errors,omitempty"`
}

// NewDomainsClaimsStore422Response instantiates a new DomainsClaimsStore422Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainsClaimsStore422Response() *DomainsClaimsStore422Response {
	this := DomainsClaimsStore422Response{}
	return &this
}

// NewDomainsClaimsStore422ResponseWithDefaults instantiates a new DomainsClaimsStore422Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainsClaimsStore422ResponseWithDefaults() *DomainsClaimsStore422Response {
	this := DomainsClaimsStore422Response{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *DomainsClaimsStore422Response) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsClaimsStore422Response) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *DomainsClaimsStore422Response) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *DomainsClaimsStore422Response) SetErrors(v []string) {
	o.Errors = v
}

func (o DomainsClaimsStore422Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainsClaimsStore422Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableDomainsClaimsStore422Response struct {
	value *DomainsClaimsStore422Response
	isSet bool
}

func (v NullableDomainsClaimsStore422Response) Get() *DomainsClaimsStore422Response {
	return v.value
}

func (v *NullableDomainsClaimsStore422Response) Set(val *DomainsClaimsStore422Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainsClaimsStore422Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainsClaimsStore422Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainsClaimsStore422Response(val *DomainsClaimsStore422Response) *NullableDomainsClaimsStore422Response {
	return &NullableDomainsClaimsStore422Response{value: val, isSet: true}
}

func (v NullableDomainsClaimsStore422Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainsClaimsStore422Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


