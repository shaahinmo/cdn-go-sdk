/*
ArvanCloud CDN Services

Testing MetricExportersAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package cdn-api

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/shaahinmo/cdn-go-sdk"
)

func Test_cdn-api_MetricExportersAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test MetricExportersAPIService MetricExportersDestroy", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var domain string
		var metricExporterId string

		resp, httpRes, err := apiClient.MetricExportersAPI.MetricExportersDestroy(context.Background(), domain, metricExporterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MetricExportersAPIService MetricExportersIndex", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.MetricExportersAPI.MetricExportersIndex(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MetricExportersAPIService MetricExportersShow", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var domain string
		var metricExporterId string

		resp, httpRes, err := apiClient.MetricExportersAPI.MetricExportersShow(context.Background(), domain, metricExporterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MetricExportersAPIService MetricExportersStore", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var domain string

		resp, httpRes, err := apiClient.MetricExportersAPI.MetricExportersStore(context.Background(), domain).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MetricExportersAPIService MetricExportersUpdate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var domain string
		var metricExporterId string

		resp, httpRes, err := apiClient.MetricExportersAPI.MetricExportersUpdate(context.Background(), domain, metricExporterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MetricExportersAPIService MetricExportersUpdateStatus", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var domain string
		var metricExporterId string

		resp, httpRes, err := apiClient.MetricExportersAPI.MetricExportersUpdateStatus(context.Background(), domain, metricExporterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
