/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdnapi

import (
	"encoding/json"
)

// checks if the WafRulesetRulesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WafRulesetRulesInner{}

// WafRulesetRulesInner struct for WafRulesetRulesInner
type WafRulesetRulesInner struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Params map[string]interface{} `json:"params,omitempty"`
}

// NewWafRulesetRulesInner instantiates a new WafRulesetRulesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWafRulesetRulesInner() *WafRulesetRulesInner {
	this := WafRulesetRulesInner{}
	return &this
}

// NewWafRulesetRulesInnerWithDefaults instantiates a new WafRulesetRulesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWafRulesetRulesInnerWithDefaults() *WafRulesetRulesInner {
	this := WafRulesetRulesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WafRulesetRulesInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafRulesetRulesInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WafRulesetRulesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WafRulesetRulesInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WafRulesetRulesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafRulesetRulesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WafRulesetRulesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WafRulesetRulesInner) SetName(v string) {
	o.Name = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *WafRulesetRulesInner) GetParams() map[string]interface{} {
	if o == nil || IsNil(o.Params) {
		var ret map[string]interface{}
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WafRulesetRulesInner) GetParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Params) {
		return map[string]interface{}{}, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *WafRulesetRulesInner) HasParams() bool {
	if o != nil && !IsNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string]interface{} and assigns it to the Params field.
func (o *WafRulesetRulesInner) SetParams(v map[string]interface{}) {
	o.Params = v
}

func (o WafRulesetRulesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WafRulesetRulesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	return toSerialize, nil
}

type NullableWafRulesetRulesInner struct {
	value *WafRulesetRulesInner
	isSet bool
}

func (v NullableWafRulesetRulesInner) Get() *WafRulesetRulesInner {
	return v.value
}

func (v *NullableWafRulesetRulesInner) Set(val *WafRulesetRulesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWafRulesetRulesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWafRulesetRulesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWafRulesetRulesInner(val *WafRulesetRulesInner) *NullableWafRulesetRulesInner {
	return &NullableWafRulesetRulesInner{value: val, isSet: true}
}

func (v NullableWafRulesetRulesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWafRulesetRulesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


